{"version":3,"file":"lightning.es5.min.js","sources":["../src/tree/StageUtils.mjs","../src/tree/Utils.mjs","../src/tree/Base.mjs","../src/flex/layout/SpacingCalculator.mjs","../src/flex/layout/ContentAligner.mjs","../src/flex/FlexUtils.mjs","../src/flex/layout/line/SizeShrinker.mjs","../src/flex/layout/line/SizeGrower.mjs","../src/flex/layout/line/ItemPositioner.mjs","../src/flex/layout/line/ItemAligner.mjs","../src/flex/layout/line/LineLayout.mjs","../src/flex/layout/LineLayouter.mjs","../src/flex/layout/ItemCoordinatesUpdater.mjs","../src/flex/layout/FlexLayout.mjs","../src/flex/FlexContainer.mjs","../src/flex/FlexItem.mjs","../src/flex/FlexTarget.mjs","../src/tree/TextureSource.mjs","../src/tree/core/ElementTexturizer.mjs","../src/tree/core/ElementCore.mjs","../src/EventEmitter.mjs","../src/tree/Shader.mjs","../src/tree/Texture.mjs","../src/textures/ImageTexture.mjs","../src/textures/TextTextureRendererUtils.mts","../src/textures/TextTextureRenderer.mjs","../src/textures/TextTextureRendererAdvanced.mjs","../src/textures/TextTexture.mjs","../src/textures/SourceTexture.mjs","../src/animation/Transition.mjs","../src/tree/ObjectList.mjs","../src/tree/ElementChildList.mjs","../src/tree/Element.mjs","../src/application/StateMachine.mjs","../src/application/Component.mjs","../src/tree/core/CoreQuadList.mjs","../src/renderer/webgl/WebGLCoreQuadList.mjs","../src/tree/core/CoreQuadOperation.mjs","../src/renderer/webgl/WebGLCoreQuadOperation.mjs","../src/tree/core/CoreRenderExecutor.mjs","../src/renderer/webgl/WebGLCoreRenderExecutor.mjs","../src/tree/core/CoreRenderState.mjs","../src/renderer/webgl/WebGLShaderProgram.mjs","../src/renderer/webgl/WebGLShader.mjs","../src/renderer/webgl/shaders/DefaultShader.mjs","../src/renderer/Renderer.mjs","../src/renderer/webgl/WebGLRenderer.mjs","../src/renderer/c2d/C2dCoreQuadList.mjs","../src/renderer/c2d/C2dCoreQuadOperation.mjs","../src/renderer/c2d/C2dCoreRenderExecutor.mjs","../src/renderer/c2d/C2dShader.mjs","../src/renderer/c2d/shaders/DefaultShader.mjs","../src/renderer/c2d/C2dTextureTintManager.mjs","../src/renderer/c2d/C2dRenderer.mjs","../src/renderer/spark/shaders/SparkShader.mjs","../src/renderer/spark/SparkRenderer.mjs","../src/platforms/browser/ImageWorker.mjs","../src/platforms/browser/WebPlatform.mjs","../src/platforms/PlatformLoader.mjs","../src/tools/WebGLStateManager.mjs","../src/tree/TextureManager.mjs","../src/tree/TextureThrottler.mjs","../src/tree/core/CoreContext.mjs","../src/animation/TransitionSettings.mjs","../src/animation/TransitionManager.mjs","../src/tools/MultiSpline.mjs","../src/animation/AnimationActionSettings.mjs","../src/animation/AnimationSettings.mjs","../src/animation/Animation.mjs","../src/animation/AnimationManager.mjs","../src/textures/RectangleTexture.mjs","../src/tree/Stage.mjs","../src/application/Application.mjs","../src/textures/StaticCanvasTexture.mjs","../src/tools/Tools.mjs","../src/tools/ObjMerger.mjs","../src/tools/ObjectListProxy.mjs","../src/tools/ObjectListWrapper.mjs","../src/textures/NoiseTexture.mjs","../src/textures/HtmlTexture.mjs","../src/textures/StaticTexture.mjs","../src/components/ListComponent.mjs","../src/renderer/webgl/shaders/LinearBlurShader.mjs","../src/renderer/webgl/shaders/BoxBlurShader.mjs","../src/renderer/c2d/shaders/BlurShader.mjs","../src/components/FastBlurComponent.mjs","../src/components/BloomComponent.mjs","../src/components/SmoothScaleComponent.mjs","../src/components/BorderComponent.mjs","../src/renderer/common/shaders/GrayscaleShader.mjs","../src/renderer/webgl/shaders/DitheringShader.mjs","../src/renderer/webgl/shaders/CircularPushShader.mjs","../src/renderer/webgl/shaders/InversionShader.mjs","../src/renderer/webgl/shaders/OutlineShader.mjs","../src/renderer/webgl/shaders/PixelateShader.mjs","../src/renderer/webgl/shaders/RadialFilterShader.mjs","../src/renderer/webgl/shaders/RoundedRectangleShader.mjs","../src/renderer/webgl/shaders/FadeOutShader.mjs","../src/renderer/webgl/shaders/VignetteShader.mjs","../src/renderer/webgl/shaders/SpinnerShader.mjs","../src/renderer/webgl/shaders/HoleShader.mjs","../src/renderer/webgl/shaders/RadialGradientShader.mjs","../src/renderer/webgl/shaders/Light3dShader.mjs","../src/renderer/webgl/shaders/PerspectiveShader.mjs","../src/renderer/webgl/shaders/MagnifierShader.mjs","../src/renderer/webgl/shaders/SpinnerShader2.mjs","../src/lightning.mjs"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StageUtils {\n\n    static mergeNumbers(v1, v2, p) {\n        return v1 * p + v2 * (1 - p);\n    };\n\n    static rgb(r, g, b) {\n        return (r << 16) + (g << 8) + b + (255 * 16777216);\n    };\n\n    static rgba(r, g, b, a) {\n        return (r << 16) + (g << 8) + b + (((a * 255) | 0) * 16777216);\n    };\n\n    static getRgbString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        return 'rgb(' + r + ',' + g + ',' + b + ')';\n    };\n\n    static getRgbaString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        let a = ((color / 16777216) | 0) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaStringFromArray(color) {\n        let r = Math.floor(color[0] * 255);\n        let g = Math.floor(color[1] * 255);\n        let b = Math.floor(color[2] * 255);\n        let a = Math.floor(color[3] * 255) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r / 255, g / 255, b / 255, a / 255];\n    };\n\n    static getRgbComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        return [r / 255, g / 255, b / 255];\n    };\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static mergeMultiColors(c, p) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1 * p[i];\n            g += g1 * p[i];\n            b += b1 * p[i];\n            a += a1 * p[i];\n            t += p[i];\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeMultiColorsEqual(c) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1;\n            g += g1;\n            b += b1;\n            a += a1;\n            t += 1.0;\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeColorAlpha(c, alpha) {\n        let a = ((c / 16777216 | 0) * alpha) | 0;\n        return (((((c >> 16) & 0xff) * a) / 255) & 0xff) +\n            ((((c & 0xff00) * a) / 255) & 0xff00) +\n            (((((c & 0xff) << 16) * a) / 255) & 0xff0000) +\n            (a << 24);\n    };\n\n    static rad(deg) {\n        return deg * (Math.PI / 180);\n    };\n\n    static getTimingBezier(a, b, c, d) {\n        let xc = 3.0 * a;\n        let xb = 3.0 * (c - a) - xc;\n        let xa = 1.0 - xc - xb;\n        let yc = 3.0 * b;\n        let yb = 3.0 * (d - b) - yc;\n        let ya = 1.0 - yc - yb;\n\n        return function (time) {\n            if (time >= 1.0) {\n                return 1;\n            }\n            if (time <= 0) {\n                return 0;\n            }\n\n            let t = 0.5, cbx, cbxd, dx;\n\n            for (let it = 0; it < 20; it++) {\n                cbx = t * (t * (t * xa + xb) + xc);\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                // Cubic bezier derivative.\n                cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n                if (cbxd > 1e-10 && cbxd < 1e-10) {\n                    // Problematic. Fall back to binary search method.\n                    break;\n                }\n\n                t += dx / cbxd;\n            }\n\n            // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n            let minT = 0;\n            let maxT = 1;\n            for (let it = 0; it < 20; it++) {\n                t = 0.5 * (minT + maxT);\n\n                cbx = t * (t * (t * xa + xb) + xc);\n\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    // Solution found!\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                if (dx < 0) {\n                    maxT = t;\n                } else {\n                    minT = t;\n                }\n            }\n\n        };\n    };\n\n    static getTimingFunction(str) {\n        switch (str) {\n            case \"linear\":\n                return function (time) {\n                    return time\n                };\n            case \"ease\":\n                return StageUtils.getTimingBezier(0.25, 0.1, 0.25, 1.0);\n            case \"ease-in\":\n                return StageUtils.getTimingBezier(0.42, 0, 1.0, 1.0);\n            case \"ease-out\":\n                return StageUtils.getTimingBezier(0, 0, 0.58, 1.0);\n            case \"ease-in-out\":\n                return StageUtils.getTimingBezier(0.42, 0, 0.58, 1.0);\n            case \"step-start\":\n                return function () {\n                    return 1\n                };\n            case \"step-end\":\n                return function (time) {\n                    return time === 1 ? 1 : 0;\n                };\n            default:\n                let s = \"cubic-bezier(\";\n                if (str && str.indexOf(s) === 0) {\n                    let parts = str.substr(s.length, str.length - s.length - 1).split(\",\");\n                    if (parts.length !== 4) {\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\n\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n                    let a = parseFloat(parts[0]);\n                    let b = parseFloat(parts[1]);\n                    let c = parseFloat(parts[2]);\n                    let d = parseFloat(parts[3]);\n                    if (isNaN(a) || isNaN(b) || isNaN(c) || isNaN(d)) {\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n\n                    return StageUtils.getTimingBezier(a, b, c, d);\n                } else {\n                    console.warn(\"[Lightning] Unknown timing function: \" + str);\n                    // Fallback: use linear.\n                    return function (time) {\n                        return time\n                    };\n                }\n        }\n    };\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value === 'string';\n    }\n\n    static clone(v) {\n        if (Utils.isObjectLiteral(v) || Array.isArray(v)) {\n            return Utils.getDeepClone(v);\n        } else {\n            // Copy by value.\n            return v;\n        }\n    }\n\n    static cloneObjShallow(obj) {\n        let keys = Object.keys(obj);\n        let clone = {}\n        for (let i = 0; i < keys.length; i++) {\n            clone[keys[i]] = obj[keys[i]];\n        }\n        return clone;\n    }\n\n    static merge(obj1, obj2) {\n        let keys = Object.keys(obj2);\n        for (let i = 0; i < keys.length; i++) {\n            obj1[keys[i]] = obj2[keys[i]];\n        }\n        return obj1;\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object' || type === 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object;\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static getModuloIndex(index, len) {\n        if (len === 0) return index;\n        while (index < 0) {\n            index += Math.ceil(-index / len) * len;\n        }\n        index = index % len;\n        return index;\n    }\n\n    static getDeepClone(obj) {\n        let i, c;\n        if (Utils.isFunction(obj)) {\n            // Copy functions by reference.\n            return obj;\n        }\n        if (Array.isArray(obj)) {\n            c = [];\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else if (Utils.isObject(obj)) {\n            c = {}\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else {\n            return obj;\n        }\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false;\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2);\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2);\n        } else {\n            return v1 === v2;\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false;\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false;\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false;\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static setToArray(s) {\n        let result = [];\n        s.forEach(function (value) {\n            result.push(value);\n        });\n        return result;\n    }\n\n    static iteratorToArray(iterator) {\n        let result = [];\n        let iteratorResult = iterator.next();\n        while (!iteratorResult.done) {\n            result.push(iteratorResult.value);\n            iteratorResult = iterator.next();\n        }\n        return result;\n    }\n\n    static isUcChar(charcode) {\n        return charcode >= 65 && charcode <= 90;\n    }\n\n}\n\nUtils.isWeb = (typeof window !== \"undefined\") && (typeof sparkscene === \"undefined\");\nUtils.isWPE = Utils.isWeb && (navigator.userAgent.indexOf(\"WPE\") !== -1);\nUtils.isSpark = (typeof sparkscene !== \"undefined\");\nUtils.isNode = (typeof window === \"undefined\") || Utils.isSpark;\nUtils.isPS4 = Utils.isWeb && (navigator.userAgent.indexOf(\"PlayStation 4\") !== -1);\nUtils.isZiggo = Utils.isWeb && (navigator.userAgent.indexOf(\"EOSSTB\") !== -1 || navigator.userAgent.indexOf(\"HZNSTB\") !== -1);\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Base {\n\n    static defaultSetter(obj, name, value) {\n        obj[name] = value;\n    }\n\n    static patchObject(obj, settings) {\n        if (!Utils.isObjectLiteral(settings)) {\n            console.error(\"[Lightning] Settings must be object literal\");\n        } else {\n            let names = Object.keys(settings);\n            for (let i = 0, n = names.length; i < n; i++) {\n                let name = names[i];\n\n                this.patchObjectProperty(obj, name, settings[name]);\n            }\n        }\n    }\n\n    static patchObjectProperty(obj, name, value) {\n        let setter = obj.setSetting || Base.defaultSetter;\n\n        if (name.charAt(0) === \"_\") {\n            // Disallow patching private variables.\n            if (name !== \"__create\") {\n                console.error(\"[Lightning] Patch of private property '\" + name + \"' is not allowed\");\n            }\n        } else if (name !== \"type\") {\n            // Type is a reserved keyword to specify the class type on creation.\n            if (Utils.isFunction(value) && value.__local) {\n                // Local function (Base.local(s => s.something))\n                value = value.__local(obj);\n            }\n\n            setter(obj, name, value);\n        }\n    }\n\n    static local(func) {\n        // This function can be used as an object setting, which is called with the target object.\n        func.__local = true;\n    }\n\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SpacingCalculator {\n\n    static getSpacing(mode, numberOfItems, remainingSpace) {\n        const itemGaps = (numberOfItems - 1);\n        let spacePerGap;\n\n        let spacingBefore, spacingBetween;\n\n        switch(mode) {\n            case \"flex-start\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            case \"flex-end\":\n                spacingBefore = remainingSpace;\n                spacingBetween = 0;\n                break;\n            case \"center\":\n                spacingBefore = remainingSpace / 2;\n                spacingBetween = 0;\n                break;\n            case \"space-between\":\n                spacingBefore = 0;\n                spacingBetween = Math.max(0, remainingSpace) / itemGaps;\n                break;\n            case \"space-around\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 1);\n                    spacingBefore = 0.5 * spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"space-evenly\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 2);\n                    spacingBefore = spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"stretch\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            default:\n                throw new Error(\"Unknown mode: \" + mode);\n        }\n\n        return {spacingBefore, spacingBetween}\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"./SpacingCalculator.mjs\";\n\nexport default class ContentAligner {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._totalCrossAxisSize = 0;\n    }\n\n    get _lines() {\n        return this._layout._lines;\n    }\n\n    init() {\n        this._totalCrossAxisSize = this._getTotalCrossAxisSize();\n    }\n\n    align() {\n        const crossAxisSize = this._layout.crossAxisSize;\n        const remainingSpace = crossAxisSize - this._totalCrossAxisSize;\n\n        const {spacingBefore, spacingBetween} = this._getSpacing(remainingSpace);\n\n        const lines = this._lines;\n\n        const mode = this._layout._flexContainer.alignContent;\n        let growSize = 0;\n        if (mode === \"stretch\" && lines.length && (remainingSpace > 0)) {\n            growSize = remainingSpace / lines.length;\n        }\n\n        let currentPos = spacingBefore;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const crossAxisLayoutOffset = currentPos;\n            const aligner = lines[i].createItemAligner();\n\n            let finalCrossAxisLayoutSize = lines[i].crossAxisLayoutSize + growSize;\n\n            aligner.setCrossAxisLayoutSize(finalCrossAxisLayoutSize);\n            aligner.setCrossAxisLayoutOffset(crossAxisLayoutOffset);\n\n            aligner.align();\n\n            if (aligner.recursiveResizeOccured) {\n                lines[i].setItemPositions();\n            }\n\n            currentPos += finalCrossAxisLayoutSize;\n            currentPos += spacingBetween;\n        }\n    }\n\n    get totalCrossAxisSize() {\n        return this._totalCrossAxisSize;\n    }\n\n    _getTotalCrossAxisSize() {\n        const lines = this._lines;\n        let total = 0;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const line = lines[i];\n            total += line.crossAxisLayoutSize;\n        }\n        return total;\n    }\n\n    _getSpacing(remainingSpace) {\n        const mode = this._layout._flexContainer.alignContent;\n        const numberOfItems = this._lines.length;\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class FlexUtils {\n\n    static getParentAxisSizeWithPadding(item, horizontal) {\n        const target = item.target;\n        const parent = target.getParent();\n        if (!parent) {\n            return 0;\n        } else {\n            const flexParent = item.flexParent;\n            if (flexParent) {\n                // Use pending layout size.\n                return this.getAxisLayoutSize(flexParent, horizontal) + this.getTotalPadding(flexParent, horizontal);\n            } else {\n                // Use 'absolute' size.\n                return horizontal ? parent.w : parent.h;\n            }\n        }\n    }\n\n    static getRelAxisSize(item, horizontal) {\n        if (horizontal) {\n            if (item.funcW) {\n                if (this._allowRelAxisSizeFunction(item, true)) {\n                    return item.funcW(this.getParentAxisSizeWithPadding(item, true));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalWidth;\n            }\n        } else {\n            if (item.funcH) {\n                if (this._allowRelAxisSizeFunction(item, false)) {\n                    return item.funcH(this.getParentAxisSizeWithPadding(item, false));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalHeight;\n            }\n        }\n    }\n\n    static _allowRelAxisSizeFunction(item, horizontal) {\n        const flexParent = item.flexParent;\n        if (flexParent && flexParent._flex._layout.isAxisFitToContents(horizontal)) {\n            // We don't allow relative width on fit-to-contents because it leads to conflicts.\n            return false;\n        }\n        return true;\n    }\n\n    static isZeroAxisSize(item, horizontal) {\n        if (horizontal) {\n            return !item.originalWidth && !item.funcW;\n        } else {\n            return !item.originalHeight && !item.funcH;\n        }\n    }\n\n    static getAxisLayoutPos(item, horizontal) {\n        return horizontal ? item.x : item.y;\n    }\n\n    static getAxisLayoutSize(item, horizontal) {\n        return horizontal ? item.w : item.h;\n    }\n\n    static setAxisLayoutPos(item, horizontal, pos) {\n        if (horizontal) {\n            item.x = pos;\n        } else {\n            item.y = pos;\n        }\n    }\n\n    static setAxisLayoutSize(item, horizontal, size) {\n        if (horizontal) {\n            item.w = size;\n        } else {\n            item.h = size;\n        }\n    }\n\n    static getAxisMinSize(item, horizontal) {\n        let minSize = this.getPlainAxisMinSize(item, horizontal);\n\n        let flexItemMinSize = 0;\n        if (item.isFlexItemEnabled()) {\n            flexItemMinSize = item._flexItem._getMinSizeSetting(horizontal);\n        }\n\n        const hasLimitedMinSize = (flexItemMinSize > 0);\n        if (hasLimitedMinSize) {\n            minSize = Math.max(minSize, flexItemMinSize);\n        }\n        return minSize;\n    }\n\n    static getPlainAxisMinSize(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            return item._flex._layout.getAxisMinSize(horizontal);\n        } else {\n            const isShrinkable = (item.flexItem.shrink !== 0);\n            if (isShrinkable) {\n                return 0;\n            } else {\n                return this.getRelAxisSize(item, horizontal);\n            }\n        }\n    }\n\n    static resizeAxis(item, horizontal, size) {\n        if (item.isFlexEnabled()) {\n            const isMainAxis = (item._flex._horizontal === horizontal);\n            if (isMainAxis) {\n                item._flex._layout.resizeMainAxis(size);\n            } else {\n                item._flex._layout.resizeCrossAxis(size);\n            }\n        } else {\n            this.setAxisLayoutSize(item, horizontal, size);\n        }\n    }\n\n\n    static getPaddingOffset(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingLeft;\n            } else {\n                return flex.paddingTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalPadding(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingRight + flex.paddingLeft;\n            } else {\n                return flex.paddingTop + flex.paddingBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getMarginOffset(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalMargin(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginRight + flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop + flexItem.marginBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeShrinker {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._shrunkSize = 0;\n    }\n\n    shrink(amount) {\n        this._shrunkSize = 0;\n\n        this._amountRemaining = amount;\n        let totalShrinkAmount = this._getTotalShrinkAmount();\n        if (totalShrinkAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerShrink = this._amountRemaining / totalShrinkAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const shrinkAmount = flexItem.shrink;\n                    const isShrinkableItem = (shrinkAmount > 0);\n                    if (isShrinkableItem) {\n                        let shrink = shrinkAmount * amountPerShrink;\n                        const minSize = flexItem._getMainAxisMinSize();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (size > minSize) {\n                            const maxShrink = size - minSize;\n                            const isFullyShrunk = (shrink >= maxShrink);\n                            if (isFullyShrunk) {\n                                shrink = maxShrink;\n\n                                // Destribute remaining amount over the other flex items.\n                                totalShrinkAmount -= shrinkAmount;\n                            }\n\n                            const finalSize = size - shrink;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._shrunkSize += shrink;\n                            this._amountRemaining -= shrink;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalShrinkAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalShrinkAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.shrink) {\n                const minSize = flexItem._getMainAxisMinSize();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully shrunk.\n                if (size > minSize) {\n                    total += flexItem.shrink;\n                }\n            }\n        }\n        return total;\n    }\n\n    getShrunkSize() {\n        return this._shrunkSize;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeGrower {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._grownSize = 0;\n    }\n\n    grow(amount) {\n        this._grownSize = 0;\n\n        this._amountRemaining = amount;\n        let totalGrowAmount = this._getTotalGrowAmount();\n        if (totalGrowAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerGrow = this._amountRemaining / totalGrowAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const growAmount = flexItem.grow;\n                    const isGrowableItem = (growAmount > 0);\n                    if (isGrowableItem) {\n                        let grow = growAmount * amountPerGrow;\n                        const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (maxSize > 0) {\n                            if (size >= maxSize) {\n                                // Already fully grown.\n                                grow = 0;\n                            } else {\n                                const maxGrow = maxSize - size;\n                                const isFullyGrown = (grow >= maxGrow);\n                                if (isFullyGrown) {\n                                    grow = maxGrow;\n\n                                    // Destribute remaining amount over the other flex items.\n                                    totalGrowAmount -= growAmount;\n                                }\n                            }\n                        }\n\n                        if (grow > 0) {\n                            const finalSize = size + grow;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._grownSize += grow;\n                            this._amountRemaining -= grow;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalGrowAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalGrowAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.grow) {\n                const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully grown.\n                if (maxSize === 0 || size < maxSize) {\n                    total += flexItem.grow;\n                }\n            }\n        }\n        return total;\n    }\n\n    getGrownSize() {\n        return this._grownSize;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"../SpacingCalculator.mjs\";\n\nexport default class ItemPositioner {\n\n    constructor(lineLayout) {\n        this._line = lineLayout;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    position() {\n        const {spacingBefore, spacingBetween} = this._getSpacing();\n\n        let currentPos = spacingBefore;\n\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n\n            item.flexItem._setMainAxisLayoutPos(currentPos);\n            currentPos += item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n            currentPos += spacingBetween;\n        }\n    }\n\n    _getSpacing() {\n        const remainingSpace = this._line._availableSpace;\n        let mode = this._layout._flexContainer.justifyContent;\n        const numberOfItems = this._line.numberOfItems;\n\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ItemAligner {\n\n    constructor(line) {\n        this._line = line;\n        this._crossAxisLayoutSize = 0;\n        this._crossAxisLayoutOffset = 0;\n        this._alignItemsSetting = null;\n        this._recursiveResizeOccured = false;\n        this._isCrossAxisFitToContents = false;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    setCrossAxisLayoutSize(size) {\n        this._crossAxisLayoutSize = size;\n    }\n\n    setCrossAxisLayoutOffset(offset) {\n        this._crossAxisLayoutOffset = offset;\n    }\n\n    align() {\n        this._alignItemsSetting = this._flexContainer.alignItems;\n\n        this._isCrossAxisFitToContents = this._layout.isAxisFitToContents(!this._flexContainer._horizontal);\n\n        this._recursiveResizeOccured = false;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            this._alignItem(item);\n        }\n    }\n\n    get recursiveResizeOccured() {\n        return this._recursiveResizeOccured;\n    }\n\n    _alignItem(item) {\n        const flexItem = item.flexItem;\n        let align = flexItem.alignSelf || this._alignItemsSetting;\n\n        if (align === \"stretch\" && this._preventStretch(flexItem)) {\n            align = \"flex-start\";\n        }\n\n        if (align !== \"stretch\" && !this._isCrossAxisFitToContents) {\n            if (flexItem._hasRelCrossAxisSize()) {\n                // As cross axis size might have changed, we need to recalc the relative flex item's size.\n                flexItem._resetCrossAxisLayoutSize();\n            }\n        }\n\n        switch(align) {\n            case \"flex-start\":\n                this._alignItemFlexStart(flexItem);\n                break;\n            case \"flex-end\":\n                this._alignItemFlexEnd(flexItem);\n                break;\n            case \"center\":\n                this._alignItemFlexCenter(flexItem);\n                break;\n            case \"stretch\":\n                this._alignItemStretch(flexItem);\n                break;\n        }\n    }\n\n    _alignItemFlexStart(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n    }\n\n    _alignItemFlexEnd(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + (this._crossAxisLayoutSize - itemCrossAxisSize));\n    }\n\n    _alignItemFlexCenter(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        const center = (this._crossAxisLayoutSize - itemCrossAxisSize) / 2;\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + center);\n    }\n\n    _alignItemStretch(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n\n        const mainAxisLayoutSizeBeforeResize = flexItem._getMainAxisLayoutSize();\n        let size = this._crossAxisLayoutSize - flexItem._getCrossAxisMargin() - flexItem._getCrossAxisPadding();\n\n        const crossAxisMinSizeSetting = flexItem._getCrossAxisMinSizeSetting();\n        if (crossAxisMinSizeSetting > 0) {\n            size = Math.max(size, crossAxisMinSizeSetting);\n        }\n\n        const crossAxisMaxSizeSetting = flexItem._getCrossAxisMaxSizeSetting();\n        const crossAxisMaxSizeSettingEnabled = (crossAxisMaxSizeSetting > 0);\n        if (crossAxisMaxSizeSettingEnabled) {\n            size = Math.min(size, crossAxisMaxSizeSetting);\n        }\n\n        flexItem._resizeCrossAxis(size);\n        const mainAxisLayoutSizeAfterResize = flexItem._getMainAxisLayoutSize();\n\n        const recursiveResize = (mainAxisLayoutSizeAfterResize !== mainAxisLayoutSizeBeforeResize);\n        if (recursiveResize) {\n            // Recursive resize can happen when this flex item has the opposite direction than the container\n            // and is wrapping and auto-sizing. Due to item/content stretching the main axis size of the flex\n            // item may decrease. If it does so, we must re-justify-content the complete line.\n            // Notice that we don't account for changes to the (if autosized) main axis size caused by recursive\n            // resize, which may cause the container's main axis to not shrink to the contents properly.\n            // This is by design, because if we had re-run the main axis layout, we could run into issues such\n            // as slow layout or endless loops.\n            this._recursiveResizeOccured = true;\n        }\n    }\n\n    _preventStretch(flexItem) {\n        const hasFixedCrossAxisSize = flexItem._hasFixedCrossAxisSize();\n        const forceStretch = (flexItem.alignSelf === \"stretch\");\n        return hasFixedCrossAxisSize && !forceStretch;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SizeShrinker from \"./SizeShrinker.mjs\";\nimport SizeGrower from \"./SizeGrower.mjs\";\nimport ItemPositioner from \"./ItemPositioner.mjs\";\nimport ItemAligner from \"./ItemAligner.mjs\";\n\nexport default class LineLayout {\n\n    constructor(layout, startIndex, endIndex, availableSpace) {\n        this._layout = layout;\n        this.items = layout.items;\n        this.startIndex = startIndex;\n        this.endIndex = endIndex;\n        this._availableSpace = availableSpace;\n    }\n\n    performLayout() {\n        this._setItemSizes();\n        this.setItemPositions();\n        this._calcLayoutInfo();\n    }\n\n    _setItemSizes() {\n        if (this._availableSpace > 0) {\n            this._growItemSizes(this._availableSpace);\n        } else if (this._availableSpace < 0) {\n            this._shrinkItemSizes(-this._availableSpace);\n        }\n    }\n\n    _growItemSizes(amount) {\n        const grower = new SizeGrower(this);\n        grower.grow(amount);\n        this._availableSpace -= grower.getGrownSize();\n    }\n\n    _shrinkItemSizes(amount) {\n        const shrinker = new SizeShrinker(this);\n        shrinker.shrink(amount);\n        this._availableSpace += shrinker.getShrunkSize();\n    }\n\n    setItemPositions() {\n        const positioner = new ItemPositioner(this);\n        positioner.position();\n    }\n\n    createItemAligner() {\n        return new ItemAligner(this);\n    }\n\n    _calcLayoutInfo() {\n        this._calcCrossAxisMaxLayoutSize();\n    }\n\n    getMainAxisMinSize() {\n        let mainAxisMinSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            mainAxisMinSize += item.flexItem._getMainAxisMinSizeWithPaddingAndMargin();\n        }\n        return mainAxisMinSize;\n    }\n    \n    get numberOfItems() {\n        return this.endIndex - this.startIndex + 1;\n    }\n\n    get crossAxisLayoutSize() {\n        const noSpecifiedCrossAxisSize = (this._layout.isCrossAxisFitToContents() && !this._layout.resizingCrossAxis);\n        const shouldFitToContents = (this._layout.isWrapping() || noSpecifiedCrossAxisSize);\n        if (shouldFitToContents) {\n            return this._crossAxisMaxLayoutSize;\n        } else {\n            return this._layout.crossAxisSize;\n        }\n    }\n\n    _calcCrossAxisMaxLayoutSize() {\n        this._crossAxisMaxLayoutSize = this._getCrossAxisMaxLayoutSize();\n    }\n\n    _getCrossAxisMaxLayoutSize() {\n        let crossAxisMaxSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            crossAxisMaxSize = Math.max(crossAxisMaxSize, item.flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin());\n        }\n        return crossAxisMaxSize;\n    }\n\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport LineLayout from \"./line/LineLayout.mjs\";\n\n/**\n * Distributes items over layout lines.\n */\nexport default class LineLayouter {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    get lines() {\n        return this._lines;\n    }\n\n    get mainAxisMinSize() {\n        if (this._mainAxisMinSize === -1) {\n            this._mainAxisMinSize = this._getMainAxisMinSize();\n        }\n        return this._mainAxisMinSize;\n    }\n\n    get crossAxisMinSize() {\n        if (this._crossAxisMinSize === -1) {\n            this._crossAxisMinSize = this._getCrossAxisMinSize();\n        }\n        return this._crossAxisMinSize;\n    }\n\n    get mainAxisContentSize() {\n        return this._mainAxisContentSize;\n    }\n\n    layoutLines() {\n        this._setup();\n        const items = this._layout.items;\n        const wrap = this._layout.isWrapping();\n\n        let startIndex = 0;\n        let i;\n        const n = items.length;\n        for (i = 0; i < n; i++) {\n            const item = items[i];\n\n            this._layoutFlexItem(item);\n\n            // Get predicted main axis size.\n            const itemMainAxisSize = item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n\n            if (wrap && (i > startIndex)) {\n                const isOverflowing = (this._curMainAxisPos + itemMainAxisSize > this._mainAxisSize);\n                if (isOverflowing) {\n                    this._layoutLine(startIndex, i - 1);\n                    this._curMainAxisPos = 0;\n                    startIndex = i;\n                }\n            }\n\n            this._addToMainAxisPos(itemMainAxisSize);\n        }\n\n        if (startIndex < i) {\n            this._layoutLine(startIndex, i - 1);\n        }\n    }\n\n    _layoutFlexItem(item) {\n        if (item.isFlexEnabled()) {\n            item.flexLayout.updateTreeLayout();\n        } else {\n            item.flexItem._resetLayoutSize();\n        }\n    }\n\n    _setup() {\n        this._mainAxisSize = this._layout.mainAxisSize;\n        this._curMainAxisPos = 0;\n        this._maxMainAxisPos = 0;\n        this._lines = [];\n\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    _addToMainAxisPos(itemMainAxisSize) {\n        this._curMainAxisPos += itemMainAxisSize;\n        if (this._curMainAxisPos > this._maxMainAxisPos) {\n            this._maxMainAxisPos = this._curMainAxisPos;\n        }\n    }\n\n    _layoutLine(startIndex, endIndex) {\n        const availableSpace = this._getAvailableMainAxisLayoutSpace();\n        const line = new LineLayout(this._layout, startIndex, endIndex, availableSpace);\n        line.performLayout();\n        this._lines.push(line);\n\n        if (this._mainAxisContentSize === 0 || (this._curMainAxisPos > this._mainAxisContentSize)) {\n            this._mainAxisContentSize = this._curMainAxisPos;\n        }\n    }\n\n    _getAvailableMainAxisLayoutSpace() {\n        if (!this._layout.resizingMainAxis && this._layout.isMainAxisFitToContents()) {\n            return 0;\n        } else {\n            return this._mainAxisSize - this._curMainAxisPos;\n        }\n    }\n\n    _getCrossAxisMinSize() {\n        let crossAxisMinSize = 0;\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const itemCrossAxisMinSize = item.flexItem._getCrossAxisMinSizeWithPaddingAndMargin();\n            crossAxisMinSize = Math.max(crossAxisMinSize, itemCrossAxisMinSize);\n        }\n        return crossAxisMinSize;\n    }\n\n    _getMainAxisMinSize() {\n        if (this._lines.length === 1) {\n            return this._lines[0].getMainAxisMinSize();\n        } else {\n            // Wrapping lines: specified width is used as min width (in accordance to W3C flexbox).\n            return this._layout.mainAxisSize;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexUtils from \"../FlexUtils.mjs\";\n\nexport default class ItemCoordinatesUpdater {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._isReverse = this._flexContainer._reverse;\n        this._horizontalPaddingOffset = this._layout._getHorizontalPaddingOffset();\n        this._verticalPaddingOffset = this._layout._getVerticalPaddingOffset();\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    finalize() {\n        const parentFlex = this._layout.getParentFlexContainer();\n        if (parentFlex) {\n            // We must update it from the parent to set padding offsets and reverse position.\n            const updater = new ItemCoordinatesUpdater(parentFlex._layout);\n            updater._finalizeItemAndChildren(this._flexContainer.item);\n        } else {\n            this._finalizeRoot();\n            this._finalizeItems();\n        }\n    }\n\n    _finalizeRoot() {\n        const item = this._flexContainer.item;\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        w += this._layout._getHorizontalPadding();\n        h += this._layout._getVerticalPadding();\n\n        item.clearRecalcFlag();\n\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItems() {\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const validCache = this._validateItemCache(item);\n\n            // Notice that we must also finalize a cached items, as it's coordinates may have changed.\n            this._finalizeItem(item);\n\n            if (!validCache) {\n                this._finalizeItemChildren(item);\n            }\n        }\n    }\n\n    _validateItemCache(item) {\n        if (item.recalc === 0) {\n            if (item.isFlexEnabled()) {\n                const layout = item._flex._layout;\n\n                const dimensionsMatchPreviousResult = (item.w === item.target.w && item.h === item.target.h);\n                if (dimensionsMatchPreviousResult) {\n                    // Cache is valid.\n                    return true;\n                } else {\n                    const crossAxisSize = layout.crossAxisSize;\n                    layout.performResizeMainAxis(layout.mainAxisSize);\n                    layout.performResizeCrossAxis(crossAxisSize);\n                }\n            }\n        }\n        return false;\n    }\n\n    _finalizeItemAndChildren(item) {\n        this._finalizeItem(item);\n        this._finalizeItemChildren(item);\n    }\n\n    _finalizeItem(item) {\n        if (this._isReverse) {\n            this._reverseMainAxisLayoutPos(item);\n        }\n\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        x += this._horizontalPaddingOffset;\n        y += this._verticalPaddingOffset;\n\n        const flex = item.flex;\n        if (flex) {\n            w += item._flex._layout._getHorizontalPadding();\n            h += item._flex._layout._getVerticalPadding();\n        }\n\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            x += flexItem._getHorizontalMarginOffset();\n            y += flexItem._getVerticalMarginOffset();\n        }\n\n        item.clearRecalcFlag();\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItemChildren(item) {\n        const flex = item._flex;\n        if (flex) {\n            const updater = new ItemCoordinatesUpdater(flex._layout);\n            updater._finalizeItems();\n        }\n    }\n\n    _reverseMainAxisLayoutPos(item) {\n        const endPos = (item.flexItem._getMainAxisLayoutPos() + item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin());\n        const reversedPos = this._layout.mainAxisSize - endPos;\n        item.flexItem._setMainAxisLayoutPos(reversedPos);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ContentAligner from \"./ContentAligner.mjs\";\nimport FlexUtils from \"../FlexUtils.mjs\";\nimport LineLayouter from \"./LineLayouter.mjs\";\nimport ItemCoordinatesUpdater from \"./ItemCoordinatesUpdater.mjs\";\n\n/**\n * Layouts a flex container (and descendants).\n */\nexport default class FlexLayout {\n\n    constructor(flexContainer) {\n        this._flexContainer = flexContainer;\n\n        this._lineLayouter = new LineLayouter(this);\n\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n\n        this._cachedMainAxisSizeAfterLayout = 0;\n        this._cachedCrossAxisSizeAfterLayout = 0;\n\n        this._shrunk = false;\n    }\n\n    get shrunk() {\n        return this._shrunk;\n    }\n\n    get recalc() {\n        return this.item.recalc;\n    }\n\n    layoutTree() {\n        const isSubTree = (this.item.flexParent !== null);\n        if (isSubTree) {\n            // Use the dimensions set by the parent flex tree.\n            this._updateSubTreeLayout();\n        } else {\n            this.updateTreeLayout();\n        }\n        this.updateItemCoords();\n    }\n\n    updateTreeLayout() {\n        if (this.recalc) {\n            this._performUpdateLayoutTree();\n        } else {\n            this._performUpdateLayoutTreeFromCache();\n        }\n    }\n\n    _performUpdateLayoutTree() {\n        this._setInitialAxisSizes();\n        this._layoutAxes();\n        this._refreshLayoutCache();\n    }\n\n    _refreshLayoutCache() {\n        this._cachedMainAxisSizeAfterLayout = this.mainAxisSize;\n        this._cachedCrossAxisSizeAfterLayout = this.crossAxisSize;\n    }\n\n    _performUpdateLayoutTreeFromCache() {\n        const sizeMightHaveChanged = (this.item.funcW || this.item.funcH);\n        if (sizeMightHaveChanged) {\n            // Update after all.\n            this.item.enableLocalRecalcFlag();\n            this._performUpdateLayoutTree();\n        } else {\n            this.mainAxisSize = this._cachedMainAxisSizeAfterLayout;\n            this.crossAxisSize = this._cachedCrossAxisSizeAfterLayout;\n        }\n    }\n\n    updateItemCoords() {\n        const updater = new ItemCoordinatesUpdater(this);\n        updater.finalize();\n    }\n\n    _updateSubTreeLayout() {\n        // The dimensions of this container are guaranteed not to have changed.\n        // That's why we can safely 'reuse' those and re-layout the contents.\n        const crossAxisSize = this.crossAxisSize;\n        this._layoutMainAxis();\n        this.performResizeCrossAxis(crossAxisSize);\n    }\n\n    _setInitialAxisSizes() {\n        if (this.item.isFlexItemEnabled()) {\n            this.item.flexItem._resetLayoutSize();\n        } else {\n            this.mainAxisSize = this._getMainAxisBasis();\n            this.crossAxisSize = this._getCrossAxisBasis();\n        }\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n        this._shrunk = false;\n    }\n\n    _layoutAxes() {\n        this._layoutMainAxis();\n        this._layoutCrossAxis();\n    }\n\n    /**\n     * @pre mainAxisSize should exclude padding.\n     */\n    _layoutMainAxis() {\n        this._layoutLines();\n        this._fitMainAxisSizeToContents();\n    }\n\n    _layoutLines() {\n        this._lineLayouter.layoutLines();\n    }\n\n    get _lines() {\n        return this._lineLayouter.lines;\n    }\n\n    _fitMainAxisSizeToContents() {\n        if (!this._resizingMainAxis) {\n            if (this.isMainAxisFitToContents()) {\n                this.mainAxisSize = this._lineLayouter.mainAxisContentSize;\n            }\n        }\n    }\n\n    /**\n     * @pre crossAxisSize should exclude padding.\n     */\n    _layoutCrossAxis() {\n        const aligner = new ContentAligner(this);\n        aligner.init();\n        this._totalCrossAxisSize = aligner.totalCrossAxisSize;\n        this._fitCrossAxisSizeToContents();\n        aligner.align();\n    }\n\n    _fitCrossAxisSizeToContents() {\n        if (!this._resizingCrossAxis) {\n            if (this.isCrossAxisFitToContents()) {\n                this.crossAxisSize = this._totalCrossAxisSize;\n            }\n        }\n    }\n\n    isWrapping() {\n        return this._flexContainer.wrap;\n    }\n\n    isAxisFitToContents(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this.isMainAxisFitToContents();\n        } else {\n            return this.isCrossAxisFitToContents();\n        }\n    }\n\n    isMainAxisFitToContents() {\n        return !this.isWrapping() && !this._hasFixedMainAxisBasis();\n    }\n\n    isCrossAxisFitToContents() {\n        return !this._hasFixedCrossAxisBasis();\n    }\n\n    _hasFixedMainAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, this._horizontal);\n    }\n\n    _hasFixedCrossAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this._horizontal);\n    }\n\n    getAxisMinSize(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this._getMainAxisMinSize();\n        } else {\n            return this._getCrossAxisMinSize();\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return this._lineLayouter.mainAxisMinSize;\n    }\n\n    _getCrossAxisMinSize() {\n        return this._lineLayouter.crossAxisMinSize;\n    }\n\n    resizeMainAxis(size) {\n        if (this.mainAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeMainAxis(size);\n            } else {\n                if (this._checkValidCacheMainAxisResize()) {\n                    this.mainAxisSize = size;\n                    this._fitCrossAxisSizeToContents();\n                } else {\n                    // Cache miss.\n                    this.item.enableLocalRecalcFlag();\n                    this.performResizeMainAxis(size);\n                }\n            }\n        }\n    }\n\n    _checkValidCacheMainAxisResize(size) {\n        const isFinalMainAxisSize = (size === this.targetMainAxisSize);\n        if (isFinalMainAxisSize) {\n            return true;\n        }\n        const canIgnoreCacheMiss = !this.isCrossAxisFitToContents();\n        if (canIgnoreCacheMiss) {\n            // Allow other main axis resizes and check if final resize matches the target main axis size\n            //  (ItemCoordinatesUpdater).\n            return true;\n        }\n        return false;\n    }\n\n    performResizeMainAxis(size) {\n        const isShrinking = (size < this.mainAxisSize);\n        this._shrunk = isShrinking;\n\n        this.mainAxisSize = size;\n\n        this._resizingMainAxis = true;\n        this._layoutAxes();\n        this._resizingMainAxis = false;\n    }\n\n    resizeCrossAxis(size) {\n        if (this.crossAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeCrossAxis(size);\n            } else {\n                this.crossAxisSize = size;\n            }\n        }\n    }\n\n    performResizeCrossAxis(size) {\n        this.crossAxisSize = size;\n\n        this._resizingCrossAxis = true;\n        this._layoutCrossAxis();\n        this._resizingCrossAxis = false;\n    }\n\n    get targetMainAxisSize() {\n        return this._horizontal ? this.item.target.w : this.item.target.h;\n    }\n\n    get targetCrossAxisSize() {\n        return this._horizontal ? this.item.target.h : this.item.target.w;\n    }\n\n    getParentFlexContainer() {\n        return this.item.isFlexItemEnabled() ? this.item.flexItem.ctr : null;\n    }\n\n    _getHorizontalPadding() {\n        return FlexUtils.getTotalPadding(this.item, true);\n    }\n\n    _getVerticalPadding() {\n        return FlexUtils.getTotalPadding(this.item, false);\n    }\n\n    _getHorizontalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, true);\n    }\n\n    _getVerticalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, false);\n    }\n\n    _getMainAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, this._horizontal);\n    }\n\n    _getCrossAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, !this._horizontal);\n    }\n\n    get _horizontal() {\n        return this._flexContainer._horizontal;\n    }\n\n    get _reverse() {\n        return this._flexContainer._reverse;\n    }\n\n    get item() {\n        return this._flexContainer.item;\n    }\n\n    get items() {\n        return this.item.items;\n    }\n\n    get resizingMainAxis() {\n        return this._resizingMainAxis;\n    }\n\n    get resizingCrossAxis() {\n        return this._resizingCrossAxis;\n    }\n\n    get numberOfItems() {\n        return this.items.length;\n    }\n\n    get mainAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this._horizontal);\n    }\n\n    get crossAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this._horizontal);\n    }\n\n    set mainAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, this._horizontal, v);\n    }\n\n    set crossAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, !this._horizontal, v);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport Layout from \"./layout/FlexLayout.mjs\";\n\nexport default class FlexContainer {\n\n\n    constructor(item) {\n        this._item = item;\n\n        this._layout = new Layout(this);\n        this._horizontal = true;\n        this._reverse = false;\n        this._wrap = false;\n        this._alignItems = 'stretch';\n        this._justifyContent = 'flex-start';\n        this._alignContent = 'flex-start';\n\n        this._paddingLeft = 0;\n        this._paddingTop = 0;\n        this._paddingRight = 0;\n        this._paddingBottom = 0;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    _changedDimensions() {\n        this._item.changedDimensions();\n    }\n\n    _changedContents() {\n        this._item.changedContents();\n    }\n\n    get direction() {\n        return (this._horizontal ? \"row\" : \"column\") + (this._reverse ? \"-reverse\" : \"\");\n    }\n\n    set direction(f) {\n        if (this.direction === f) return;\n\n        this._horizontal = (f === 'row' || f === 'row-reverse');\n        this._reverse = (f === 'row-reverse' || f === 'column-reverse');\n\n        this._changedContents();\n    }\n\n    set wrap(v) {\n        this._wrap = v;\n        this._changedContents();\n    }\n\n    get wrap() {\n        return this._wrap;\n    }\n\n    get alignItems() {\n        return this._alignItems;\n    }\n\n    set alignItems(v) {\n        if (this._alignItems === v) return;\n        if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignItems, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n        }\n        this._alignItems = v;\n\n        this._changedContents();\n    }\n\n    get alignContent() {\n        return this._alignContent;\n    }\n\n    set alignContent(v) {\n        if (this._alignContent === v) return;\n        if (FlexContainer.ALIGN_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignContent, options: \" + FlexContainer.ALIGN_CONTENT.join(\",\"));\n        }\n        this._alignContent = v;\n\n        this._changedContents();\n    }\n\n    get justifyContent() {\n        return this._justifyContent;\n    }\n\n    set justifyContent(v) {\n        if (this._justifyContent === v) return;\n\n        if (FlexContainer.JUSTIFY_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown justifyContent, options: \" + FlexContainer.JUSTIFY_CONTENT.join(\",\"));\n        }\n        this._justifyContent = v;\n\n        this._changedContents();\n    }\n\n    set padding(v) {\n        this.paddingLeft = v;\n        this.paddingTop = v;\n        this.paddingRight = v;\n        this.paddingBottom = v;\n    }\n\n    get padding() {\n        return this.paddingLeft;\n    }\n    \n    set paddingLeft(v) {\n        this._paddingLeft = v;\n        this._changedDimensions();\n    }\n    \n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingTop(v) {\n        this._paddingTop = v;\n        this._changedDimensions();\n    }\n\n    get paddingTop() {\n        return this._paddingTop;\n    }\n\n    set paddingRight(v) {\n        this._paddingRight = v;\n        this._changedDimensions();\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingBottom(v) {\n        this._paddingBottom = v;\n        this._changedDimensions();\n    }\n\n    get paddingBottom() {\n        return this._paddingBottom;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nFlexContainer.ALIGN_ITEMS = [\"flex-start\", \"flex-end\", \"center\", \"stretch\"];\nFlexContainer.ALIGN_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\", \"stretch\"];\nFlexContainer.JUSTIFY_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\"];\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\nimport FlexContainer from \"./FlexContainer.mjs\";\n\nexport default class FlexItem {\n\n    constructor(item) {\n        this._ctr = null;\n        this._item = item;\n        this._grow = 0;\n        this._shrink = FlexItem.SHRINK_AUTO;\n        this._alignSelf = undefined;\n        this._minWidth = 0;\n        this._minHeight = 0;\n        this._maxWidth = 0;\n        this._maxHeight = 0;\n\n        this._marginLeft = 0;\n        this._marginTop = 0;\n        this._marginRight = 0;\n        this._marginBottom = 0;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    get grow() {\n        return this._grow;\n    }\n\n    set grow(v) {\n        if (this._grow === v) return;\n\n        this._grow = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get shrink() {\n        if (this._shrink === FlexItem.SHRINK_AUTO) {\n            return this._getDefaultShrink();\n        }\n        return this._shrink;\n    }\n\n    _getDefaultShrink() {\n        if (this.item.isFlexEnabled()) {\n            return 1;\n        } else {\n            // All non-flex containers are absolutely positioned items with fixed dimensions, and by default not shrinkable.\n            return 0;\n        }\n    }\n\n    set shrink(v) {\n        if (this._shrink === v) return;\n\n        this._shrink = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get alignSelf() {\n        return this._alignSelf;\n    }\n\n    set alignSelf(v) {\n        if (this._alignSelf === v) return;\n\n        if (v === undefined) {\n            this._alignSelf = undefined;\n        } else {\n            if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n                throw new Error(\"Unknown alignSelf, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n            }\n            this._alignSelf = v;\n        }\n\n        this._changed();\n    }\n\n    get minWidth() {\n        return this._minWidth;\n    }\n\n    set minWidth(v) {\n        this._minWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get minHeight() {\n        return this._minHeight;\n    }\n\n    set minHeight(v) {\n        this._minHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    get maxWidth() {\n        return this._maxWidth;\n    }\n\n    set maxWidth(v) {\n        this._maxWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get maxHeight() {\n        return this._maxHeight;\n    }\n\n    set maxHeight(v) {\n        this._maxHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    /**\n     * @note margins behave slightly different than in HTML with regard to shrinking.\n     * In HTML, (outer) margins can be removed when shrinking. In this engine, they will not shrink at all.\n     */\n    set margin(v) {\n        this.marginLeft = v;\n        this.marginTop = v;\n        this.marginRight = v;\n        this.marginBottom = v;\n    }\n\n    get margin() {\n        return this.marginLeft;\n    }\n\n    set marginLeft(v) {\n        this._marginLeft = v;\n        this._changed();\n    }\n\n    get marginLeft() {\n        return this._marginLeft;\n    }\n\n    set marginTop(v) {\n        this._marginTop = v;\n        this._changed();\n    }\n\n    get marginTop() {\n        return this._marginTop;\n    }\n\n    set marginRight(v) {\n        this._marginRight = v;\n        this._changed();\n    }\n\n    get marginRight() {\n        return this._marginRight;\n    }\n\n    set marginBottom(v) {\n        this._marginBottom = v;\n        this._changed();\n    }\n\n    get marginBottom() {\n        return this._marginBottom;\n    }\n    \n    _changed() {\n        if (this.ctr) this.ctr._changedContents();\n    }\n\n    set ctr(v) {\n        this._ctr = v;\n    }\n\n    get ctr() {\n        return this._ctr;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    _resetLayoutSize() {\n        this._resetHorizontalAxisLayoutSize();\n        this._resetVerticalAxisLayoutSize();\n    }\n\n    _resetCrossAxisLayoutSize() {\n        if (this.ctr._horizontal) {\n            this._resetVerticalAxisLayoutSize();\n        } else {\n            this._resetHorizontalAxisLayoutSize();\n        }\n    }\n\n    _resetHorizontalAxisLayoutSize() {\n        let w = FlexUtils.getRelAxisSize(this.item, true);\n        if (this._minWidth) {\n            w = Math.max(this._minWidth, w);\n        }\n        if (this._maxWidth) {\n            w = Math.min(this._maxWidth, w);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, true, w);\n    }\n\n    _resetVerticalAxisLayoutSize() {\n        let h = FlexUtils.getRelAxisSize(this.item, false);\n        if (this._minHeight) {\n            h = Math.max(this._minHeight, h);\n        }\n        if (this._maxHeight) {\n            h = Math.min(this._maxHeight, h);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, false, h);\n    }\n\n    _getCrossAxisMinSizeSetting() {\n        return this._getMinSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getCrossAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getMainAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(this.ctr._horizontal);\n    }\n\n    _getMinSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._minWidth;\n        } else {\n            return this._minHeight;\n        }\n    }\n\n    _getMaxSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._maxWidth;\n        } else {\n            return this._maxHeight;\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutPos() {\n        return FlexUtils.getAxisLayoutPos(this.item, this.ctr._horizontal);\n    }\n\n    _setMainAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, this.ctr._horizontal, pos);\n    }\n\n    _setCrossAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, !this.ctr._horizontal, pos);\n    }\n\n    _getCrossAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this.ctr._horizontal);\n    }\n\n    _resizeCrossAxis(size) {\n        return FlexUtils.resizeAxis(this.item, !this.ctr._horizontal, size);\n    }\n\n    _resizeMainAxis(size) {\n        return FlexUtils.resizeAxis(this.item, this.ctr._horizontal, size);\n    }\n\n    _getMainAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, !this.ctr._horizontal);\n    }\n\n    _getHorizontalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, true);\n    }\n\n    _getVerticalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, false);\n    }\n\n    _getMainAxisMinSizeWithPaddingAndMargin() {\n        return this._getMainAxisMinSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisMinSizeWithPaddingAndMargin() {\n        return this._getCrossAxisMinSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _getMainAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getMainAxisLayoutSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getCrossAxisLayoutSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _hasFixedCrossAxisSize() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this.ctr._horizontal);\n    }\n\n    _hasRelCrossAxisSize() {\n        return !!(this.ctr._horizontal ? this.item.funcH : this.item.funcW);\n    }\n\n}\n\n\nFlexItem.SHRINK_AUTO = -1;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexContainer from \"./FlexContainer.mjs\";\nimport FlexItem from \"./FlexItem.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\n\n/**\n * This is the connection between the render tree with the layout tree of this flex container/item.\n */\nexport default class FlexTarget {\n\n    constructor(target) {\n        this._target = target;\n\n        /**\n         * Possible values (only in case of container):\n         * bit 0: has changed or contains items with changes\n         * bit 1: width changed\n         * bit 2: height changed\n         */\n        this._recalc = 0;\n        \n        this._enabled = false;\n\n        this.x = 0;\n        this.y = 0;\n        this.w = 0;\n        this.h = 0;\n\n        this._originalX = 0;\n        this._originalY = 0;\n        this._originalWidth = 0;\n        this._originalHeight = 0;\n\n        this._flex = null;\n        this._flexItem = null;\n        this._flexItemDisabled = false;\n\n        this._items = null;\n    }\n\n    get flexLayout() {\n        return this.flex ? this.flex._layout : null;\n    }\n\n    layoutFlexTree() {\n        if (this.isFlexEnabled() && this.isChanged()) {\n            this.flexLayout.layoutTree();\n        }\n    }\n\n    get target() {\n        return this._target;\n    }\n\n    get flex() {\n        return this._flex;\n    }\n\n    set flex(v) {\n        if (!v) {\n            if (this.isFlexEnabled()) {\n                this._disableFlex();\n            }\n        } else {\n            if (!this.isFlexEnabled()) {\n                this._enableFlex();\n            }\n            this._flex.patch(v);\n        }\n    }\n\n    get flexItem() {\n        if (this._flexItemDisabled) {\n            return false;\n        }\n        this._ensureFlexItem();\n        return this._flexItem;\n    }\n\n    set flexItem(v) {\n        if (v === false) {\n            if (!this._flexItemDisabled) {\n                const parent = this.flexParent;\n                this._flexItemDisabled = true;\n                this._checkEnabled();\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        } else {\n            this._ensureFlexItem();\n\n            this._flexItem.patch(v);\n\n            if (this._flexItemDisabled) {\n                this._flexItemDisabled = false;\n                this._checkEnabled();\n                const parent = this.flexParent;\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        }\n    }\n\n    _enableFlex() {\n        this._flex = new FlexContainer(this);\n        this._checkEnabled();\n        this.changedDimensions();\n        this._enableChildrenAsFlexItems();\n    }\n\n    _disableFlex() {\n        this.changedDimensions();\n        this._flex = null;\n        this._checkEnabled();\n        this._disableChildrenAsFlexItems();\n    }\n\n    _enableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._enableFlexItem();\n            }\n        }\n    }\n\n    _disableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._disableFlexItem();\n            }\n        }\n    }\n\n    _enableFlexItem() {\n        this._ensureFlexItem();\n        const flexParent = this._target._parent._layout;\n        this._flexItem.ctr = flexParent._flex;\n        flexParent.changedContents();\n        this._checkEnabled();\n    }\n\n    _disableFlexItem() {\n        if (this._flexItem) {\n            this._flexItem.ctr = null;\n        }\n\n        // We keep the flexItem object because it may contain custom settings.\n        this._checkEnabled();\n\n        // Offsets have been changed. We can't recover them, so we'll just clear them instead.\n        this._resetOffsets();\n    }\n\n    _resetOffsets() {\n        this.x = 0;\n        this.y = 0;\n    }\n\n    _ensureFlexItem() {\n        if (!this._flexItem) {\n            this._flexItem = new FlexItem(this);\n        }\n    }\n\n    _checkEnabled() {\n        const enabled = this.isEnabled();\n        if (this._enabled !== enabled) {\n            if (enabled) {\n                this._enable();\n            } else {\n                this._disable();\n            }\n            this._enabled = enabled;\n        }\n    }\n    \n    _enable() {\n        this._setupTargetForFlex();\n        this._target.enableFlexLayout();\n    }\n\n    _disable() {\n        this._restoreTargetToNonFlex();\n        this._target.disableFlexLayout();\n    }\n\n    isEnabled() {\n        return this.isFlexEnabled() || this.isFlexItemEnabled();\n    }\n\n    isFlexEnabled() {\n        return this._flex !== null;\n    }\n\n    isFlexItemEnabled() {\n        return this.flexParent !== null;\n    }\n\n    _restoreTargetToNonFlex() {\n        const target = this._target;\n        target.x = this._originalX;\n        target.y = this._originalY;\n        target.setDimensions(this._originalWidth, this._originalHeight);\n    }\n\n    _setupTargetForFlex() {\n        const target = this._target;\n        this._originalX = target._x;\n        this._originalY = target._y;\n        this._originalWidth = target._w;\n        this._originalHeight = target._h;\n    }\n    \n    setParent(from, to) {\n        if (from && from.isFlexContainer()) {\n            from._layout._changedChildren();\n        }\n\n        if (to && to.isFlexContainer()) {\n            this._enableFlexItem();\n            to._layout._changedChildren();\n        }\n        this._checkEnabled();\n    }\n\n    get flexParent() {\n        if (this._flexItemDisabled) {\n            return null;\n        }\n\n        const parent = this._target._parent;\n        if (parent && parent.isFlexContainer()) {\n            return parent._layout;\n        }\n        return null;\n    }\n\n    setVisible(v) {\n        const parent = this.flexParent;\n        if (parent) {\n            parent._changedChildren();\n        }\n    }\n\n    get items() {\n        if (!this._items) {\n            this._items = this._getFlexItems();\n        }\n        return this._items;\n    }\n\n    _getFlexItems() {\n        const items = [];\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const item = children[i];\n                if (item.visible) {\n                    if (item.isFlexItem()) {\n                        items.push(item.layout);\n                    }\n                }\n            }\n        }\n        return items;\n    }\n\n    _changedChildren() {\n        this._clearFlexItemsCache();\n        this.changedContents();\n    }\n\n    _clearFlexItemsCache() {\n        this._items = null;\n    }\n\n    setLayout(x, y, w, h) {\n        let originalX = this._originalX;\n        let originalY = this._originalY;\n        if (this.funcX) {\n            originalX = this.funcX(FlexUtils.getParentAxisSizeWithPadding(this, true));\n        }\n        if (this.funcY) {\n            originalY = this.funcY(FlexUtils.getParentAxisSizeWithPadding(this, false));\n        }\n\n        if (this.isFlexItemEnabled()) {\n            this.target.setLayout(x + originalX, y + originalY, w, h);\n        } else {\n            // Reuse the x,y 'settings'.\n            this.target.setLayout(originalX, originalY, w, h);\n        }\n    }\n\n    changedDimensions(changeWidth = true, changeHeight = true) {\n        this._updateRecalc(changeWidth, changeHeight);\n    }\n\n    changedContents() {\n        this._updateRecalc();\n    }\n\n    forceLayout() {\n        this._updateRecalc();\n    }\n\n    isChanged() {\n        return this._recalc > 0;\n    }\n\n    _updateRecalc(changeExternalWidth = false, changeExternalHeight = false) {\n        if (this.isFlexEnabled()) {\n            const layout = this._flex._layout;\n\n            // When something internal changes, it can have effect on the external dimensions.\n            changeExternalWidth = changeExternalWidth || layout.isAxisFitToContents(true);\n            changeExternalHeight = changeExternalHeight || layout.isAxisFitToContents(false);\n        }\n\n        const recalc = 1 + (changeExternalWidth ? 2 : 0) + (changeExternalHeight ? 4 : 0);\n        const newRecalcFlags = this.getNewRecalcFlags(recalc);\n        this._recalc |= recalc;\n        if (newRecalcFlags > 1) {\n            if (this.flexParent) {\n                this.flexParent._updateRecalcBottomUp(recalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    getNewRecalcFlags(flags) {\n        return (7 - this._recalc) & flags;\n    }\n\n    _updateRecalcBottomUp(childRecalc) {\n        const newRecalc = this._getRecalcFromChangedChildRecalc(childRecalc);\n        const newRecalcFlags = this.getNewRecalcFlags(newRecalc);\n        this._recalc |= newRecalc;\n        if (newRecalcFlags > 1) {\n            const flexParent = this.flexParent;\n            if (flexParent) {\n                flexParent._updateRecalcBottomUp(newRecalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    _getRecalcFromChangedChildRecalc(childRecalc) {\n        const layout = this._flex._layout;\n\n        const mainAxisRecalcFlag = layout._horizontal ? 1 : 2;\n        const crossAxisRecalcFlag = layout._horizontal ? 2 : 1;\n\n        const crossAxisDimensionsChangedInChild = (childRecalc & crossAxisRecalcFlag);\n        if (!crossAxisDimensionsChangedInChild) {\n            const mainAxisDimensionsChangedInChild = (childRecalc & mainAxisRecalcFlag);\n            if (mainAxisDimensionsChangedInChild) {\n                const mainAxisIsWrapping = layout.isWrapping();\n                if (mainAxisIsWrapping) {\n                    const crossAxisIsFitToContents = layout.isCrossAxisFitToContents();\n                    if (crossAxisIsFitToContents) {\n                        // Special case: due to wrapping, the cross axis size may be changed.\n                        childRecalc += crossAxisRecalcFlag;\n                    }\n                }\n            }\n        }\n\n        let isWidthDynamic = layout.isAxisFitToContents(true);\n        let isHeightDynamic = layout.isAxisFitToContents(false);\n\n        if (layout.shrunk) {\n            // If during previous layout this container was 'shrunk', any changes may change the 'min axis size' of the\n            // contents, leading to a different axis size on this container even when it was not 'fit to contents'.\n            if (layout._horizontal) {\n                isWidthDynamic = true;\n            } else {\n                isHeightDynamic = true;\n            }\n        }\n\n        const localRecalc = 1 + (isWidthDynamic ? 2 : 0) + (isHeightDynamic ? 4 : 0);\n\n        const combinedRecalc = childRecalc & localRecalc;\n        return combinedRecalc;\n    }\n\n    get recalc() {\n        return this._recalc;\n    }\n\n    clearRecalcFlag() {\n        this._recalc = 0;\n    }\n\n    enableLocalRecalcFlag() {\n        this._recalc = 1;\n    }\n\n    get originalX() {\n        return this._originalX;\n    }\n\n    setOriginalXWithoutUpdatingLayout(v) {\n        this._originalX = v;\n    }\n\n    get originalY() {\n        return this._originalY;\n    }\n\n    setOriginalYWithoutUpdatingLayout(v) {\n        this._originalY = v;\n    }\n\n    get originalWidth() {\n        return this._originalWidth;\n    }\n\n    set originalWidth(v) {\n        if (this._originalWidth !== v) {\n            this._originalWidth = v;\n            this.changedDimensions(true, false);\n        }\n    }\n\n    get originalHeight() {\n        return this._originalHeight;\n    }\n\n    set originalHeight(v) {\n        if (this._originalHeight !== v) {\n            this._originalHeight = v;\n            this.changedDimensions(false, true);\n        }\n    }\n\n    get funcX() {\n        return this._target.funcX;\n    }\n\n    get funcY() {\n        return this._target.funcY;\n    }\n\n    get funcW() {\n        return this._target.funcW;\n    }\n\n    get funcH() {\n        return this._target.funcH;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TextureSource {\n\n    constructor(manager, loader = null) {\n        this.id = TextureSource.id++;\n\n        this.manager = manager;\n\n        this.stage = manager.stage;\n\n        /**\n         * All enabled textures (textures that are used by visible elements).\n         * @type {Set<Texture>}\n         */\n        this.textures = new Set();\n\n        /**\n         * The number of active textures (textures that have at least one active element).\n         * @type {number}\n         * @private\n         */\n        this._activeTextureCount = 0;\n\n        /**\n         * The factory for the source of this texture.\n         * @type {Function}\n         */\n        this.loader = loader;\n\n        /**\n         * Identifier for reuse.\n         * @type {String}\n         */\n        this.lookupId = null;\n\n        /**\n         * If set, this.is called when the texture source is no longer displayed (this.components.size becomes 0).\n         * @type {Function}\n         */\n        this._cancelCb = null;\n\n        /**\n         * Loading since timestamp in millis.\n         * @type {number}\n         */\n        this.loadingSince = 0;\n\n        this.w = 0;\n        this.h = 0;\n\n        this._nativeTexture = null;\n\n        /**\n         * If true, then this.texture source is never freed from memory during garbage collection.\n         * @type {boolean}\n         */\n        this.permanent = false;\n\n        /**\n         * Sub-object with texture-specific rendering information.\n         * For images, contains the src property, for texts, contains handy rendering information.\n         * @type {Object}\n         */\n        this.renderInfo = null;\n\n        /**\n         * Generated for 'renderToTexture'.\n         * @type {boolean}\n         * @private\n         */\n        this._isResultTexture = !this.loader;\n\n        /**\n         * Contains the load error, if the texture source could previously not be loaded.\n         * @type {object}\n         * @private\n         */\n        this._loadError = null;\n\n        /**\n         *  Hold a reference to the javascript variable which contains the texture, this is not required for WebGL in WebBrowsers but is required for Spark runtime.\n         * @type {object}\n         * @private\n         */\n        this._imageRef = null;\n\n\n        /**\n         * Track whether or not there is an alpha channel in this source\n         * @type {boolean}\n         * @private\n         */\n         this._hasAlpha = false;\n    }\n\n    get hasAlpha() {\n        return this._hasAlpha;\n    }\n\n    get loadError() {\n        return this._loadError;\n    }\n\n    addTexture(v) {\n        if (!this.textures.has(v)) {\n            this.textures.add(v);\n        }\n    }\n\n    removeTexture(v) {\n        this.textures.delete(v);\n    }\n\n    incActiveTextureCount() {\n        this._activeTextureCount++;\n        if (this._activeTextureCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveTextureCount() {\n        this._activeTextureCount--;\n        if (this._activeTextureCount === 0) {\n            this.becomesUnused();\n        }\n    }\n\n    get isResultTexture() {\n        return this._isResultTexture;\n    }\n\n    set isResultTexture(v) {\n        this._isResultTexture = v;\n    }\n\n    forEachEnabledElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(cb);\n        });\n    }\n\n    hasEnabledElements() {\n        return this.textures.size > 0;\n    }\n\n    forEachActiveElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(element => {\n                if (element.active) {\n                    cb(element);\n                }\n            });\n        });\n    }\n\n    getRenderWidth() {\n        return this.w;\n    }\n\n    getRenderHeight() {\n        return this.h;\n    }\n\n    allowCleanup() {\n        return !this.permanent && !this.isUsed();\n    }\n\n    becomesUsed() {\n        // Even while the texture is being loaded, make sure it is on the lookup map so that others can reuse it.\n        this.load();\n    }\n\n    becomesUnused() {\n        this.cancel();\n    }\n\n    cancel() {\n        if (this.isLoading()) {\n            if (this._cancelCb) {\n                this._cancelCb(this);\n\n                // Clear callback to avoid memory leaks.\n                this._cancelCb = null;\n            }\n            this.loadingSince = 0;\n        }\n    }\n\n    isLoaded() {\n        return !!this._nativeTexture;\n    }\n\n    isLoading() {\n        return (this.loadingSince > 0);\n    }\n\n    isError() {\n        return !!this._loadError;\n    }\n\n    reload() {\n        this.free();\n        if (this.isUsed()) {\n            this.load();\n        }\n    }\n\n    load(forceSync = false) {\n        // From the moment of loading (when a texture source becomes used by active elements)\n        if (this.isResultTexture) {\n            // Element result texture source, for which the loading is managed by the core.\n            return;\n        }\n\n        if (!this._nativeTexture && !this.isLoading()) {\n            this.loadingSince = (new Date()).getTime();\n            this._cancelCb = this.loader((err, options) => {\n                // Ignore loads that come in after a cancel.\n                if (this.isLoading()) {\n                    // Clear callback to avoid memory leaks.\n                    this._cancelCb = null;\n\n                    if (this.manager.stage.destroyed) {\n                        // Ignore async load when stage is destroyed.\n                        return;\n                    }\n                    if (err) {\n                        // Emit txError.\n                        this.onError(err);\n                    } else if (options && options.source) {\n                        if (!this.stage.isUpdatingFrame() && !forceSync && (options.throttle !== false)) {\n                            const textureThrottler = this.stage.textureThrottler;\n                            this._cancelCb = textureThrottler.genericCancelCb;\n                            textureThrottler.add(this, options);\n                        } else {\n                            this.processLoadedSource(options);\n                        }\n                    }\n                }\n            }, this);\n        }\n    }\n\n    processLoadedSource(options) {\n        this.loadingSince = 0;\n        this.setSource(options);\n    }\n\n    setSource(options) {\n        const source = options.source;\n\n        this._hasAlpha = (options ? (options.hasAlpha || false) : false);\n        this.w = source.width || (options && options.w) || 0;\n        this.h = source.height || (options && options.h) || 0;\n\n        if (options && options.renderInfo) {\n            // Assign to id in cache so that it can be reused.\n            this.renderInfo = options.renderInfo;\n        }\n\n        this.permanent = !!options.permanent;\n\n        if (options && options.imageRef)\n            this._imageRef = options.imageRef;\n        if (options && options.flipTextureY) {\n            this._flipTextureY = options.flipTextureY;\n        } else {\n            this._flipTextureY = false;\n        }\n\n        if (this._isNativeTexture(source)) {\n            // Texture managed by caller.\n            this._nativeTexture = source;\n\n            this.w = this.w || source.w;\n            this.h = this.h || source.h;\n\n            // WebGLTexture objects are by default;\n            this.permanent = options.hasOwnProperty('permanent') ? options.permanent : true;\n        } else {\n            this.manager.uploadTextureSource(this, options);\n        }\n\n        // Must be cleared when reload is succesful.\n        this._loadError = null;\n\n        this.onLoad();\n    }\n\n    isUsed() {\n        return this._activeTextureCount > 0;\n    }\n\n    onLoad() {\n        if (this.isUsed()) {\n            this.textures.forEach(texture => {\n                texture.onLoad();\n            });\n        }\n    }\n\n    forceRenderUpdate() {\n        // Userland should call this method after changing the nativeTexture manually outside of the framework\n        //  (using tex[Sub]Image2d for example).\n\n        if (this._nativeTexture) {\n            // Change 'update' flag. This is currently not used by the framework but is handy in userland.\n            this._nativeTexture.update = this.stage.frameCounter;\n        }\n\n        this.forEachActiveElement(function (element) {\n            element.forceRenderUpdate();\n        });\n\n    }\n\n    forceUpdateRenderCoords() {\n        this.forEachActiveElement(function (element) {\n            element._updateTextureCoords();\n        });\n    }\n\n    get nativeTexture() {\n        return this._nativeTexture;\n    }\n\n    clearNativeTexture() {\n        this._nativeTexture = null;\n        //also clear the reference to the texture variable.\n        this._imageRef = null;\n    }\n\n    /**\n     * Used for result textures.\n     */\n    replaceNativeTexture(newNativeTexture, w, h) {\n        let prevNativeTexture = this._nativeTexture;\n        // Loaded by core.\n        this._nativeTexture = newNativeTexture;\n        this.w = w;\n        this.h = h;\n\n        if (!prevNativeTexture && this._nativeTexture) {\n            this.forEachActiveElement(element => element.onTextureSourceLoaded());\n        }\n\n        if (!this._nativeTexture) {\n            this.forEachActiveElement(element => element._setDisplayedTexture(null));\n        }\n\n        // Dimensions must be updated also on enabled elements, as it may force it to go within bounds.\n        this.forEachEnabledElement(element => element._updateDimensions());\n\n        // Notice that the sprite map must never contain render textures.\n    }\n\n    onError(e) {\n        this._loadError = e;\n        this.loadingSince = 0;\n        console.error('[Lightning] texture load error', e, this.lookupId);\n        this.forEachActiveElement(element => element.onTextureSourceLoadError(e));\n    }\n\n    free() {\n        if (this.isLoaded()) {\n            this.manager.freeTextureSource(this);\n        }\n    }\n\n    _isNativeTexture(source) {\n        if (Utils.isNode) {\n            return source.constructor.name === \"WebGLTexture\";\n        }\n\n        if ('WebGLTexture' in window) {\n            return source instanceof WebGLTexture;\n        }\n\n        return false;\n    }\n\n}\n\nTextureSource.prototype.isTextureSource = true;\n\nTextureSource.id = 1;\n\nimport Utils from \"./Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from '../TextureSource.mjs';\n\nexport default class ElementTexturizer {\n\n    constructor(elementCore) {\n\n        this._element = elementCore.element;\n        this._core = elementCore;\n\n        this.ctx = this._core.ctx;\n\n        this._enabled = false;\n        this.lazy = false;\n        this._colorize = false;\n\n        this._renderTexture = null;\n\n        this._renderTextureReused = false;\n\n        this._resultTextureSource = null;\n\n        this._renderOffscreen = false;\n\n        this.empty = false;\n    }\n\n    get enabled() {\n        return this._enabled;\n    }\n\n    set enabled(v) {\n        this._enabled = v;\n        this._core.updateRenderToTextureEnabled();\n    }\n\n    get renderOffscreen() {\n        return this._renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this._renderOffscreen = v;\n        this._core.setHasRenderUpdates(1);\n\n        // This enforces rechecking the 'within bounds'.\n        this._core._setRecalc(6);\n    }\n\n    get colorize() {\n        return this._colorize;\n    }\n\n    set colorize(v) {\n        if (this._colorize !== v) {\n            this._colorize = v;\n\n            // Only affects the finally drawn quad.\n            this._core.setHasRenderUpdates(1);\n        }\n    }\n\n    _getTextureSource() {\n        if (!this._resultTextureSource) {\n            this._resultTextureSource = new TextureSource(this._element.stage.textureManager);\n            this.updateResultTexture();\n        }\n        return this._resultTextureSource;\n    }\n\n    hasResultTexture() {\n        return !!this._resultTextureSource;\n    }\n\n    resultTextureInUse() {\n        return this._resultTextureSource && this._resultTextureSource.hasEnabledElements();\n    }\n\n    updateResultTexture() {\n        let resultTexture = this.getResultTexture();\n        if (this._resultTextureSource) {\n            if (this._resultTextureSource.nativeTexture !== resultTexture) {\n                let w = resultTexture ? resultTexture.w : 0;\n                let h = resultTexture ? resultTexture.h : 0;\n                this._resultTextureSource.replaceNativeTexture(resultTexture, w, h);\n            }\n\n            // Texture will be updated: all elements using the source need to be updated as well.\n            this._resultTextureSource.forEachEnabledElement(element => {\n                element._updateDimensions();\n                element.core.setHasRenderUpdates(3);\n            });\n        }\n    }\n\n    mustRenderToTexture() {\n        // Check if we must really render as texture.\n        if (this._enabled && !this.lazy) {\n            return true;\n        } else if (this._enabled && this.lazy && this._core._hasRenderUpdates < 3) {\n            // Static-only: if renderToTexture did not need to update during last drawn frame, generate it as a cache.\n            return true;\n        }\n        return false;\n    }\n\n    deactivate() {\n        this.release();\n    }\n\n    get renderTextureReused() {\n        return this._renderTextureReused;\n    }\n\n    release() {\n        this.releaseRenderTexture();\n    }\n\n    releaseRenderTexture() {\n        if (this._renderTexture) {\n            if (!this._renderTextureReused) {\n                this.ctx.releaseRenderTexture(this._renderTexture);\n            }\n            this._renderTexture = null;\n            this._renderTextureReused = false;\n            this.updateResultTexture();\n        }\n    }\n\n    // Reuses the specified texture as the render texture (in ancestor).\n    reuseTextureAsRenderTexture(nativeTexture) {\n        if (this._renderTexture !== nativeTexture) {\n            this.releaseRenderTexture();\n            this._renderTexture = nativeTexture;\n            this._renderTextureReused = true;\n        }\n    }\n\n    hasRenderTexture() {\n        return !!this._renderTexture;\n    }\n\n    getRenderTexture() {\n        if (!this._renderTexture) {\n            this._renderTexture = this.ctx.allocateRenderTexture(this._core._w, this._core._h);\n            this._renderTextureReused = false;\n        }\n        return this._renderTexture;\n    }\n\n    getResultTexture() {\n        return this._renderTexture;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexTarget from \"../../flex/FlexTarget.mjs\";\n\nexport default class ElementCore {\n\n    constructor(element) {\n        this._element = element;\n\n        this.ctx = element.stage.ctx;\n\n        // The memory layout of the internal variables is affected by their position in the constructor.\n        // It boosts performance to order them by usage of cpu-heavy functions (renderSimple and update).\n\n        this._recalc = 0;\n\n        this._parent = null;\n\n        this._onUpdate = null;\n\n        this._pRecalc = 0;\n\n        this._worldContext = new ElementCoreContext();\n\n        this._hasUpdates = false;\n\n        this._localAlpha = 1;\n\n        this._onAfterCalcs = null;\n\n        this._onAfterUpdate = null;\n\n        // All local translation/transform updates: directly propagated from x/y/w/h/scale/whatever.\n        this._localPx = 0;\n        this._localPy = 0;\n\n        this._localTa = 1;\n        this._localTb = 0;\n        this._localTc = 0;\n        this._localTd = 1;\n\n        this._isComplex = false;\n\n        this._dimsUnknown = false;\n\n        this._clipping = false;\n\n        // Used by both update and render.\n        this._zSort = false;\n\n        this._outOfBounds = 0;\n\n        /**\n         * The texture source to be displayed.\n         * @type {TextureSource}\n         */\n        this._displayedTextureSource = null;\n\n        this._zContextUsage = 0;\n\n        this._children = null;\n\n        this._hasRenderUpdates = 0;\n\n        this._zIndexedChildren = null;\n\n        this._renderContext = this._worldContext;\n\n        this.renderState = this.ctx.renderState;\n\n        this._scissor = null;\n\n        // The ancestor ElementCore that owns the inherited shader. Null if none is active (default shader).\n        this._shaderOwner = null;\n\n\n        this._updateTreeOrder = 0;\n\n        this._colorUl = this._colorUr = this._colorBl = this._colorBr = 0xFFFFFFFF;\n\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n\n        this._optFlags = 0;\n        this._funcX = null;\n        this._funcY = null;\n        this._funcW = null;\n        this._funcH = null;\n\n        this._scaleX = 1;\n        this._scaleY = 1;\n        this._pivotX = 0.5;\n        this._pivotY = 0.5;\n        this._mountX = 0;\n        this._mountY = 0;\n        this._rotation = 0;\n\n        this._alpha = 1;\n        this._visible = true;\n\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n\n        this._zIndex = 0;\n        this._forceZIndexContext = false;\n        this._zParent = null;\n\n        this._isRoot = false;\n\n        /**\n         * Iff true, during zSort, this element should be 're-sorted' because either:\n         * - zIndex did chang\n         * - zParent did change\n         * - element was moved in the render tree\n         * @type {boolean}\n         */\n        this._zIndexResort = false;\n\n        this._shader = null;\n\n        // Element is rendered on another texture.\n        this._renderToTextureEnabled = false;\n\n        this._texturizer = null;\n\n        this._useRenderToTexture = false;\n\n        this._boundsMargin = null;\n\n        this._recBoundsMargin = null;\n\n        this._withinBoundsMargin = false;\n\n        this._viewport = null;\n\n        this._clipbox = true;\n\n        this.render = this._renderSimple;\n\n        this._layout = null;\n    }\n\n    get offsetX() {\n        if (this._funcX) {\n            return this._funcX;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalX;\n            } else {\n                return this._x;\n            }\n        }\n    }\n\n    set offsetX(v) {\n        if (Utils.isFunction(v)) {\n            this.funcX = v;\n        } else {\n            this._disableFuncX();\n            if (this.hasFlexLayout()) {\n                this.x += (v - this._layout.originalX);\n                this._layout.setOriginalXWithoutUpdatingLayout(v);\n            } else {\n                this.x = v;\n            }\n        }\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        if (v !== this._x) {\n            this._updateLocalTranslateDelta(v - this._x, 0);\n            this._x = v;\n        }\n    }\n\n    get funcX() {\n        return (this._optFlags & 1 ? this._funcX : null);\n    }\n\n    set funcX(v) {\n        if (this._funcX !== v) {\n            this._optFlags |= 1;\n            this._funcX = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalXWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._x = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncX() {\n        this._optFlags = this._optFlags & (0xFFFF - 1);\n        this._funcX = null;\n    }\n\n    get offsetY() {\n        if (this._funcY) {\n            return this._funcY;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalY;\n            } else {\n                return this._y;\n            }\n        }\n    }\n\n    set offsetY(v) {\n        if (Utils.isFunction(v)) {\n            this.funcY = v;\n        } else {\n            this._disableFuncY();\n            if (this.hasFlexLayout()) {\n                this.y += (v - this._layout.originalY);\n                this._layout.setOriginalYWithoutUpdatingLayout(v);\n            } else {\n                this.y = v;\n            }\n        }\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        if (v !== this._y) {\n            this._updateLocalTranslateDelta(0, v - this._y);\n            this._y = v;\n        }\n    }\n\n    get funcY() {\n        return (this._optFlags & 2 ? this._funcY : null);\n    }\n\n    set funcY(v) {\n        if (this._funcY !== v) {\n            this._optFlags |= 2;\n            this._funcY = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalYWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._y = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncY() {\n        this._optFlags = this._optFlags & (0xFFFF - 2);\n        this._funcY = null;\n    }\n\n    get funcW() {\n        return (this._optFlags & 4 ? this._funcW : null);\n    }\n\n    set funcW(v) {\n        if (this._funcW !== v) {\n            this._optFlags |= 4;\n            this._funcW = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalWidth = 0;\n                this.layout.changedDimensions(true, false);\n            } else {\n                this._w = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncW() {\n        this._optFlags = this._optFlags & (0xFFFF - 4);\n        this._funcW = null;\n    }\n\n    get funcH() {\n        return (this._optFlags & 8 ? this._funcH : null);\n    }\n\n    set funcH(v) {\n        if (this._funcH !== v) {\n            this._optFlags |= 8;\n            this._funcH = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalHeight = 0;\n                this.layout.changedDimensions(false, true);\n            } else {\n                this._h = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncH() {\n        this._optFlags = this._optFlags & (0xFFFF - 8);\n        this._funcH = null;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    getRenderWidth() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalWidth;\n        } else {\n            return this._w;\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    getRenderHeight() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalHeight;\n        } else {\n            return this._h;\n        }\n    }\n\n    get scaleX() {\n        return this._scaleX;\n    }\n\n    set scaleX(v) {\n        if (this._scaleX !== v) {\n            this._scaleX = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scaleY() {\n        return this._scaleY;\n    }\n\n    set scaleY(v) {\n        if (this._scaleY !== v) {\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scale() {\n        return this.scaleX;\n    }\n\n    set scale(v) {\n        if (this._scaleX !== v || this._scaleY !== v) {\n            this._scaleX = v;\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        if (this._pivotX !== v) {\n            this._pivotX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        if (this._pivotY !== v) {\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivot() {\n        return this._pivotX;\n    }\n\n    set pivot(v) {\n        if (this._pivotX !== v || this._pivotY !== v) {\n            this._pivotX = v;\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountX() {\n        return this._mountX;\n    }\n\n    set mountX(v) {\n        if (this._mountX !== v) {\n            this._mountX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountY() {\n        return this._mountY;\n    }\n\n    set mountY(v) {\n        if (this._mountY !== v) {\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mount() {\n        return this._mountX;\n    }\n\n    set mount(v) {\n        if (this._mountX !== v || this._mountY !== v) {\n            this._mountX = v;\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get rotation() {\n        return this._rotation;\n    }\n\n    set rotation(v) {\n        if (this._rotation !== v) {\n            this._rotation = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get alpha() {\n        return this._alpha;\n    }\n\n    set alpha(v) {\n        // Account for rounding errors.\n        v = (v > 1 ? 1 : (v < 1e-14 ? 0 : v));\n        if (this._alpha !== v) {\n            let prev = this._alpha;\n            this._alpha = v;\n            this._updateLocalAlpha();\n            if ((prev === 0) !== (v === 0)) {\n                this._element._updateEnabledFlag();\n            }\n        }\n    }\n\n    get visible() {\n        return this._visible;\n    }\n\n    set visible(v) {\n        if (this._visible !== v) {\n            this._visible = v;\n            this._updateLocalAlpha();\n            this._element._updateEnabledFlag();\n\n            if (this.hasFlexLayout()) {\n                this.layout.setVisible(v);\n            }\n        }\n    }\n\n    _updateLocalTransform() {\n        if (this._rotation !== 0 && this._rotation % (2 * Math.PI)) {\n            // check to see if the rotation is the same as the previous render. This means we only need to use sin and cos when rotation actually changes\n            let _sr = Math.sin(this._rotation);\n            let _cr = Math.cos(this._rotation);\n\n            this._setLocalTransform(\n                _cr * this._scaleX,\n                -_sr * this._scaleY,\n                _sr * this._scaleX,\n                _cr * this._scaleY\n            );\n        } else {\n            this._setLocalTransform(\n                this._scaleX,\n                0,\n                0,\n                this._scaleY\n            );\n        }\n        this._updateLocalTranslate();\n    };\n\n    _updateLocalTranslate() {\n        this._recalcLocalTranslate();\n        this._triggerRecalcTranslate();\n    };\n\n    _recalcLocalTranslate() {\n        let pivotXMul = this._pivotX * this._w;\n        let pivotYMul = this._pivotY * this._h;\n        let px = this._x - (pivotXMul * this._localTa + pivotYMul * this._localTb) + pivotXMul;\n        let py = this._y - (pivotXMul * this._localTc + pivotYMul * this._localTd) + pivotYMul;\n        px -= this._mountX * this._w;\n        py -= this._mountY * this._h;\n        this._localPx = px;\n        this._localPy = py;\n    }\n\n    _updateLocalTranslateDelta(dx, dy) {\n        this._addLocalTranslate(dx, dy);\n    };\n\n    _updateLocalAlpha() {\n        this._setLocalAlpha(this._visible ? this._alpha : 0);\n    };\n\n    /**\n     * @param {number} type\n     * 0: no updates\n     * 1: re-invoke shader\n     * 3: re-create render texture and re-invoke shader\n     */\n    setHasRenderUpdates(type) {\n        if (this._worldContext.alpha) {\n            // Ignore if 'world invisible'. Render updates will be reset to 3 for every element that becomes visible.\n            let p = this;\n            p._hasRenderUpdates = Math.max(type, p._hasRenderUpdates);\n            while ((p = p._parent) && (p._hasRenderUpdates !== 3)) {\n                p._hasRenderUpdates = 3;\n            }\n        }\n    }\n\n    /**\n     * @param {Number} type\n     *   1: alpha\n     *   2: translate\n     *   4: transform\n     * 128: becomes visible\n     * 256: flex layout updated\n     */\n    _setRecalc(type) {\n        this._recalc |= type;\n\n        this._setHasUpdates();\n\n        // Any changes in descendants should trigger texture updates.\n        if (this._parent) {\n            this._parent.setHasRenderUpdates(3);\n        }\n    }\n\n    _setHasUpdates() {\n        let p = this;\n        while (p && !p._hasUpdates) {\n            p._hasUpdates = true;\n            p = p._parent;\n        }\n    }\n\n    getParent() {\n        return this._parent;\n    }\n\n    setParent(parent) {\n        if (parent !== this._parent) {\n            let prevIsZContext = this.isZContext();\n            let prevParent = this._parent;\n            this._parent = parent;\n\n            // Notify flex layout engine.\n            if (this._layout || (parent && parent.isFlexContainer())) {\n                this.layout.setParent(prevParent, parent);\n            }\n\n            if (prevParent) {\n                // When elements are deleted, the render texture must be re-rendered.\n                prevParent.setHasRenderUpdates(3);\n            }\n\n            this._setRecalc(1 + 2 + 4);\n\n            if (this._parent) {\n                // Force parent to propagate hasUpdates flag.\n                this._parent._setHasUpdates();\n            }\n\n            if (this._zIndex === 0) {\n                this.setZParent(parent);\n            } else {\n                this.setZParent(parent ? parent.findZContext() : null);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(prevParent.findZContext());\n                }\n            }\n\n            // Tree order did change: even if zParent stays the same, we must resort.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n\n            if (!this._shader) {\n                let newShaderOwner = parent && !parent._renderToTextureEnabled ? parent._shaderOwner : null;\n                if (newShaderOwner !== this._shaderOwner) {\n                    this.setHasRenderUpdates(1);\n                    this._setShaderOwnerRecursive(newShaderOwner);\n                }\n            }\n        }\n    };\n\n    enableZSort(force = false) {\n        if (!this._zSort && this._zContextUsage > 0) {\n            this._zSort = true;\n            if (force) {\n                // ZSort must be done, even if this element is invisible.\n                // This is done to prevent memory leaks when removing element from inactive render branches.\n                this.ctx.forceZSort(this);\n            }\n        }\n    }\n\n    addChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children.splice(index, 0, child);\n        child.setParent(this);\n    };\n\n    setChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children[index].setParent(null);\n        this._children[index] = child;\n        child.setParent(this);\n    }\n\n    removeChildAt(index) {\n        let child = this._children[index];\n        this._children.splice(index, 1);\n        child.setParent(null);\n    };\n\n    removeChildren() {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i].setParent(null);\n            }\n\n            this._children.splice(0);\n\n            if (this._zIndexedChildren) {\n                this._zIndexedChildren.splice(0);\n            }\n        }\n    };\n\n    syncChildren(removed, added, order) {\n        this._children = order;\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i].setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            added[i].setParent(this);\n        }\n    }\n\n    moveChild(fromIndex, toIndex) {\n        let c = this._children[fromIndex];\n        this._children.splice(fromIndex, 1);\n        this._children.splice(toIndex, 0, c);\n\n        // Tree order changed: must resort!;\n        this._zIndexResort = true;\n        if (this._zParent) {\n            this._zParent.enableZSort();\n        }\n    }\n\n    _setLocalTransform(a, b, c, d) {\n        this._setRecalc(4);\n        this._localTa = a;\n        this._localTb = b;\n        this._localTc = c;\n        this._localTd = d;\n\n        // We also regard negative scaling as a complex case, so that we can optimize the non-complex case better.\n        this._isComplex = (b !== 0) || (c !== 0) || (a < 0) || (d < 0);\n    };\n\n    _addLocalTranslate(dx, dy) {\n        this._localPx += dx;\n        this._localPy += dy;\n        this._triggerRecalcTranslate();\n    }\n\n    _setLocalAlpha(a) {\n        if (!this._worldContext.alpha && ((this._parent && this._parent._worldContext.alpha) && a)) {\n            // Element is becoming visible. We need to force update.\n            this._setRecalc(1 + 128);\n        } else {\n            this._setRecalc(1);\n        }\n\n        if (a < 1e-14) {\n            // Tiny rounding errors may cause failing visibility tests.\n            a = 0;\n        }\n\n        this._localAlpha = a;\n    };\n\n    setDimensions(w, h, isEstimate = this._dimsUnknown) {\n        // In case of an estimation, the update loop should perform different bound checks.\n        this._dimsUnknown = isEstimate;\n\n        if (this.hasFlexLayout()) {\n            this._layout.originalWidth = w;\n            this._layout.originalHeight = h;\n        } else {\n            if (this._w !== w || this._h !== h) {\n                this._updateDimensions(w, h);\n                return true;\n            }\n        }\n        return false;\n    };\n\n    _updateDimensions(w, h) {\n        if (this._w !== w || this._h !== h) {\n            this._w = w;\n            this._h = h;\n\n            this._triggerRecalcTranslate();\n\n            if (this._texturizer) {\n                this._texturizer.releaseRenderTexture();\n                this._texturizer.updateResultTexture();\n            }\n            // Due to width/height change: update the translation vector.\n            this._updateLocalTranslate();\n        }\n    }\n\n    setTextureCoords(ulx, uly, brx, bry) {\n        this.setHasRenderUpdates(3);\n\n        this._ulx = ulx;\n        this._uly = uly;\n        this._brx = brx;\n        this._bry = bry;\n    };\n\n    get displayedTextureSource() {\n        return this._displayedTextureSource;\n    }\n\n    setDisplayedTextureSource(textureSource) {\n        this.setHasRenderUpdates(3);\n        this._displayedTextureSource = textureSource;\n    };\n\n    get isRoot() {\n        return this._isRoot;\n    }\n\n    setAsRoot() {\n        // Use parent dummy.\n        this._parent = new ElementCore(this._element);\n\n        // After setting root, make sure it's updated.\n        this._parent._hasRenderUpdates = 3;\n        this._parent._hasUpdates = true;\n\n        // Root is, and will always be, the primary zContext.\n        this._isRoot = true;\n\n        this.ctx.root = this;\n\n        // Set scissor area of 'fake parent' to stage's viewport.\n        this._parent._viewport = [0, 0, this.ctx.stage.coordsWidth, this.ctx.stage.coordsHeight];\n        this._parent._scissor = this._parent._viewport;\n\n        // When recBoundsMargin is null, the defaults are used (100 for all sides).\n        this._parent._recBoundsMargin = null;\n\n        this._setRecalc(1 + 2 + 4);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while (p = p._parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    isZContext() {\n        return (this._forceZIndexContext || this._renderToTextureEnabled || this._zIndex !== 0 || this._isRoot || !this._parent);\n    };\n\n    findZContext() {\n        if (this.isZContext()) {\n            return this;\n        } else {\n            return this._parent.findZContext();\n        }\n    };\n\n    setZParent(newZParent) {\n        if (this._zParent !== newZParent) {\n            if (this._zParent !== null) {\n                if (this._zIndex !== 0) {\n                    this._zParent.decZContextUsage();\n                }\n\n                // We must filter out this item upon the next resort.\n                this._zParent.enableZSort();\n            }\n\n            if (newZParent !== null) {\n                let hadZContextUsage = (newZParent._zContextUsage > 0);\n\n                // @pre: new parent's children array has already been modified.\n                if (this._zIndex !== 0) {\n                    newZParent.incZContextUsage();\n                }\n\n                if (newZParent._zContextUsage > 0) {\n                    if (!hadZContextUsage && (this._parent === newZParent)) {\n                        // This child was already in the children list.\n                        // Do not add double.\n                    } else {\n                        // Add new child to array.\n                        newZParent._zIndexedChildren.push(this);\n                    }\n\n                    // Order should be checked.\n                    newZParent.enableZSort();\n                }\n            }\n\n            this._zParent = newZParent;\n\n            // Newly added element must be marked for resort.\n            this._zIndexResort = true;\n        }\n    };\n\n    incZContextUsage() {\n        this._zContextUsage++;\n        if (this._zContextUsage === 1) {\n            if (!this._zIndexedChildren) {\n                this._zIndexedChildren = [];\n            }\n            if (this._children) {\n                // Copy.\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._zIndexedChildren.push(this._children[i]);\n                }\n                // Initially, children are already sorted properly (tree order).\n                this._zSort = false;\n            }\n        }\n    };\n\n    decZContextUsage() {\n        this._zContextUsage--;\n        if (this._zContextUsage === 0) {\n            this._zSort = false;\n            this._zIndexedChildren.splice(0);\n        }\n    };\n\n    get zIndex() {\n        return this._zIndex;\n    }\n\n    set zIndex(zIndex) {\n        if (this._zIndex !== zIndex) {\n            this.setHasRenderUpdates(1);\n\n            let newZParent = this._zParent;\n\n            let prevIsZContext = this.isZContext();\n            if (zIndex === 0 && this._zIndex !== 0) {\n                if (this._parent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.decZContextUsage();\n                    }\n                } else {\n                    newZParent = this._parent;\n                }\n            } else if (zIndex !== 0 && this._zIndex === 0) {\n                newZParent = this._parent ? this._parent.findZContext() : null;\n                if (newZParent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.incZContextUsage();\n                        this._zParent.enableZSort();\n                    }\n                }\n            } else if (zIndex !== this._zIndex) {\n                if (this._zParent && this._zParent._zContextUsage) {\n                    this._zParent.enableZSort();\n                }\n            }\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(null);\n            }\n\n            this._zIndex = zIndex;\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(newZParent);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(this._parent.findZContext());\n                }\n            }\n\n            // Make sure that resort is done.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n        }\n    };\n\n    get forceZIndexContext() {\n        return this._forceZIndexContext;\n    }\n\n    set forceZIndexContext(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevIsZContext = this.isZContext();\n        this._forceZIndexContext = v;\n\n        if (prevIsZContext !== this.isZContext()) {\n            if (!this.isZContext()) {\n                this.disableZContext();\n            } else {\n                this.enableZContext(this._parent.findZContext());\n            }\n        }\n    };\n\n    enableZContext(prevZContext) {\n        if (prevZContext && prevZContext._zContextUsage > 0) {\n            // Transfer from upper z context to this z context.\n            const results = this._getZIndexedDescs();\n            results.forEach((c) => {\n                if (this.isAncestorOf(c) && c._zIndex !== 0) {\n                    c.setZParent(this);\n                }\n            });\n        }\n    }\n\n    _getZIndexedDescs() {\n        const results = [];\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n        return results;\n    }\n\n    _getZIndexedDescsRec(results) {\n        if (this._zIndex) {\n            results.push(this);\n        } else if (this._children && !this.isZContext()) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n    }\n\n    disableZContext() {\n        // Transfer from this z context to upper z context.\n        if (this._zContextUsage > 0) {\n            let newZParent = this._parent.findZContext();\n\n            // Make sure that z-indexed children are up to date (old ones removed).\n            if (this._zSort) {\n                this.sortZIndexedChildren();\n            }\n\n            this._zIndexedChildren.slice().forEach(function (c) {\n                if (c._zIndex !== 0) {\n                    c.setZParent(newZParent);\n                }\n            });\n        }\n    };\n\n    get colorUl() {\n        return this._colorUl;\n    }\n\n    set colorUl(color) {\n        if (this._colorUl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUl = color;\n        }\n    }\n\n    get colorUr() {\n        return this._colorUr;\n    }\n\n    set colorUr(color) {\n        if (this._colorUr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUr = color;\n        }\n    };\n\n    get colorBl() {\n        return this._colorBl;\n    }\n\n    set colorBl(color) {\n        if (this._colorBl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBl = color;\n        }\n    };\n\n    get colorBr() {\n        return this._colorBr;\n    }\n\n    set colorBr(color) {\n        if (this._colorBr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBr = color;\n        }\n    };\n\n\n    set onUpdate(f) {\n        this._onUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterUpdate(f) {\n        this._onAfterUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterCalcs(f) {\n        this._onAfterCalcs = f;\n        this._setRecalc(7);\n    }\n\n    get shader() {\n        return this._shader;\n    }\n\n    set shader(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevShader = this._shader;\n        this._shader = v;\n        if (!v && prevShader) {\n            // Disabled shader.\n            let newShaderOwner = (this._parent && !this._parent._renderToTextureEnabled ? this._parent._shaderOwner : null);\n            this._setShaderOwnerRecursive(newShaderOwner);\n        } else if (v) {\n            // Enabled shader.\n            this._setShaderOwnerRecursive(this);\n        }\n    }\n\n    get activeShader() {\n        return this._shaderOwner ? this._shaderOwner.shader : this.renderState.defaultShader;\n    }\n\n    get activeShaderOwner() {\n        return this._shaderOwner;\n    }\n\n    get clipping() {\n        return this._clipping;\n    }\n\n    set clipping(v) {\n        if (this._clipping !== v) {\n            this._clipping = v;\n\n            // Force update of scissor by updating translate.\n            // Alpha must also be updated because the scissor area may have been empty.\n            this._setRecalc(1 + 2);\n        }\n    }\n\n    get clipbox() {\n        return this._clipbox;\n    }\n\n    set clipbox(v) {\n        // In case of out-of-bounds element, all children will also be ignored.\n        // It will save us from executing the update/render loops for those.\n        // The optimization will be used immediately during the next frame.\n        this._clipbox = v;\n    }\n\n    _setShaderOwnerRecursive(elementCore) {\n        this._shaderOwner = elementCore;\n\n        if (this._children && !this._renderToTextureEnabled) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _setShaderOwnerChildrenRecursive(elementCore) {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _hasRenderContext() {\n        return this._renderContext !== this._worldContext;\n    }\n\n    get renderContext() {\n        return this._renderContext;\n    }\n\n    updateRenderToTextureEnabled() {\n        // Enforce texturizer initialisation.\n        let v = this.texturizer._enabled;\n\n        if (v) {\n            this._enableRenderToTexture();\n        } else {\n            this._disableRenderToTexture();\n            this._texturizer.releaseRenderTexture();\n        }\n    }\n\n    _enableRenderToTexture() {\n        if (!this._renderToTextureEnabled) {\n            let prevIsZContext = this.isZContext();\n\n            this._renderToTextureEnabled = true;\n\n            this._renderContext = new ElementCoreContext();\n\n            // If render to texture is active, a new shader context is started.\n            this._setShaderOwnerChildrenRecursive(null);\n\n            if (!prevIsZContext) {\n                // Render context forces z context.\n                this.enableZContext(this._parent ? this._parent.findZContext() : null);\n            }\n\n            this.setHasRenderUpdates(3);\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.render = this._renderAdvanced;\n        }\n    }\n\n    _disableRenderToTexture() {\n        if (this._renderToTextureEnabled) {\n            this._renderToTextureEnabled = false;\n\n            this._setShaderOwnerChildrenRecursive(this._shaderOwner);\n\n            this._renderContext = this._worldContext;\n\n            if (!this.isZContext()) {\n                this.disableZContext();\n            }\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.setHasRenderUpdates(3);\n\n            this.render = this._renderSimple;\n        }\n    }\n\n    isWhite() {\n        return (this._colorUl === 0xFFFFFFFF) && (this._colorUr === 0xFFFFFFFF) && (this._colorBl === 0xFFFFFFFF) && (this._colorBr === 0xFFFFFFFF);\n    }\n\n    hasSimpleTexCoords() {\n        return (this._ulx === 0) && (this._uly === 0) && (this._brx === 1) && (this._bry === 1);\n    }\n\n    _stashTexCoords() {\n        this._stashedTexCoords = [this._ulx, this._uly, this._brx, this._bry];\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n    }\n\n    _unstashTexCoords() {\n        this._ulx = this._stashedTexCoords[0];\n        this._uly = this._stashedTexCoords[1];\n        this._brx = this._stashedTexCoords[2];\n        this._bry = this._stashedTexCoords[3];\n        this._stashedTexCoords = null;\n    }\n\n    _stashColors() {\n        this._stashedColors = [this._colorUl, this._colorUr, this._colorBr, this._colorBl];\n        this._colorUl = 0xFFFFFFFF;\n        this._colorUr = 0xFFFFFFFF;\n        this._colorBr = 0xFFFFFFFF;\n        this._colorBl = 0xFFFFFFFF;\n    }\n\n    _unstashColors() {\n        this._colorUl = this._stashedColors[0];\n        this._colorUr = this._stashedColors[1];\n        this._colorBr = this._stashedColors[2];\n        this._colorBl = this._stashedColors[3];\n        this._stashedColors = null;\n    }\n\n    isVisible() {\n        return (this._localAlpha > 1e-14);\n    };\n\n    get outOfBounds() {\n        return this._outOfBounds;\n    }\n\n    set boundsMargin(v) {\n\n        /**\n         *  null: inherit from parent.\n         *  number[4]: specific margins: left, top, right, bottom.\n         */\n        this._boundsMargin = v ? v.slice() : null;\n\n        // We force recalc in order to set all boundsMargin recursively during the next update.\n        this._triggerRecalcTranslate();\n    }\n\n    get boundsMargin() {\n        return this._boundsMargin;\n    }\n\n    update() {\n        this._recalc |= this._parent._pRecalc;\n\n        if (this._layout && this._layout.isEnabled()) {\n            if (this._recalc & 256) {\n                this._layout.layoutFlexTree();\n            }\n        } else if ((this._recalc & 2) && this._optFlags) {\n            this._applyRelativeDimFuncs();\n        }\n\n        if (this._onUpdate) {\n            // Block all 'upwards' updates when changing things in this branch.\n            this._hasUpdates = true;\n            this._onUpdate(this.element, this);\n        }\n\n        const pw = this._parent._worldContext;\n        let w = this._worldContext;\n        const visible = (pw.alpha && this._localAlpha);\n\n        /**\n         * We must update if:\n         * - branch contains updates (even when invisible because it may contain z-indexed descendants)\n         * - there are (inherited) updates and this branch is visible\n         * - this branch becomes invisible (descs may be z-indexed so we must update all alpha values)\n         */\n        if (this._hasUpdates || (this._recalc && visible) || (w.alpha && !visible)) {\n            let recalc = this._recalc;\n\n            // Update world coords/alpha.\n            if (recalc & 1) {\n                if (!w.alpha && visible) {\n                    // Becomes visible.\n                    this._hasRenderUpdates = 3;\n                }\n                w.alpha = pw.alpha * this._localAlpha;\n\n                if (w.alpha < 1e-14) {\n                    // Tiny rounding errors may cause failing visibility tests.\n                    w.alpha = 0;\n                }\n            }\n\n            if (recalc & 6) {\n                w.px = pw.px + this._localPx * pw.ta;\n                w.py = pw.py + this._localPy * pw.td;\n                if (pw.tb !== 0) w.px += this._localPy * pw.tb;\n                if (pw.tc !== 0) w.py += this._localPx * pw.tc;\n            }\n\n            if (recalc & 4) {\n                w.ta = this._localTa * pw.ta;\n                w.tb = this._localTd * pw.tb;\n                w.tc = this._localTa * pw.tc;\n                w.td = this._localTd * pw.td;\n\n                if (this._isComplex) {\n                    w.ta += this._localTc * pw.tb;\n                    w.tb += this._localTb * pw.ta;\n                    w.tc += this._localTc * pw.td;\n                    w.td += this._localTb * pw.tc;\n                }\n            }\n\n            // Update render coords/alpha.\n            const pr = this._parent._renderContext;\n            if (this._parent._hasRenderContext()) {\n                const init = this._renderContext === this._worldContext;\n                if (init) {\n                    // First render context build: make sure that it is fully initialized correctly.\n                    // Otherwise, if we get into bounds later, the render context would not be initialized correctly.\n                    this._renderContext = new ElementCoreContext();\n                }\n\n                const r = this._renderContext;\n\n                // Update world coords/alpha.\n                if (init || (recalc & 1)) {\n                    r.alpha = pr.alpha * this._localAlpha;\n\n                    if (r.alpha < 1e-14) {\n                        r.alpha = 0;\n                    }\n                }\n\n                if (init || (recalc & 6)) {\n                    r.px = pr.px + this._localPx * pr.ta;\n                    r.py = pr.py + this._localPy * pr.td;\n                    if (pr.tb !== 0) r.px += this._localPy * pr.tb;\n                    if (pr.tc !== 0) r.py += this._localPx * pr.tc;\n                }\n\n                if (init) {\n                    // We set the recalc toggle, because we must make sure that the scissor is updated.\n                    recalc |= 2;\n                }\n\n                if (init || (recalc & 4)) {\n                    r.ta = this._localTa * pr.ta;\n                    r.tb = this._localTd * pr.tb;\n                    r.tc = this._localTa * pr.tc;\n                    r.td = this._localTd * pr.td;\n\n                    if (this._isComplex) {\n                        r.ta += this._localTc * pr.tb;\n                        r.tb += this._localTb * pr.ta;\n                        r.tc += this._localTc * pr.td;\n                        r.td += this._localTb * pr.tc;\n                    }\n                }\n            } else {\n                this._renderContext = this._worldContext;\n            }\n\n            if (this.ctx.updateTreeOrder === -1) {\n                this.ctx.updateTreeOrder = this._updateTreeOrder + 1;\n            } else {\n                this._updateTreeOrder = this.ctx.updateTreeOrder++;\n            }\n\n            // Determine whether we must use a 'renderTexture'.\n            const useRenderToTexture = this._renderToTextureEnabled && this._texturizer.mustRenderToTexture();\n            if (this._useRenderToTexture !== useRenderToTexture) {\n                // Coords must be changed.\n                this._recalc |= 2 + 4;\n\n                // Scissor may change: force update.\n                recalc |= 2;\n\n                if (!this._useRenderToTexture) {\n                    // We must release the texture.\n                    this._texturizer.release();\n                }\n            }\n            this._useRenderToTexture = useRenderToTexture;\n\n            const r = this._renderContext;\n\n            const bboxW = this._dimsUnknown ? 2048 : this._w;\n            const bboxH = this._dimsUnknown ? 2048 : this._h;\n\n            // Calculate a bbox for this element.\n            let sx, sy, ex, ey;\n            const rComplex = (r.tb !== 0) || (r.tc !== 0) || (r.ta < 0) || (r.td < 0);\n            if (rComplex) {\n                sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n            } else {\n                sx = r.px;\n                ex = r.px + r.ta * bboxW;\n                sy = r.py;\n                ey = r.py + r.td * bboxH;\n            }\n\n            if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                // If we are dealing with a non-identity matrix, we must extend the bbox so that withinBounds and\n                //  scissors will include the complete range of (positive) dimensions up to ,lh.\n                const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                if (nx < sx) sx = nx;\n                if (ny < sy) sy = ny;\n                if (nx > ex) ex = nx;\n                if (ny > ey) ey = ny;\n            }\n\n            if (recalc & 6 || !this._scissor /* initial */) {\n                // Determine whether we must 'clip'.\n                if (this._clipping && r.isSquare()) {\n                    // If the parent renders to a texture, it's scissor should be ignored;\n                    const area = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                    if (area) {\n                        // Merge scissor areas.\n                        const lx = Math.max(area[0], sx);\n                        const ly = Math.max(area[1], sy);\n                        this._scissor = [\n                            lx,\n                            ly,\n                            Math.min(area[2] + area[0], ex) - lx,\n                            Math.min(area[3] + area[1], ey) - ly\n                        ];\n                    } else {\n                        this._scissor = [sx, sy, ex - sx, ey - sy];\n                    }\n                } else {\n                    // No clipping: reuse parent scissor.\n                    this._scissor = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                }\n            }\n\n            // Calculate the outOfBounds margin.\n            if (this._boundsMargin) {\n                this._recBoundsMargin = this._boundsMargin;\n            } else {\n                this._recBoundsMargin = this._parent._recBoundsMargin;\n            }\n\n            if (this._onAfterCalcs) {\n                // After calcs may change render coords, scissor and/or recBoundsMargin.\n                if (this._onAfterCalcs(this.element)) {\n                    // Recalculate bbox.\n                    if (rComplex) {\n                        sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                        ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                    } else {\n                        sx = r.px;\n                        ex = r.px + r.ta * bboxW;\n                        sy = r.py;\n                        ey = r.py + r.td * bboxH;\n                    }\n\n                    if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                        const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                        const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                        if (nx < sx) sx = nx;\n                        if (ny < sy) sy = ny;\n                        if (nx > ex) ex = nx;\n                        if (ny > ey) ey = ny;\n                    }\n                }\n            }\n\n            if (this._parent._outOfBounds === 2) {\n                // Inherit parent out of boundsness.\n                this._outOfBounds = 2;\n\n                if (this._withinBoundsMargin) {\n                    this._withinBoundsMargin = false;\n                    this.element._disableWithinBoundsMargin();\n                }\n            } else {\n                if (recalc & 6) {\n                    // Recheck if element is out-of-bounds (all settings that affect this should enable recalc bit 2 or 4).\n                    this._outOfBounds = 0;\n                    let withinMargin = true;\n\n                    // Offscreens are always rendered as long as the parent is within bounds.\n                    if (!this._renderToTextureEnabled || !this._texturizer || !this._texturizer.renderOffscreen) {\n                        if (this._scissor && (this._scissor[2] <= 0 || this._scissor[3] <= 0)) {\n                            // Empty scissor area.\n                            this._outOfBounds = 2;\n                        } else {\n                            // Use bbox to check out-of-boundness.\n                            if ((this._scissor[0] > ex) ||\n                                (this._scissor[1] > ey) ||\n                                (sx > (this._scissor[0] + this._scissor[2])) ||\n                                (sy > (this._scissor[1] + this._scissor[3]))\n                            ) {\n                                this._outOfBounds = 1;\n                            }\n\n                            if (this._outOfBounds) {\n                                if (this._clipping || this._useRenderToTexture || (this._clipbox && (bboxW && bboxH))) {\n                                    this._outOfBounds = 2;\n                                }\n                            }\n                        }\n\n                        withinMargin = (this._outOfBounds === 0);\n                        if (!withinMargin) {\n                            // Re-test, now with margins.\n                            if (this._recBoundsMargin) {\n                                withinMargin = !((ex < this._scissor[0] - this._recBoundsMargin[2]) ||\n                                    (ey < this._scissor[1] - this._recBoundsMargin[3]) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + this._recBoundsMargin[0]) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + this._recBoundsMargin[1]));\n                            } else {\n                                withinMargin = !((ex < this._scissor[0] - 100) ||\n                                    (ey < this._scissor[1] - 100) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + 100) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + 100));\n                            }\n                            if (withinMargin && this._outOfBounds === 2) {\n                                // Children must be visited because they may contain elements that are within margin, so must be visible.\n                                this._outOfBounds = 1;\n                            }\n                        }\n                    }\n\n                    if (this._withinBoundsMargin !== withinMargin) {\n                        this._withinBoundsMargin = withinMargin;\n\n                        if (this._withinBoundsMargin) {\n                            // This may update things (txLoaded events) in the element itself, but also in descendants and ancestors.\n\n                            // Changes in ancestors should be executed during the next call of the stage update. But we must\n                            // take care that the _recalc and _hasUpdates flags are properly registered. That's why we clear\n                            // both before entering the children, and use _pRecalc to transfer inherited updates instead of\n                            // _recalc directly.\n\n                            // Changes in descendants are automatically executed within the current update loop, though we must\n                            // take care to not update the hasUpdates flag unnecessarily in ancestors. We achieve this by making\n                            // sure that the hasUpdates flag of this element is turned on, which blocks it for ancestors.\n                            this._hasUpdates = true;\n\n                            const recalc = this._recalc;\n                            this._recalc = 0;\n                            this.element._enableWithinBoundsMargin();\n\n                            if (this._recalc) {\n                                // This element needs to be re-updated now, because we want the dimensions (and other changes) to be updated.\n                                return this.update();\n                            }\n\n                            this._recalc = recalc;\n                        } else {\n                            this.element._disableWithinBoundsMargin();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                // Set viewport necessary for children scissor calculation.\n                if (this._viewport) {\n                    this._viewport[2] = bboxW;\n                    this._viewport[3] = bboxH;\n                } else {\n                    this._viewport = [0, 0, bboxW, bboxH];\n                }\n            }\n\n            // Filter out bits that should not be copied to the children (currently all are).\n            this._pRecalc = (this._recalc & 135);\n\n            // Clear flags so that future updates are properly detected.\n            this._recalc = 0;\n            this._hasUpdates = false;\n\n            if (this._outOfBounds < 2) {\n                if (this._useRenderToTexture) {\n                    if (this._worldContext.isIdentity()) {\n                        // Optimization.\n                        // The world context is already identity: use the world context as render context to prevents the\n                        // ancestors from having to update the render context.\n                        this._renderContext = this._worldContext;\n                    } else {\n                        // Temporarily replace the render coord attribs by the identity matrix.\n                        // This allows the children to calculate the render context.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n                    }\n                }\n\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        this._children[i].update();\n                    }\n                }\n\n                if (this._useRenderToTexture) {\n                    this._renderContext = r;\n                }\n            } else {\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._hasUpdates) {\n                            this._children[i].update();\n                        } else {\n                            // Make sure we don't lose the 'inherited' updates.\n                            this._children[i]._recalc |= this._pRecalc;\n                            this._children[i].updateOutOfBounds();\n                        }\n                    }\n                }\n            }\n\n            if (this._onAfterUpdate) {\n                this._onAfterUpdate(this.element);\n            }\n        } else {\n            if (this.ctx.updateTreeOrder === -1 || this._updateTreeOrder >= this.ctx.updateTreeOrder) {\n                // If new tree order does not interfere with the current (gaps allowed) there's no need to traverse the branch.\n                this.ctx.updateTreeOrder = -1;\n            } else {\n                this.updateTreeOrder();\n            }\n        }\n    }\n\n    _applyRelativeDimFuncs() {\n        if (this._optFlags & 1) {\n            const x = this._funcX(this._parent.w);\n            if (x !== this._x) {\n                this._localPx += (x - this._x);\n                this._x = x;\n            }\n        }\n        if (this._optFlags & 2) {\n            const y = this._funcY(this._parent.h);\n            if (y !== this._y) {\n                this._localPy += (y - this._y);\n                this._y = y;\n            }\n        }\n\n        let changedDims = false;\n        if (this._optFlags & 4) {\n            const w = this._funcW(this._parent.w);\n            if (w !== this._w) {\n                this._w = w;\n                changedDims = true;\n            }\n        }\n        if (this._optFlags & 8) {\n            const h = this._funcH(this._parent.h);\n            if (h !== this._h) {\n                this._h = h;\n                changedDims = true;\n            }\n        }\n\n        if (changedDims) {\n            // Recalc mount, scale position.\n            this._recalcLocalTranslate();\n\n            this.element.onDimensionsChanged(this._w, this._h);\n        }\n    }\n\n    updateOutOfBounds() {\n        // Propagate outOfBounds flag to descendants (necessary because of z-indexing).\n        // Invisible elements are not drawn anyway. When alpha is updated, so will _outOfBounds.\n        if (this._outOfBounds !== 2 && this._renderContext.alpha > 0) {\n\n            // Inherit parent out of boundsness.\n            this._outOfBounds = 2;\n\n            if (this._withinBoundsMargin) {\n                this._withinBoundsMargin = false;\n                this.element._disableWithinBoundsMargin();\n            }\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateOutOfBounds();\n                }\n            }\n        }\n    }\n\n    updateTreeOrder() {\n        if (this._localAlpha && (this._outOfBounds !== 2)) {\n            this._updateTreeOrder = this.ctx.updateTreeOrder++;\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateTreeOrder();\n                }\n            }\n        }\n    }\n\n    _renderSimple() {\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                renderState.setShader(this.activeShader, this._shaderOwner);\n                renderState.setScissor(this._scissor);\n                this.renderState.addQuad(this);\n            }\n\n            // Also add children to the VBO.\n            if (this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n\n                    }\n                }\n            }\n        }\n    }\n\n    _renderAdvanced() {\n        const hasRenderUpdates = this._hasRenderUpdates;\n\n        // We must clear the hasRenderUpdates flag before rendering, because updating result textures in combination\n        // with z-indexing may trigger render updates on a render branch that is 'half done'.\n        // We need to ensure that the full render branch is marked for render updates, not only half (leading to freeze).\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            let mustRenderChildren = true;\n            let renderTextureInfo;\n            let prevRenderTextureInfo;\n            if (this._useRenderToTexture) {\n                if (this._w === 0 || this._h === 0) {\n                    // Ignore this branch and don't draw anything.\n                    return;\n                } else if (!this._texturizer.hasRenderTexture() || (hasRenderUpdates >= 3)) {\n                    // Tell the renderer we're rendering a renderToTexture element in this frame\n                    this.ctx.renderToTextureCount++;\n                    // Switch to default shader for building up the render texture.\n                    renderState.setShader(renderState.defaultShader, this);\n\n                    prevRenderTextureInfo = renderState.renderTextureInfo;\n\n                    renderTextureInfo = {\n                        nativeTexture: null,\n                        offset: 0,  // Set by CoreRenderState.\n                        w: this._w,\n                        h: this._h,\n                        empty: true,\n                        cleared: false,\n                        ignore: false,\n                        cache: false\n                    };\n\n                    if (this._texturizer.hasResultTexture() || (!renderState.isCachingTexturizer && (hasRenderUpdates < 3))) {\n                        /**\n                         * We don't always cache render textures.\n                         *\n                         * The rule is, that caching for a specific render texture is only enabled if:\n                         * - There is a result texture to be updated.\n                         * - There were no render updates -within the contents- since last frame (ElementCore.hasRenderUpdates < 3)\n                         * - AND there are no ancestors that are being cached during this frame (CoreRenderState.isCachingTexturizer)\n                         *   If an ancestor is cached anyway, it's probably not necessary to keep deeper caches. If the top level is to\n                         *   change while a lower one is not, that lower level will be cached instead.\n                         *\n                         * In case of the fast blur element, this prevents having to cache all blur levels and stages, saving a huge amount\n                         * of GPU memory!\n                         *\n                         * Especially when using multiple stacked layers of the same dimensions that are RTT this will have a very\n                         * noticable effect on performance as less render textures need to be allocated.\n                         */\n                        renderTextureInfo.cache = true;\n                        renderState.isCachingTexturizer = true;\n                    }\n\n                    if (!this._texturizer.hasResultTexture()) {\n                        // We can already release the current texture to the pool, as it will be rebuild anyway.\n                        // In case of multiple layers of 'filtering', this may save us from having to create one\n                        //  render-to-texture layer.\n                        // Notice that we don't do this when there is a result texture, as any other element may rely on\n                        //  that result texture being filled.\n                        this._texturizer.releaseRenderTexture();\n                    }\n\n                    renderState.setRenderTextureInfo(renderTextureInfo);\n                    renderState.setScissor(null);\n\n                    if (this._displayedTextureSource) {\n                        let r = this._renderContext;\n\n                        // Use an identity context for drawing the displayed texture to the render texture.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n\n                        // Add displayed texture source in local coordinates.\n                        this.renderState.addQuad(this);\n\n                        this._renderContext = r;\n                    }\n                } else {\n                    mustRenderChildren = false;\n                }\n            } else {\n                if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                    renderState.setShader(this.activeShader, this._shaderOwner);\n                    renderState.setScissor(this._scissor);\n                    this.renderState.addQuad(this);\n                }\n            }\n\n            // Also add children to the VBO.\n            if (mustRenderChildren && this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                let updateResultTexture = false;\n                if (mustRenderChildren) {\n                    // Finished refreshing renderTexture.\n                    renderState.finishedRenderTexture();\n\n                    // If nothing was rendered, we store a flag in the texturizer and prevent unnecessary\n                    //  render-to-texture and filtering.\n                    this._texturizer.empty = renderTextureInfo.empty;\n\n                    if (renderTextureInfo.empty) {\n                        // We ignore empty render textures and do not draw the final quad.\n\n                        // The following cleans up memory and enforces that the result texture is also cleared.\n                        this._texturizer.releaseRenderTexture();\n                    } else if (renderTextureInfo.nativeTexture) {\n                        // If nativeTexture is set, we can reuse that directly instead of creating a new render texture.\n                        this._texturizer.reuseTextureAsRenderTexture(renderTextureInfo.nativeTexture);\n\n                        renderTextureInfo.ignore = true;\n                    } else {\n                        if (this._texturizer.renderTextureReused) {\n                            // Quad operations must be written to a render texture actually owned.\n                            this._texturizer.releaseRenderTexture();\n                        }\n                        // Just create the render texture.\n                        renderTextureInfo.nativeTexture = this._texturizer.getRenderTexture();\n                    }\n\n                    // Restore the parent's render texture.\n                    renderState.setRenderTextureInfo(prevRenderTextureInfo);\n\n                    updateResultTexture = true;\n                }\n\n                if (!this._texturizer.empty) {\n                    let resultTexture = this._texturizer.getResultTexture();\n                    if (updateResultTexture) {\n                        if (resultTexture) {\n                            // Logging the update frame can be handy for userland.\n                            resultTexture.update = renderState.stage.frameCounter;\n                        }\n                        this._texturizer.updateResultTexture();\n                    }\n\n                    if (!this._texturizer.renderOffscreen) {\n                        // Render result texture to the actual render target.\n                        renderState.setShader(this.activeShader, this._shaderOwner);\n                        renderState.setScissor(this._scissor);\n\n                        // If no render texture info is set, the cache can be reused.\n                        const cache = !renderTextureInfo || renderTextureInfo.cache;\n\n                        renderState.setTexturizer(this._texturizer, cache);\n                        this._stashTexCoords();\n                        if (!this._texturizer.colorize) this._stashColors();\n                        this.renderState.addQuad(this, true);\n                        if (!this._texturizer.colorize) this._unstashColors();\n                        this._unstashTexCoords();\n                        renderState.setTexturizer(null);\n                    }\n                }\n            }\n\n            if (renderTextureInfo && renderTextureInfo.cache) {\n                // Allow siblings to cache.\n                renderState.isCachingTexturizer = false;\n            }\n        }\n    }\n\n    get zSort() {\n        return this._zSort;\n    }\n\n    sortZIndexedChildren() {\n        /**\n         * We want to avoid resorting everything. Instead, we do a single pass of the full array:\n         * - filtering out elements with a different zParent than this (were removed)\n         * - filtering out, but also gathering (in a temporary array) the elements that have zIndexResort flag\n         * - then, finally, we merge-sort both the new array and the 'old' one\n         * - element may have been added 'double', so when merge-sorting also check for doubles.\n         * - if the old one is larger (in size) than it should be, splice off the end of the array.\n         */\n\n        const n = this._zIndexedChildren.length;\n        let ptr = 0;\n        const a = this._zIndexedChildren;\n\n        // Notice that items may occur multiple times due to z-index changing.\n        const b = [];\n        for (let i = 0; i < n; i++) {\n            if (a[i]._zParent === this) {\n                if (a[i]._zIndexResort) {\n                    b.push(a[i]);\n                } else {\n                    if (ptr !== i) {\n                        a[ptr] = a[i];\n                    }\n                    ptr++;\n                }\n            }\n        }\n\n        const m = b.length;\n        if (m) {\n            for (let j = 0; j < m; j++) {\n                b[j]._zIndexResort = false;\n            }\n\n            b.sort(ElementCore.sortZIndexedChildren);\n            const n = ptr;\n            if (!n) {\n                ptr = 0;\n                let j = 0;\n                do {\n                    a[ptr++] = b[j++];\n                } while (j < m);\n\n                if (a.length > ptr) {\n                    // Slice old (unnecessary) part off array.\n                    a.splice(ptr);\n                }\n            } else {\n                a.splice(n); // Remove items that were sorted in b array, so that we can sort a\n+               // Beware that the function passed here to Array.sort must be stable\n+               a.sort(ElementCore.sortZIndexedChildren); // Needed because items with same _zIndex may not be ordered by _updateTreeOrder\n                // Merge-sort arrays;\n                ptr = 0;\n                let i = 0;\n                let j = 0;\n                const mergeResult = [];\n                do {\n                    const v = (a[i]._zIndex === b[j]._zIndex ? a[i]._updateTreeOrder - b[j]._updateTreeOrder : a[i]._zIndex - b[j]._zIndex);\n\n                    const add = v > 0 ? b[j++] : a[i++];\n\n                    if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                        mergeResult[ptr++] = add;\n                    }\n\n                    if (i >= n) {\n                        do {\n                            const add = b[j++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while (j < m);\n                        break;\n                    } else if (j >= m) {\n                        do {\n                            const add = a[i++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while (i < n);\n                        break;\n                    }\n                } while (true);\n\n                this._zIndexedChildren = mergeResult;\n            }\n        } else {\n            if (a.length > ptr) {\n                // Slice old (unnecessary) part off array.\n                a.splice(ptr);\n            }\n        }\n\n        this._zSort = false;\n    };\n\n    get localTa() {\n        return this._localTa;\n    };\n\n    get localTb() {\n        return this._localTb;\n    };\n\n    get localTc() {\n        return this._localTc;\n    };\n\n    get localTd() {\n        return this._localTd;\n    };\n\n    get element() {\n        return this._element;\n    }\n\n    get renderUpdates() {\n        return this._hasRenderUpdates;\n    }\n\n    get texturizer() {\n        if (!this._texturizer) {\n            this._texturizer = new ElementTexturizer(this);\n        }\n        return this._texturizer;\n    }\n\n    getCornerPoints() {\n        let w = this._worldContext;\n\n        return [\n            w.px,\n            w.py,\n            w.px + this._w * w.ta,\n            w.py + this._w * w.tc,\n            w.px + this._w * w.ta + this._h * w.tb,\n            w.py + this._w * w.tc + this._h * w.td,\n            w.px + this._h * w.tb,\n            w.py + this._h * w.td\n        ];\n    };\n\n    getRenderTextureCoords(relX, relY) {\n        let r = this._renderContext;\n        return [\n            r.px + r.ta * relX + r.tb * relY,\n            r.py + r.tc * relX + r.td * relY\n        ];\n    }\n\n    getAbsoluteCoords(relX, relY) {\n        let w = this._renderContext;\n        return [\n            w.px + w.ta * relX + w.tb * relY,\n            w.py + w.tc * relX + w.td * relY\n        ];\n    }\n\n    collectAtCoord(x, y, children) {\n        // return when branch is hidden\n        if (this._renderContext.alpha === 0) {\n            return;\n        }\n\n        if (this.inBound(x, y)) {\n            if (this._scissor) {\n                if (this.inScissor()) {\n                    children.push(this);\n                }\n            } else {\n                children.push(this);\n            }\n        }\n\n        if (this._children) {\n            const j = this._children.length;\n            for (let i = 0; i < j; i++) {\n                this._children[i].collectAtCoord(x, y, children);\n            }\n        }\n\n        return children.sort(ElementCore.sortZIndexedChildren);\n    }\n\n    inBound(tx, ty) {\n        const c = this.getCornerPoints();\n        return tx > c[0] && tx < c[2] && ty > c[1] && ty < c[7];\n    }\n\n    inScissor() {\n        const sc = this._scissor;\n        const c = this.getCornerPoints();\n\n        return c[2] >= sc[0] && c[0] <= sc[0] + sc[2] && c[7] >= sc[1] && c[1] <= sc[1] + sc[3];\n    }\n\n    get layout() {\n        this._ensureLayout();\n        return this._layout;\n    }\n\n    get flex() {\n        return this._layout ? this._layout.flex : null;\n    }\n\n    set flex(v) {\n        this.layout.flex = v;\n    }\n\n    get flexItem() {\n        return this._layout ? this._layout.flexItem : null;\n    }\n\n    set flexItem(v) {\n        this.layout.flexItem = v;\n    }\n\n    isFlexItem() {\n        return !!this._layout && this._layout.isFlexItemEnabled();\n    }\n\n    isFlexContainer() {\n        return !!this._layout && this._layout.isFlexEnabled();\n    }\n\n    enableFlexLayout() {\n        this._ensureLayout();\n    }\n\n    _ensureLayout() {\n        if (!this._layout) {\n            this._layout = new FlexTarget(this);\n        }\n    }\n\n    disableFlexLayout() {\n        this._triggerRecalcTranslate();\n    }\n\n    hasFlexLayout() {\n        return (this._layout && this._layout.isEnabled());\n    }\n\n    setLayout(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this._updateDimensions(w, h);\n    }\n\n    triggerLayout() {\n        this._setRecalc(256);\n    }\n\n    _triggerRecalcTranslate() {\n        this._setRecalc(2);\n    }\n\n}\n\nclass ElementCoreContext {\n\n    constructor() {\n        this.alpha = 1;\n\n        this.px = 0;\n        this.py = 0;\n\n        this.ta = 1;\n        this.tb = 0;\n        this.tc = 0;\n        this.td = 1;\n    }\n\n    isIdentity() {\n        return this.alpha === 1 &&\n            this.px === 0 &&\n            this.py === 0 &&\n            this.ta === 1 &&\n            this.tb === 0 &&\n            this.tc === 0 &&\n            this.td === 1;\n    }\n\n    isSquare() {\n        return this.tb === 0 && this.tc === 0;\n    }\n\n}\n\nElementCoreContext.IDENTITY = new ElementCoreContext();\nElementCore.sortZIndexedChildren = function (a, b) {\n    return (a._zIndex === b._zIndex ? a._updateTreeOrder - b._updateTreeOrder : a._zIndex - b._zIndex);\n};\n\nimport ElementTexturizer from \"./ElementTexturizer.mjs\";\nimport Utils from \"../Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This is a partial (and more efficient) implementation of the event emitter.\n * It attempts to maintain a one-to-one mapping between events and listeners, skipping an array lookup.\n * Only if there are multiple listeners, they are combined in an array.\n */\nexport default class EventEmitter {\n\n    constructor() {\n        // This is set (and kept) to true when events are used at all.\n        this._hasEventListeners = false;\n    }\n\n    on(name, listener) {\n        if (!this._hasEventListeners) {\n            this._eventFunction = {}\n            this._eventListeners = {}\n            this._hasEventListeners = true;\n        }\n\n        const current = this._eventFunction[name];\n        if (!current) {\n            this._eventFunction[name] = listener;\n        } else {\n            if (this._eventFunction[name] !== EventEmitter.combiner) {\n                this._eventListeners[name] = [this._eventFunction[name], listener];\n                this._eventFunction[name] = EventEmitter.combiner;\n            } else {\n                this._eventListeners[name].push(listener);\n            }\n        }\n    }\n\n    once(name, listener) {\n        const wrapper = (arg1, arg2, arg3) => {\n            listener(arg1, arg2, arg3);\n            this.off(name, wrapper);\n        }\n        wrapper.__originalFunc = listener;\n        this.on(name, wrapper);\n    }\n\n    has(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    for (const l of listeners) {\n                        if (l === listener || l.__originalFunc == listener) {\n                            return true;\n                        }\n                    }\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    off(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    let index = listeners.indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    index = listeners.map((l) => l.__originalFunc).indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    if (listeners.length === 1) {\n                        this._eventFunction[name] = listeners[0];\n                        this._eventListeners[name] = undefined;\n                    }\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\n                    this._eventFunction[name] = undefined;\n                }\n            }\n        }\n    }\n\n    removeListener(name, listener) {\n        this.off(name, listener);\n    }\n\n    emit(name, arg1, arg2, arg3) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    func(this, name, arg1, arg2, arg3);\n                } else {\n                    func(arg1, arg2, arg3);\n                }\n            }\n        }\n    }\n\n    listenerCount(name) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    return this._eventListeners[name].length;\n                } else {\n                    return 1;\n                }\n            }\n        }\n        return 0;\n    }\n\n    removeAllListeners(name) {\n        if (this._hasEventListeners) {\n            delete this._eventFunction[name];\n            delete this._eventListeners[name];\n        }\n    }\n\n}\n\nEventEmitter.combiner = function(object, name, arg1, arg2, arg3) {\n    const listeners = object._eventListeners[name];\n    if (listeners) {\n        /* Because listener may detach itself while being invoked and therefore invalidate the iterator,\n           we need to create a copy to loop over it */\n        for (const listener of [...listeners]) {\n            listener(arg1, arg2, arg3);\n        }\n    }\n}\n\nEventEmitter.addAsMixin = function(cls) {\n    cls.prototype.on = EventEmitter.prototype.on;\n    cls.prototype.once = EventEmitter.prototype.once;\n    cls.prototype.has = EventEmitter.prototype.has;\n    cls.prototype.off = EventEmitter.prototype.off;\n    cls.prototype.removeListener = EventEmitter.prototype.removeListener;\n    cls.prototype.emit = EventEmitter.prototype.emit;\n    cls.prototype.listenerCount = EventEmitter.prototype.listenerCount;\n    cls.prototype.removeAllListeners = EventEmitter.prototype.removeAllListeners;\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"./Utils.mjs\";\nimport Base from \"./Base.mjs\";\n\nexport default class Shader {\n\n    constructor(coreContext) {\n        this._initialized = false;\n\n        this.ctx = coreContext;\n\n        /**\n         * The (enabled) elements that use this shader.\n         * @type {Set<ElementCore>}\n         */\n        this._elements = new Set();\n    }\n\n    static create(stage, v) {\n        let shader;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                shader = stage.renderer.createShader(stage.ctx, v);\n            } else {\n                shader = this.shader;\n            }\n\n            if (shader) {\n                Base.patchObject(shader, v);\n            }\n        } else if (v === null) {\n            shader = stage.ctx.renderState.defaultShader;\n        } else if (v === undefined) {\n            shader = null;\n        } else {\n            if (v.isShader) {\n                if (!stage.renderer.isValidShaderType(v.constructor)) {\n                    console.error(\"[Lightning] Invalid shader type\");\n                    v = null;\n                }\n                shader = v;\n            } else {\n                console.error(\"[Lightning] Please specify a shader type.\");\n                return;\n            }\n        }\n\n        return shader;\n    }\n\n    static getWebGL() {\n        return undefined;\n    }\n\n    static getC2d() {\n        return undefined;\n    }\n\n    addElement(elementCore) {\n        this._elements.add(elementCore);\n    }\n\n    removeElement(elementCore) {\n        this._elements.delete(elementCore);\n        if (!this._elements) {\n            this.cleanup();\n        }\n    }\n\n    redraw() {\n        this._elements.forEach(elementCore => {\n            elementCore.setHasRenderUpdates(2);\n        });\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    useDefault() {\n        // Should return true if this shader is configured (using it's properties) to not have any effect.\n        // This may allow the render engine to avoid unnecessary shader program switches or even texture copies.\n        return false;\n    }\n\n    addEmpty() {\n        // Draws this shader even if there are no quads to be added.\n        // This is handy for custom shaders.\n        return false;\n    }\n\n    cleanup() {\n        // Called when no more enabled elements have this shader.\n    }\n\n    get isShader() {\n        return true;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Texture {\n\n    /**\n     * @param {Stage} stage\n     */\n    constructor(stage) {\n        this.stage = stage;\n\n        this.manager = this.stage.textureManager;\n\n        this.id = Texture.id++;\n\n        /**\n         * All enabled elements that use this texture object (either as texture or displayedTexture).\n         * @type {Set<Element>}\n         */\n        this.elements = new Set();\n\n        /**\n         * The number of enabled elements that are active.\n         * @type {number}\n         */\n        this._activeCount = 0;\n\n        /**\n         * The associated texture source.\n         * Should not be changed.\n         * @type {TextureSource}\n         */\n        this._source = null;\n\n        /**\n         * A resize mode can be set to cover or contain a certain area.\n         * It will reset the texture clipping settings.\n         * When manual texture clipping is performed, the resizeMode is reset.\n         * @type {{type: string, width: number, height: number}}\n         * @private\n         */\n        this._resizeMode = null;\n\n        /**\n         * The texture clipping x-offset.\n         * @type {number}\n         */\n        this._x = 0;\n\n        /**\n         * The texture clipping y-offset.\n         * @type {number}\n         */\n        this._y = 0;\n\n        /**\n         * The texture clipping width. If 0 then full width.\n         * @type {number}\n         */\n        this._w = 0;\n\n        /**\n         * The texture clipping height. If 0 then full height.\n         * @type {number}\n         */\n        this._h = 0;\n\n        /**\n         * Render precision (0.5 = fuzzy, 1 = normal, 2 = sharp even when scaled twice, etc.).\n         * @type {number}\n         * @private\n         */\n        this._precision = 1;\n\n        /**\n         * The (maximum) expected texture source width. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mw = 0;\n\n        /**\n         * The (maximum) expected texture source height. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mh = 0;\n\n        /**\n         * Indicates if Texture.prototype.texture uses clipping.\n         * @type {boolean}\n         */\n        this.clipping = false;\n\n        /**\n         * Indicates whether this texture must update (when it becomes used again).\n         * @type {boolean}\n         * @private\n         */\n        this._mustUpdate = true;\n\n    }\n\n    get source() {\n        if (this._mustUpdate || this.stage.hasUpdateSourceTexture(this)) {\n            this._performUpdateSource(true);\n            this.stage.removeUpdateSourceTexture(this);\n        }\n        return this._source;\n    }\n\n    addElement(v) {\n        if (!this.elements.has(v)) {\n            this.elements.add(v);\n\n            if (this.elements.size === 1) {\n                if (this._source) {\n                    this._source.addTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.incActiveCount();\n            }\n        }\n    }\n\n    removeElement(v) {\n        if (this.elements.delete(v)) {\n            if (this.elements.size === 0) {\n                if (this._source) {\n                    this._source.removeTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.decActiveCount();\n            }\n        }\n    }\n\n    incActiveCount() {\n        // Ensure that texture source's activeCount has transferred ownership.\n        const source = this.source;\n\n        if (source) {\n            this._checkForNewerReusableTextureSource();\n        }\n\n        this._activeCount++;\n        if (this._activeCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveCount() {\n        const source = this.source; // Force updating the source.\n        this._activeCount--;\n        if (!this._activeCount) {\n            this.becomesUnused();\n        }\n    }\n\n    becomesUsed() {\n        if (this.source) {\n            this.source.incActiveTextureCount();\n        }\n    }\n\n    onLoad() {\n        if (this._resizeMode) {\n            this._applyResizeMode();\n        }\n\n        this.elements.forEach(element => {\n            if (element.active) {\n                element.onTextureSourceLoaded();\n            }\n        });\n    }\n\n    _checkForNewerReusableTextureSource() {\n        // When this source became unused and cleaned up, it may have disappeared from the reusable texture map.\n        // In the meantime another texture may have been generated loaded with the same lookup id.\n        // If this is the case, use that one instead to make sure only one active texture source per lookup id exists.\n        const source = this.source;\n        if (!source.isLoaded()) {\n            const reusable = this._getReusableTextureSource();\n            if (reusable && reusable.isLoaded() && (reusable !== source)) {\n                this._replaceTextureSource(reusable);\n            }\n        } else {\n            if (this._resizeMode) {\n                this._applyResizeMode();\n            }\n        }\n    }\n\n    becomesUnused() {\n        if (this.source) {\n            this.source.decActiveTextureCount();\n        }\n    }\n\n    isUsed() {\n        return this._activeCount > 0;\n    }\n\n    /**\n     * Returns the lookup id for the current texture settings, to be able to reuse it.\n     * @returns {string|null}\n     */\n    _getLookupId() {\n        // Default: do not reuse texture.\n        return null;\n    }\n\n    /**\n     * Generates a loader function that is able to generate the texture for the current settings of this texture.\n     * It should return a function that receives a single callback argument.\n     * That callback should be called with the following arguments:\n     *   - err\n     *   - options: object\n     *     - source: ArrayBuffer|WebGlTexture|ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap\n     *     - w: Number\n     *     - h: Number\n     *     - permanent: Boolean\n     *     - hasAlpha: boolean\n     *     - permultiplyAlpha: boolean\n     *     - flipBlueRed: boolean\n     *     - renderInfo: object\n     * The loader itself may return a Function that is called when loading of the texture is cancelled. This can be used\n     * to stop fetching an image when it is no longer in element, for example.\n     */\n    _getSourceLoader() {\n        throw new Error(\"Texture.generate must be implemented.\");\n    }\n\n    get isValid() {\n        return this._getIsValid();\n    }\n\n    /**\n     * If texture is not 'valid', no source can be created for it.\n     * @returns {boolean}\n     */\n    _getIsValid() {\n        return true;\n    }\n\n    /**\n     * This must be called when the texture source must be re-generated.\n     */\n    _changed() {\n        // If no element is actively using this texture, ignore it altogether.\n        if (this.isUsed()) {\n            this._updateSource();\n        } else {\n            this._mustUpdate = true;\n        }\n    }\n\n    _updateSource() {\n        // We delay all updateSource calls to the next drawFrame, so that we can bundle them.\n        // Otherwise we may reload a texture more often than necessary, when, for example, patching multiple text\n        // properties.\n        this.stage.addUpdateSourceTexture(this);\n    }\n\n    _performUpdateSource(force = false) {\n        // If, in the meantime, the texture was no longer used, just remember that it must update until it becomes used\n        // again.\n        if (force || this.isUsed()) {\n            this._mustUpdate = false;\n            let source = this._getTextureSource();\n            this._replaceTextureSource(source);\n        }\n    }\n\n    _getTextureSource() {\n        let source = null;\n        if (this._getIsValid()) {\n            const lookupId = this._getLookupId();\n            source = this._getReusableTextureSource(lookupId);\n            if (!source) {\n                source = this.manager.getTextureSource(this._getSourceLoader(), lookupId);\n            }\n        }\n        return source;\n    }\n\n    _getReusableTextureSource(lookupId = this._getLookupId()) {\n        if (this._getIsValid()) {\n            if (lookupId) {\n                return this.manager.getReusableTextureSource(lookupId);\n            }\n        }\n        return null;\n    }\n\n    _replaceTextureSource(newSource = null) {\n        let oldSource = this._source;\n\n        this._source = newSource;\n\n        if (this.elements.size) {\n            if (oldSource) {\n                if (this._activeCount) {\n                    oldSource.decActiveTextureCount();\n                }\n\n                oldSource.removeTexture(this);\n\n                // free up unused TextTextures immediately as they are not reused anyway\n                if(this['text'] && !oldSource.isUsed()) {\n                    this.manager.freeTextureSource(oldSource);\n                }\n            }\n\n            if (newSource) {\n                // Must happen before setDisplayedTexture to ensure sprite map texcoords are used.\n                newSource.addTexture(this);\n                if (this._activeCount) {\n                    newSource.incActiveTextureCount();\n                }\n            }\n        }\n\n        if (this.isUsed()) {\n            if (newSource) {\n                if (newSource.isLoaded()) {\n\n                    // Apply resizeMode\n                    if (this._resizeMode) {\n                        this._applyResizeMode();\n                    }\n\n                    this.elements.forEach(element => {\n                        if (element.active) {\n                            element._setDisplayedTexture(this);\n                        }\n                    });\n                } else {\n                    const loadError = newSource.loadError;\n                    if (loadError) {\n                        this.elements.forEach(element => {\n                            if (element.active) {\n                                element.onTextureSourceLoadError(loadError);\n                            }\n                        });\n                    }\n                }\n            } else {\n                this.elements.forEach(element => {\n                    if (element.active) {\n                        element._setDisplayedTexture(null);\n                    }\n                });\n            }\n        }\n    }\n\n    load() {\n        // Make sure that source is up to date.\n        if (this.source) {\n            if (!this.isLoaded()) {\n                this.source.load(true);\n            }\n        }\n    }\n\n    isLoaded() {\n        return this._source && this._source.isLoaded();\n    }\n\n    get loadError() {\n        return this._source && this._source.loadError;\n    }\n\n    free() {\n        if (this._source) {\n            this._source.free();\n        }\n    }\n\n    set resizeMode({type = \"cover\", w = 0, h = 0, clipX = 0.5, clipY = 0.5}) {\n        this._resizeMode = {type, w, h, clipX, clipY};\n        if (this.isLoaded()) {\n            this._applyResizeMode();\n        }\n    }\n\n    get resizeMode() {\n        return this._resizeMode;\n    }\n\n    _clearResizeMode() {\n        this._resizeMode = null;\n    }\n\n    _applyResizeMode() {\n        if (this._resizeMode.type === \"cover\") {\n            this._applyResizeCover();\n        } else if (this._resizeMode.type === \"contain\") {\n            this._applyResizeContain();\n        }\n        this._updatePrecision();\n        this._updateClipping();\n    }\n\n    _applyResizeCover() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = Math.max(scaleX, scaleY);\n        if (!scale) return;\n        this._precision = 1/scale;\n        if (scaleX && scaleX < scale) {\n            const desiredSize = this._precision * this._resizeMode.w;\n            const choppedOffPixels = this._source.w - desiredSize;\n            this._x = choppedOffPixels * this._resizeMode.clipX;\n            this._w = this._source.w - choppedOffPixels;\n        }\n        if (scaleY && scaleY < scale) {\n            const desiredSize = this._precision * this._resizeMode.h;\n            const choppedOffPixels = this._source.h - desiredSize;\n            this._y = choppedOffPixels * this._resizeMode.clipY;\n            this._h = this._source.h - choppedOffPixels;\n        }\n    }\n\n    _applyResizeContain() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = scaleX;\n        if (!scale || scaleY < scale) {\n            scale = scaleY;\n        }\n        if (!scale) return;\n        this._precision = 1/scale;\n    }\n\n    enableClipping(x, y, w, h) {\n        this._clearResizeMode();\n\n        x *= this._precision;\n        y *= this._precision;\n        w *= this._precision;\n        h *= this._precision;\n        if (this._x !== x || this._y !== y || this._w !== w || this._h !== h) {\n            this._x = x;\n            this._y = y;\n            this._w = w;\n            this._h = h;\n\n            this._updateClipping(true);\n        }\n    }\n\n    disableClipping() {\n        this._clearResizeMode();\n\n        if (this._x || this._y || this._w || this._h) {\n            this._x = 0;\n            this._y = 0;\n            this._w = 0;\n            this._h = 0;\n\n            this._updateClipping();\n        }\n    }\n\n    _updateClipping() {\n        this.clipping = !!(this._x || this._y || this._w || this._h);\n\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onDisplayedTextureClippingChanged();\n            }\n        });\n    }\n\n    _updatePrecision() {\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onPrecisionChanged();\n            }\n        });\n    }\n\n    getNonDefaults() {\n        let nonDefaults = {};\n        nonDefaults['type'] = this.constructor.name;\n        if (this.x !== 0) nonDefaults['x'] = this.x;\n        if (this.y !== 0) nonDefaults['y'] = this.y;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.precision !== 1) nonDefaults['precision'] = this.precision;\n        return nonDefaults;\n    }\n\n    get px() {\n        return this._x;\n    }\n\n    get py() {\n        return this._y;\n    }\n\n    get pw() {\n        return this._w;\n    }\n\n    get ph() {\n        return this._h;\n    }\n\n    get x() {\n        return this._x / this._precision;\n    }\n    set x(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._x !== v) {\n            this._x = v;\n            this._updateClipping();\n        }\n    }\n\n    get y() {\n        return this._y / this._precision;\n    }\n    set y(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._y !== v) {\n            this._y = v;\n            this._updateClipping();\n        }\n    }\n\n    get w() {\n        return this._w / this._precision;\n    }\n\n    set w(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._w !== v) {\n            this._w = v;\n            this._updateClipping();\n        }\n    }\n\n    get h() {\n        return this._h / this._precision;\n    }\n\n    set h(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._h !== v) {\n            this._h = v;\n            this._updateClipping();\n        }\n    }\n\n    get precision() {\n        return this._precision;\n    }\n\n    set precision(v) {\n        this._clearResizeMode();\n        if (this._precision !== v) {\n            this._precision = v;\n            this._updatePrecision();\n        }\n    }\n\n    isAutosizeTexture() {\n        return true;\n    }\n\n    getRenderWidth() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        // If dimensions are unknown (texture not yet loaded), use maximum width as a fallback as render width to allow proper bounds checking.\n        return (this._w || (this._source ? this._source.getRenderWidth() - this._x : 0)) / this._precision;\n    }\n\n    getRenderHeight() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        return (this._h || (this._source ? this._source.getRenderHeight() - this._y : 0)) / this._precision;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nTexture.prototype.isTexture = true;\n\nTexture.id = 0;\n\nimport Base from \"./Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class ImageTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._src = undefined;\n        this._hasAlpha = false;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set src(v) {\n        if (this._src !== v) {\n            this._src = v;\n            this._changed();\n        }\n    }\n\n    get hasAlpha() {\n        return this._hasAlpha;\n    }\n\n    set hasAlpha(v) {\n        if (this._hasAlpha !== v) {\n            this._hasAlpha = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this._src;\n    }\n\n    _getLookupId() {\n        return this._src;\n    }\n\n    _getSourceLoader() {\n        let src = this._src;\n        let hasAlpha = this._hasAlpha;\n        if (this.stage.getOption('srcBasePath')) {\n            var fc = src.charCodeAt(0);\n            if ((src.indexOf(\"//\") === -1) && ((fc >= 65 && fc <= 90) || (fc >= 97 && fc <= 122) || fc == 46)) {\n                // Alphabetical or dot: prepend base path.\n                src = this.stage.getOption('srcBasePath') + src;\n            }\n        }\n\n        return (cb) => {\n            return this.stage.platform.loadSrcTexture({src: src, hasAlpha: hasAlpha}, cb);\n        }\n    }\n\n    getNonDefaults() {\n        const obj = super.getNonDefaults();\n        if (this._src) {\n            obj.src = this._src;\n        }\n        return obj;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns CSS font setting string for use in canvas context.\n *\n * @param fontFace\n * @param fontStyle\n * @param fontSize\n * @param precision\n * @param defaultFontFace\n * @returns\n */\nexport function getFontSetting(\n    fontFace: string | string[],\n    fontStyle: string,\n    fontSize: number,\n    precision: number,\n    defaultFontFace: string\n): string {\n    let ff = fontFace;\n\n    if (!Array.isArray(ff)) {\n        ff = [ff];\n    }\n\n    let ffs = [];\n    for (let i = 0, n = ff.length; i < n; i++) {\n        let curFf = ff[i];\n        // Replace the default font face `null` with the actual default font face set\n        // on the stage.\n        if (curFf == null) {\n            curFf = defaultFontFace;\n        }\n        if (curFf.indexOf(' ') < 0) {\n            ffs.push(curFf);\n        } else {\n            ffs.push(`\"${curFf}\"`);\n        }\n    }\n\n    return `${fontStyle} ${fontSize * precision}px ${ffs.join(\",\")}`\n}\n\n/**\n * Returns true if the given character is a zero-width space.\n *\n * @param space\n */\nexport function isZeroWidthSpace(space: string): boolean {\n    return space === '' || space === '\\u200B';\n}\n\n/**\n * Returns true if the given character is a zero-width space or a regular space.\n *\n * @param space\n */\nexport function isSpace(space: string): boolean {\n    return isZeroWidthSpace(space) || space === ' ';\n}\n\n/**\n * Converts a string into an array of tokens and the words between them.\n *\n * @param tokenRegex\n * @param text\n */\nexport function tokenizeString(tokenRegex: RegExp, text: string): string[] {\n    const delimeters = text.match(tokenRegex) || [];\n    const words = text.split(tokenRegex) || [];\n\n    let final: string[] = [];\n    for (let i = 0; i < words.length; i++) {\n        final.push(words[i]!, delimeters[i]!)\n    }\n    final.pop()\n    return final.filter((word) => word != '');\n}\n\n/**\n * Measure the width of a string accounting for letter spacing.\n *\n * @param context\n * @param word\n * @param space\n */\nexport function measureText(context: CanvasRenderingContext2D, word: string, space: number = 0): number {\n    if (!space) {\n        return context.measureText(word).width;\n    }\n    return word.split('').reduce((acc, char) => {\n        // Zero-width spaces should not include letter spacing.\n        // And since we know the width of a zero-width space is 0, we can skip\n        // measuring it.\n        if (isZeroWidthSpace(char)) {\n            return acc;\n        }\n        return acc + context.measureText(char).width + space;\n    }, 0);\n}\n\nexport interface WrapTextResult {\n    l: string[];\n    n: number[];\n}\n\n/**\n * Applies newlines to a string to have it optimally fit into the horizontal\n * bounds set by the Text object's wordWrapWidth property.\n *\n * @param context\n * @param text\n * @param wordWrapWidth\n * @param letterSpacing\n * @param indent\n */\nexport function wrapText(\n    context: CanvasRenderingContext2D,\n    text: string,\n    wordWrapWidth: number,\n    letterSpacing: number,\n    indent: number\n): WrapTextResult {\n    // Greedy wrapping algorithm that will wrap words as the line grows longer.\n    // than its horizontal bounds.\n    const spaceRegex = / |\\u200B/g;\n    let lines = text.split(/\\r?\\n/g);\n    let allLines: string[] = [];\n    let realNewlines: number[] = [];\n    for (let i = 0; i < lines.length; i++) {\n        let resultLines: string[] = [];\n        let result = '';\n        let spaceLeft = wordWrapWidth - indent;\n        let words = lines[i]!.split(spaceRegex);\n        let spaces = lines[i]!.match(spaceRegex) || [];\n        for (let j = 0; j < words.length; j++) {\n            const space = spaces[j - 1] || '';\n            const word = words[j]!;\n            const wordWidth = measureText(context, word, letterSpacing);\n            const wordWidthWithSpace = wordWidth + measureText(context, space, letterSpacing);\n            if (j === 0 || wordWidthWithSpace > spaceLeft) {\n                // Skip printing the newline if it's the first word of the line that is.\n                // greater than the word wrap width.\n                if (j > 0) {\n                    resultLines.push(result);\n                    result = '';\n                }\n                result += word;\n                spaceLeft = wordWrapWidth - wordWidth - (j === 0 ? indent : 0);\n            }\n            else {\n                spaceLeft -= wordWidthWithSpace;\n                result += space + word;\n            }\n        }\n\n        resultLines.push(result);\n        result = '';\n\n        allLines = allLines.concat(resultLines);\n\n        if (i < lines.length - 1) {\n            realNewlines.push(allLines.length);\n        }\n    }\n\n    return {l: allLines, n: realNewlines};\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport { getFontSetting, measureText, wrapText } from \"./TextTextureRendererUtils.mjs\";\n\nexport default class TextTextureRenderer {\n\n    constructor(stage, canvas, settings) {\n        this._stage = stage;\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n        this._settings = settings;\n    }\n\n    getPrecision() {\n        return this._settings.precision;\n    };\n\n    setFontProperties() {\n        this._context.font = getFontSetting(\n            this._settings.fontFace,\n            this._settings.fontStyle,\n            this._settings.fontSize,\n            this.getPrecision(),\n            this._stage.getOption('defaultFontFace'),\n        );\n        this._context.textBaseline = this._settings.textBaseline;\n        this._context.direction = this._settings.rtl ? \"rtl\" : \"ltr\";\n    };\n\n    _load() {\n        if (Utils.isWeb && document.fonts) {\n            const fontSetting = getFontSetting(\n                this._settings.fontFace,\n                this._settings.fontStyle,\n                this._settings.fontSize,\n                this.getPrecision(),\n                this._stage.getOption('defaultFontFace')\n            );\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\n                        // Just load the fallback font.\n                        console.warn('[Lightning] Font load error', err, fontSetting);\n                    }).then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('[Lightning] Font not found', fontSetting);\n                        }\n                    });\n                }\n            } catch(e) {\n                console.warn(\"[Lightning] Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw() {\n        // We do not use a promise so that loading is performed syncronous when possible.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n        } else {\n            return loadPromise.then(() => {\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n            });\n        }\n    }\n\n    _calculateRenderInfo() {\n        let renderInfo = {};\n\n        const precision = this.getPrecision();\n\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        let offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\n        let lineHeight = this._settings.lineHeight * precision;\n        const w = this._settings.w * precision;\n        const h = this._settings.h * precision;\n        let wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = (this._settings.letterSpacing || 0) * precision;\n        const textIndent = this._settings.textIndent * precision;\n\n        // Set font properties.\n        this.setFontProperties();\n\n        // Total width.\n        let width = w || this._stage.getOption('w');\n\n        // Inner width.\n        let innerWidth = width - (paddingLeft);\n        if (innerWidth < 10) {\n            width += (10 - innerWidth);\n            innerWidth = 10;\n        }\n\n        if (!wordWrapWidth) {\n            wordWrapWidth = innerWidth\n        }\n\n        // Text overflow\n        if (this._settings.textOverflow && !this._settings.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            this._settings.text = this.wrapWord(this._settings.text, wordWrapWidth - textIndent, suffix)\n        }\n\n        // word wrap\n        // preserve original text\n        let linesInfo;\n        if (this._settings.wordWrap) {\n            linesInfo = this.wrapText(this._settings.text, wordWrapWidth, letterSpacing, textIndent);\n        } else {\n            linesInfo = {l: this._settings.text.split(/(?:\\r\\n|\\r|\\n)/), n: []};\n            let i, n = linesInfo.l.length;\n            for (let i = 0; i < n - 1; i++) {\n                linesInfo.n.push(i);\n            }\n        }\n        let lines = linesInfo.l;\n\n        if (this._settings.maxLines && lines.length > this._settings.maxLines) {\n            let usedLines = lines.slice(0, this._settings.maxLines);\n\n            let otherLines = null;\n            if (this._settings.maxLinesSuffix) {\n                // Wrap again with max lines suffix enabled.\n                let w = this._settings.maxLinesSuffix ? this.measureText(this._settings.maxLinesSuffix) : 0;\n                let al = this.wrapText(usedLines[usedLines.length - 1], wordWrapWidth - w, letterSpacing, textIndent);\n                usedLines[usedLines.length - 1] = al.l[0] + this._settings.maxLinesSuffix;\n                otherLines = [al.l.length > 1 ? al.l[1] : ''];\n            } else {\n                otherLines = [''];\n            }\n\n            // Re-assemble the remaining text.\n            let i, n = lines.length;\n            let j = 0;\n            let m = linesInfo.n.length;\n            for (i = this._settings.maxLines; i < n; i++) {\n                otherLines[j] += (otherLines[j] ? \" \" : \"\") + lines[i];\n                if (i + 1 < m && linesInfo.n[i + 1]) {\n                    j++;\n                }\n            }\n\n            renderInfo.remainingText = otherLines.join(\"\\n\");\n\n            renderInfo.moreTextLines = true;\n\n            lines = usedLines;\n        } else {\n            renderInfo.moreTextLines = false;\n            renderInfo.remainingText = \"\";\n        }\n\n        // calculate text width\n        let maxLineWidth = 0;\n        let lineWidths = [];\n        for (let i = 0; i < lines.length; i++) {\n            let lineWidth = this.measureText(lines[i], letterSpacing) + (i === 0 ? textIndent : 0);\n            lineWidths.push(lineWidth);\n            maxLineWidth = Math.max(maxLineWidth, lineWidth);\n        }\n\n        renderInfo.lineWidths = lineWidths;\n\n        if (!w) {\n            // Auto-set width to max text length.\n            width = maxLineWidth + paddingLeft + paddingRight;\n            innerWidth = maxLineWidth;\n        }\n\n        // calculate text height\n        lineHeight = lineHeight || fontSize;\n\n        let height;\n        if (h) {\n            height = h;\n        } else {\n            const baselineOffset = (this._settings.textBaseline != 'bottom') ? 0.5 * fontSize : 0;\n            height = lineHeight * (lines.length - 1) + baselineOffset + Math.max(lineHeight, fontSize) + offsetY;\n        }\n\n        if (offsetY === null) {\n            offsetY = fontSize;\n        }\n\n        renderInfo.w = width;\n        renderInfo.h = height;\n        renderInfo.lines = lines;\n        renderInfo.precision = precision;\n\n        if (!width) {\n            // To prevent canvas errors.\n            width = 1;\n        }\n\n        if (!height) {\n            // To prevent canvas errors.\n            height = 1;\n        }\n\n        if (cutSx || cutEx) {\n            width = Math.min(width, cutEx - cutSx);\n        }\n\n        if (cutSy || cutEy) {\n            height = Math.min(height, cutEy - cutSy);\n        }\n\n        renderInfo.width = width;\n        renderInfo.innerWidth = innerWidth;\n        renderInfo.height = height;\n        renderInfo.fontSize = fontSize;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutEy = cutEy;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.lineWidths = lineWidths;\n        renderInfo.offsetY = offsetY;\n        renderInfo.paddingLeft = paddingLeft;\n        renderInfo.paddingRight = paddingRight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textIndent = textIndent;\n\n        return renderInfo;\n    }\n\n    _draw() {\n        const renderInfo = this._calculateRenderInfo();\n        const precision = this.getPrecision();\n\n        // Add extra margin to prevent issue with clipped text when scaling.\n        this._canvas.width = Math.ceil(renderInfo.width + this._stage.getOption('textRenderIssueMargin'));\n        this._canvas.height = Math.ceil(renderInfo.height);\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n\n        let linePositionX;\n        let linePositionY;\n\n        let drawLines = [];\n\n        // Draw lines line by line.\n        for (let i = 0, n = renderInfo.lines.length; i < n; i++) {\n            linePositionX = i === 0 ? renderInfo.textIndent : 0;\n\n            // By default, text is aligned to top\n            linePositionY = (i * renderInfo.lineHeight) + renderInfo.offsetY;\n\n            if (this._settings.verticalAlign == 'middle') {\n                linePositionY += (renderInfo.lineHeight - renderInfo.fontSize) / 2;\n            } else if (this._settings.verticalAlign == 'bottom') {\n                linePositionY += renderInfo.lineHeight - renderInfo.fontSize;\n            }\n\n            if (this._settings.textAlign === 'right') {\n                linePositionX += (renderInfo.innerWidth - renderInfo.lineWidths[i]);\n            } else if (this._settings.textAlign === 'center') {\n                linePositionX += ((renderInfo.innerWidth - renderInfo.lineWidths[i]) / 2);\n            }\n            linePositionX += renderInfo.paddingLeft;\n            if (this._settings.rtl) {\n                linePositionX += renderInfo.lineWidths[i];\n            }\n\n            drawLines.push({text: renderInfo.lines[i], x: linePositionX, y: linePositionY, w: renderInfo.lineWidths[i]});\n        }\n\n        // Highlight.\n        if (this._settings.highlight) {\n            let color = this._settings.highlightColor || 0x00000000;\n\n            let hlHeight = (this._settings.highlightHeight * precision || renderInfo.fontSize * 1.5);\n            const offset = this._settings.highlightOffset * precision;\n            const hlPaddingLeft = (this._settings.highlightPaddingLeft !== null ? this._settings.highlightPaddingLeft * precision : renderInfo.paddingLeft);\n            const hlPaddingRight = (this._settings.highlightPaddingRight !== null ? this._settings.highlightPaddingRight * precision : renderInfo.paddingRight);\n\n            this._context.fillStyle = StageUtils.getRgbaString(color);\n            for (let i = 0; i < drawLines.length; i++) {\n                let drawLine = drawLines[i];\n                this._context.fillRect((drawLine.x - hlPaddingLeft), (drawLine.y - renderInfo.offsetY + offset), (drawLine.w + hlPaddingRight + hlPaddingLeft), hlHeight);\n            }\n        }\n\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\n\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n\n        this._context.fillStyle = StageUtils.getRgbaString(this._settings.textColor);\n        for (let i = 0, n = drawLines.length; i < n; i++) {\n            let drawLine = drawLines[i];\n\n            if (renderInfo.letterSpacing === 0) {\n                this._context.fillText(drawLine.text, drawLine.x, drawLine.y);\n            } else {\n                const textSplit = drawLine.text.split('');\n                let x = drawLine.x;\n                for (let i = 0, j = textSplit.length; i < j; i++) {\n                    this._context.fillText(textSplit[i], x, drawLine.y);\n                    x += this.measureText(textSplit[i], renderInfo.letterSpacing);\n                }\n            }\n        }\n\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n\n        this.renderInfo = renderInfo;\n    };\n\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this.measureText(suffix);\n        const wordLen = word.length\n        const wordWidth = this.measureText(word);\n\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -=1;\n                    break;\n                }\n            }\n        }\n\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '');\n    }\n\n    /**\n     * See {@link wrapText}\n     *\n     * @param {string} text\n     * @param {number} wordWrapWidth\n     * @param {number} letterSpacing\n     * @param {number} indent\n     * @returns\n     */\n    wrapText(text, wordWrapWidth, letterSpacing, indent = 0) {\n        return wrapText(this._context, text, wordWrapWidth, letterSpacing, indent);\n    };\n\n    /**\n     * See {@link measureText}\n     *\n     * @param {string} word\n     * @param {number} space\n     * @returns {number}\n     */\n    measureText(word, space = 0) {\n        return measureText(this._context, word, space);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport { getFontSetting, isSpace, measureText, tokenizeString } from \"./TextTextureRendererUtils.mjs\";\n\nexport default class TextTextureRendererAdvanced {\n\n    constructor(stage, canvas, settings) {\n        this._stage = stage;\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n        this._settings = settings;\n    }\n\n    getPrecision() {\n        return this._settings.precision;\n    };\n\n    setFontProperties() {\n        const font = getFontSetting(\n            this._settings.fontFace,\n            this._settings.fontStyle,\n            this._settings.fontSize,\n            this.getPrecision(),\n            this._stage.getOption('defaultFontFace')\n        );\n        this._context.font = font;\n        this._context.textBaseline = this._settings.textBaseline;\n        return font;\n    };\n\n    _load() {\n        if (Utils.isWeb && document.fonts) {\n            const fontSetting = getFontSetting(\n                this._settings.fontFace,\n                this._settings.fontStyle,\n                this._settings.fontSize,\n                this.getPrecision(),\n                this._stage.getOption('defaultFontFace')\n            );\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\n                        // Just load the fallback font.\n                        console.warn('Font load error', err, fontSetting);\n                    }).then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('Font not found', fontSetting);\n                        }\n                    });\n                }\n            } catch(e) {\n                console.warn(\"Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw() {\n        // We do not use a promise so that loading is performed syncronous when possible.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n        } else {\n            return loadPromise.then(() => {\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n            });\n        }\n    }\n\n    _calculateRenderInfo() {\n        let renderInfo = {};\n\n        const precision = this.getPrecision();\n\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        // const offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\n        const lineHeight = this._settings.lineHeight * precision || fontSize;\n        const w = this._settings.w != 0 ? this._settings.w * precision : this._stage.getOption('w');\n        // const h = this._settings.h * precision;\n        const wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = this._settings.letterSpacing || 0;\n\n        // Set font properties.\n        renderInfo.baseFont = this.setFontProperties();\n\n        renderInfo.w = w;\n        renderInfo.width = w;\n        renderInfo.text = this._settings.text;\n        renderInfo.precision = precision;\n        renderInfo.fontSize = fontSize;\n        renderInfo.fontBaselineRatio = this._settings.fontBaselineRatio;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textAlign = this._settings.textAlign;\n        renderInfo.textColor = this._settings.textColor;\n        renderInfo.verticalAlign = this._settings.verticalAlign;\n        renderInfo.highlight = this._settings.highlight;\n        renderInfo.highlightColor = this._settings.highlightColor;\n        renderInfo.highlightHeight = this._settings.highlightHeight;\n        renderInfo.highlightPaddingLeft = this._settings.highlightPaddingLeft;\n        renderInfo.highlightPaddingRight = this._settings.highlightPaddingRight;\n        renderInfo.highlightOffset = this._settings.highlightOffset;\n        renderInfo.paddingLeft = this._settings.paddingLeft;\n        renderInfo.paddingRight = this._settings.paddingRight;\n        renderInfo.maxLines = this._settings.maxLines;\n        renderInfo.maxLinesSuffix = this._settings.maxLinesSuffix;\n        renderInfo.textOverflow = this._settings.textOverflow;\n        renderInfo.wordWrap = this._settings.wordWrap;\n        renderInfo.wordWrapWidth = wordWrapWidth;\n        renderInfo.shadow = this._settings.shadow;\n        renderInfo.shadowColor = this._settings.shadowColor;\n        renderInfo.shadowOffsetX = this._settings.shadowOffsetX;\n        renderInfo.shadowOffsetY = this._settings.shadowOffsetY;\n        renderInfo.shadowBlur = this._settings.shadowBlur;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEy = cutEy;\n        renderInfo.textIndent = this._settings.textIndent * precision;\n        renderInfo.wordBreak = this._settings.wordBreak;\n\n        let text = renderInfo.text;\n        let wrapWidth = renderInfo.wordWrap ? (renderInfo.wordWrapWidth || renderInfo.width) : renderInfo.width;\n\n        // Text overflow\n        if (renderInfo.textOverflow && !renderInfo.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            text = this.wrapWord(text, wordWrapWidth || renderInfo.w, suffix);\n        }\n\n        text = this.tokenize(text);\n        text = this.parse(text);\n        text = this.measure(text, letterSpacing, renderInfo.baseFont);\n\n        if (renderInfo.textIndent) {\n            text = this.indent(text, renderInfo.textIndent);\n        }\n\n        if (renderInfo.wordBreak) {\n            text = text.reduce((acc, t) => acc.concat(this.wordBreak(t, wrapWidth, renderInfo.baseFont)), [])\n            this.resetFontStyle()\n        }\n\n        // Calculate detailed drawing information\n        let x = paddingLeft;\n        let lineNo = 0;\n\n        for (const t of text) {\n            // Wrap text\n            if (renderInfo.wordWrap && x + t.width > wrapWidth || t.text == '\\n') {\n                x = paddingLeft;\n                lineNo += 1;\n            }\n            t.lineNo = lineNo;\n\n            if (t.text == '\\n') {\n                continue;\n            }\n\n            t.x = x;\n            x += t.width;\n        }\n        renderInfo.lineNum = lineNo + 1;\n\n        if (this._settings.h) {\n            renderInfo.h = this._settings.h;\n        } else if (renderInfo.maxLines && renderInfo.maxLines < renderInfo.lineNum) {\n            renderInfo.h = renderInfo.maxLines * renderInfo.lineHeight + fontSize / 2;\n        } else {\n            renderInfo.h = renderInfo.lineNum * renderInfo.lineHeight + fontSize / 2;\n        }\n\n        // This calculates the baseline offset in pixels from the font size.\n        // To retrieve this ratio, you would do this calculation:\n        //     (FontUnitsPerEm − hhea.Ascender − hhea.Descender) / (2 × FontUnitsPerEm)\n        //\n        // This give you the ratio for the baseline, which is then used to figure out\n        // where the baseline is relative to the bottom of the text bounding box.\n        const baselineOffsetInPx = renderInfo.fontBaselineRatio * renderInfo.fontSize;\n\n        // Vertical align\n        let vaOffset = 0;\n        if (renderInfo.verticalAlign == 'top' && this._context.textBaseline == 'alphabetic') {\n            vaOffset = -baselineOffsetInPx;\n        } else if (renderInfo.verticalAlign == 'middle') {\n            vaOffset = (renderInfo.lineHeight - renderInfo.fontSize - baselineOffsetInPx) / 2;\n        } else if (this._settings.verticalAlign == 'bottom') {\n            vaOffset = renderInfo.lineHeight - renderInfo.fontSize;\n        }\n\n        // Calculate lines information\n        renderInfo.lines = []\n        for (let i = 0; i < renderInfo.lineNum; i++) {\n            renderInfo.lines[i] = {\n                width: 0,\n                x: 0,\n                y: renderInfo.lineHeight * i + vaOffset,\n                text: [],\n            }\n        }\n\n        for (let t of text) {\n            renderInfo.lines[t.lineNo].text.push(t);\n        }\n\n        // Filter out white spaces at beginning and end of each line\n        for (const l of renderInfo.lines) {\n            if (l.text.length == 0) {\n                continue;\n            }\n\n            const firstWord = l.text[0].text;\n            const lastWord = l.text[l.text.length - 1].text;\n\n            if (firstWord == '\\n') {\n                l.text.shift();\n            }\n            if (isSpace(lastWord) || lastWord == '\\n') {\n                l.text.pop();\n            }\n        }\n\n\n        // Calculate line width\n        for (let l of renderInfo.lines) {\n            l.width = l.text.reduce((acc, t) => acc + t.width, 0);\n        }\n\n        renderInfo.width = this._settings.w != 0 ? this._settings.w * precision : Math.max(...renderInfo.lines.map((l) => l.width)) + paddingRight;\n        renderInfo.w = renderInfo.width;\n\n        // Apply maxLinesSuffix\n        if (renderInfo.maxLines && renderInfo.lineNum > renderInfo.maxLines && renderInfo.maxLinesSuffix) {\n            const index = renderInfo.maxLines - 1;\n            let lastLineText = text.filter((t) => t.lineNo == index)\n            let suffix = renderInfo.maxLinesSuffix;\n            suffix = this.tokenize(suffix);\n            suffix = this.parse(suffix);\n            suffix = this.measure(suffix, renderInfo.letterSpacing, renderInfo.baseFont);\n            for (const s of suffix) {\n                s.lineNo = index;\n                s.x = 0;\n                lastLineText.push(s)\n            }\n\n            const spl = suffix.length + 1\n            let _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\n            while (_w > renderInfo.width || isSpace(lastLineText[lastLineText.length - spl].text)) {\n                lastLineText.splice(lastLineText.length - spl, 1);\n                _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\n                if (lastLineText.length < spl) {\n                    break;\n                }\n            }\n            this.alignLine(lastLineText, lastLineText[0].x)\n\n            renderInfo.lines[index].text = lastLineText;\n            renderInfo.lines[index].width = _w;\n        }\n\n        // Horizontal alignment offset\n        if (renderInfo.textAlign == 'center') {\n            for (let l of renderInfo.lines) {\n                l.x = (renderInfo.width - l.width - paddingLeft) / 2;\n            }\n        } else if (renderInfo.textAlign == 'right') {\n            for (let l of renderInfo.lines) {\n                l.x = renderInfo.width - l.width - paddingLeft;\n            }\n        }\n\n        return renderInfo;\n    }\n\n    _draw() {\n        const renderInfo = this._calculateRenderInfo();\n        const precision = this.getPrecision();\n        const paddingLeft = renderInfo.paddingLeft * precision;\n\n        // Set canvas dimensions\n        let canvasWidth = renderInfo.w || renderInfo.width;\n        if (renderInfo.cutSx || renderInfo.cutEx) {\n            canvasWidth = Math.min(renderInfo.w, renderInfo.cutEx - renderInfo.cutSx);\n        }\n\n        let canvasHeight = renderInfo.h;\n        if (renderInfo.cutSy || renderInfo.cutEy) {\n            canvasHeight = Math.min(renderInfo.h, renderInfo.cutEy - renderInfo.cutSy);\n        }\n\n        this._canvas.width = Math.ceil(canvasWidth + this._stage.getOption('textRenderIssueMargin'));\n        this._canvas.height = Math.ceil(canvasHeight);\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n\n        // Cut\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n\n        // Highlight\n        if (renderInfo.highlight) {\n            const hlColor = renderInfo.highlightColor || 0x00000000;\n            const hlHeight = renderInfo.highlightHeight ? renderInfo.highlightHeight * precision :  renderInfo.fontSize * 1.5;\n            const hlOffset = renderInfo.highlightOffset ? renderInfo.highlightOffset * precision : 0;\n            const hlPaddingLeft = (renderInfo.highlightPaddingLeft !== null ? renderInfo.highlightPaddingLeft * precision : renderInfo.paddingLeft);\n            const hlPaddingRight = (renderInfo.highlightPaddingRight !== null ? renderInfo.highlightPaddingRight * precision : renderInfo.paddingRight);\n\n            this._context.fillStyle = StageUtils.getRgbaString(hlColor);\n            const lineNum = renderInfo.maxLines ? Math.min(renderInfo.maxLines, renderInfo.lineNum) : renderInfo.lineNum;\n            for (let i = 0; i < lineNum; i++) {\n                const l = renderInfo.lines[i];\n                this._context.fillRect(l.x - hlPaddingLeft + paddingLeft, l.y + hlOffset, l.width + hlPaddingLeft + hlPaddingRight, hlHeight);\n            }\n        }\n\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\n\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n\n        // Draw text\n        const defaultColor = StageUtils.getRgbaString(this._settings.textColor);\n        let currentColor = defaultColor;\n        this._context.fillStyle = defaultColor;\n        for (const line of renderInfo.lines) {\n            for (const t of line.text) {\n                let lx = 0;\n\n                if (t.text == '\\n') {\n                    continue;\n                }\n\n                if (renderInfo.maxLines && t.lineNo >= renderInfo.maxLines) {\n                    continue;\n                }\n\n                if (t.color != currentColor) {\n                    currentColor = t.color;\n                    this._context.fillStyle = currentColor;\n                }\n\n                this._context.font = t.fontStyle;\n\n                // Draw with letter spacing\n                if (t.letters) {\n                    for (let l of t.letters) {\n                        const _x = renderInfo.lines[t.lineNo].x + t.x + lx;\n                        this._context.fillText(l.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\n                        lx += l.width;\n                    }\n                // Standard drawing\n                } else {\n                    const _x = renderInfo.lines[t.lineNo].x + t.x;\n                    this._context.fillText(t.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\n                }\n            }\n        }\n\n        // Reset text shadow\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n\n        // Reset cut translation\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n\n        // Postprocess renderInfo.lines to be compatible with standard version\n        renderInfo.lines = renderInfo.lines.map((l) => l.text.reduce((acc, v) => acc + v.text, ''));\n        if (renderInfo.maxLines) {\n            renderInfo.lines = renderInfo.lines.slice(0, renderInfo.maxLines);\n        }\n\n\n        this.renderInfo = renderInfo;\n\n    };\n\n    /**\n     * See {@link measureText}\n     *\n     * @param {string} word\n     * @param {number} space\n     * @returns {number}\n     */\n    measureText(word, space = 0) {\n        return measureText(this._context, word, space);\n    }\n\n    tokenize(text) {\n        return tokenizeString(/ |\\u200B|\\n|<i>|<\\/i>|<b>|<\\/b>|<color=0[xX][0-9a-fA-F]{8}>|<\\/color>/g, text);\n    }\n\n    parse(tokens) {\n        let italic = 0;\n        let bold = 0;\n        let colorStack = [StageUtils.getRgbaString(this._settings.textColor)];\n        let color = 0;\n\n        const colorRegexp = /<color=(0[xX][0-9a-fA-F]{8})>/;\n\n        return tokens.map((t) => {\n            if (t == '<i>') {\n                italic += 1;\n                t = '';\n            } else if (t == '</i>' && italic > 0) {\n                italic -= 1;\n                t = '';\n            } else if (t == '<b>') {\n                bold += 1;\n                t = '';\n            } else if (t == '</b>' && bold > 0) {\n                bold -= 1;\n                t = '';\n            } else if (t == '</color>') {\n                if (colorStack.length > 1) {\n                    color -= 1;\n                    colorStack.pop();\n                }\n                t = '';\n            } else if (colorRegexp.test(t)) {\n                const matched = colorRegexp.exec(t);\n                colorStack.push(\n                    StageUtils.getRgbaString(parseInt(matched[1]))\n                );\n                color += 1;\n                t = '';\n\n            }\n\n            return {\n                text: t,\n                italic: italic,\n                bold: bold,\n                color: colorStack[color],\n            }\n        })\n        .filter((o) => o.text != '');\n    }\n\n    applyFontStyle(word, baseFont) {\n        let font = baseFont;\n        if (word.bold) {\n            font = 'bold ' + font;\n        }\n        if (word.italic) {\n            font = 'italic ' + font;\n        }\n        this._context.font = font\n        word.fontStyle = font;\n    }\n\n    resetFontStyle(baseFont) {\n        this._context.font = baseFont;\n    }\n\n    measure(parsed, letterSpacing = 0, baseFont) {\n        for (const p of parsed) {\n            this.applyFontStyle(p, baseFont);\n            p.width = this.measureText(p.text, letterSpacing);\n\n            // Letter by letter detail for letter spacing\n            if (letterSpacing > 0) {\n                p.letters = p.text.split('').map((l) => {return {text: l}});\n                for (let l of p.letters) {\n                    l.width = this.measureText(l.text, letterSpacing);\n                }\n            }\n\n        }\n        this.resetFontStyle(baseFont);\n        return parsed;\n    }\n\n    indent(parsed, textIndent) {\n        parsed.splice(0, 0, {text: \"\", width: textIndent});\n        return parsed;\n    }\n\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this.measureText(suffix);\n        const wordLen = word.length\n        const wordWidth = this.measureText(word);\n\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -=1;\n                    break;\n                }\n            }\n        }\n\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '')\n    }\n\n    _getBreakIndex(word, width) {\n        const wordLen = word.length;\n        const wordWidth = this.measureText(word);\n\n        if (wordWidth <= width) {\n            return {breakIndex: word.length, truncWordWidth: wordWidth};\n        }\n\n        let breakIndex = Math.floor((width * wordLen) / wordWidth);\n        let truncWordWidth = this.measureText(word.substring(0, breakIndex))\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > width) {\n            while (breakIndex > 0) {\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                if (truncWordWidth > width) {\n                    breakIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (breakIndex < wordLen) {\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                if (truncWordWidth < width) {\n                    breakIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    breakIndex -=1;\n                    truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                    break;\n                }\n            }\n        }\n        return {breakIndex, truncWordWidth};\n\n    }\n\n    wordBreak(word, width, baseFont) {\n        if (!word.text) {\n            return word\n        }\n        this.applyFontStyle(word, baseFont)\n        const parts = [];\n        let text = word.text;\n        if (!word.letters) {\n            while (true) {\n                const {breakIndex, truncWordWidth} = this._getBreakIndex(text, width);\n                parts.push({...word});\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\n                parts[parts.length - 1].width = truncWordWidth;\n\n                if (breakIndex === text.length) {\n                    break;\n                }\n\n                text = text.slice(breakIndex);\n            }\n        } else {\n            let totalWidth = 0;\n            let letters = [];\n            let breakIndex = 0;\n            for (const l of word.letters) {\n                if (totalWidth + l.width >= width) {\n                    parts.push({...word});\n                    parts[parts.length - 1].text = text.slice(0, breakIndex);\n                    parts[parts.length - 1].width = totalWidth;\n                    parts[parts.length - 1].letters = letters;\n                    text = text.slice(breakIndex);\n                    totalWidth = 0;\n                    letters = [];\n                    breakIndex = 0;\n\n                } else {\n                    breakIndex += 1;\n                    letters.push(l);\n                    totalWidth += l.width;\n                }\n            }\n\n            if (totalWidth > 0) {\n                parts.push({...word});\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\n                parts[parts.length - 1].width = totalWidth;\n                parts[parts.length - 1].letters = letters;\n            }\n        }\n\n        return parts;\n    }\n\n    alignLine(parsed, initialX = 0) {\n        let prevWidth = 0;\n        let prevX = initialX;\n        for (const word of parsed) {\n            if (word.text == '\\n') {\n                continue;\n            }\n            word.x = prevX + prevWidth;\n            prevX = word.x;\n            prevWidth = word.width;\n        }\n\n    }\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class TextTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        // We use the stage precision as the default precision in case of a text texture.\n        this._precision = this.stage.getOption('precision');\n    }\n\n    static renderer(stage, canvas, settings) {\n        if (this.advancedRenderer) {\n            return new TextTextureRendererAdvanced(stage, canvas, settings);\n        } else {\n            return new TextTextureRenderer(stage, canvas, settings);\n        }\n    }\n\n    get text() {\n        return this._text;\n    }\n\n    set text(v) {\n        if (this._text !== v) {\n            this._text = \"\" + v;\n            this._changed();\n        }\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (this._w !== v) {\n            this._w = v;\n            this._changed();\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (this._h !== v) {\n            this._h = v;\n            this._changed();\n        }\n    }\n\n    get fontStyle() {\n        return this._fontStyle;\n    }\n\n    set fontStyle(v) {\n        if (this._fontStyle !== v) {\n            this._fontStyle = v;\n            this._changed();\n        }\n    }\n\n    get fontBaselineRatio() {\n        return this._fontBaselineRatio;\n    }\n    \n    set fontBaselineRatio(v) {\n        if (this._fontBaselineRatio !== v) {\n            this._fontBaselineRatio = v;\n            this._changed();\n        }\n    }\n\n    get fontSize() {\n        return this._fontSize;\n    }\n\n    set fontSize(v) {\n        if (this._fontSize !== v) {\n            this._fontSize = v;\n            this._changed();\n        }\n    }\n\n    get fontFace() {\n        return this._fontFace;\n    }\n\n    set fontFace(v) {\n        if (this._fontFace !== v) {\n            this._fontFace = v;\n            this._changed();\n        }\n    }\n\n    get wordWrap() {\n        return this._wordWrap;\n    }\n\n    set wordWrap(v) {\n        if (this._wordWrap !== v) {\n            this._wordWrap = v;\n            this._changed();\n        }\n    }\n\n    get wordWrapWidth() {\n        return this._wordWrapWidth;\n    }\n\n    set wordWrapWidth(v) {\n        if (this._wordWrapWidth !== v) {\n            this._wordWrapWidth = v;\n            this._changed();\n        }\n    }\n\n    get wordBreak() {\n        return this._wordBreak;\n    }\n\n    set wordBreak(v) {\n        if (this._wordBreak !== v) {\n            this._wordBreak = v;\n            this._changed();\n        }\n    }\n\n    get textOverflow() {\n        return this._textOverflow;\n    }\n\n    set textOverflow(v) {\n        if (v != this._textOverflow) {\n            this._textOverflow = v;\n            this._changed();\n        }\n    }\n\n    get lineHeight() {\n        return this._lineHeight;\n    }\n\n    set lineHeight(v) {\n        if (this._lineHeight !== v) {\n            this._lineHeight = v;\n            this._changed();\n        }\n    }\n\n    get textBaseline() {\n        return this._textBaseline;\n    }\n\n    set textBaseline(v) {\n        if (this._textBaseline !== v) {\n            this._textBaseline = v;\n            this._changed();\n        }\n    }\n\n    get textAlign() {\n        return this._textAlign;\n    }\n\n    set textAlign(v) {\n        if (this._textAlign !== v) {\n            this._textAlign = v;\n            this._changed();\n        }\n    }\n\n    get verticalAlign() {\n        return this._verticalAlign;\n    }\n\n    set verticalAlign(v) {\n        if (this._verticalAlign !== v) {\n            this._verticalAlign = v;\n            this._changed();\n        }\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        if (this._offsetY !== v) {\n            this._offsetY = v;\n            this._changed();\n        }\n    }\n\n    get maxLines() {\n        return this._maxLines;\n    }\n\n    set maxLines(v) {\n        if (this._maxLines !== v) {\n            this._maxLines = v;\n            this._changed();\n        }\n    }\n\n    get maxLinesSuffix() {\n        return this._maxLinesSuffix;\n    }\n\n    set maxLinesSuffix(v) {\n        if (this._maxLinesSuffix !== v) {\n            this._maxLinesSuffix = v;\n            this._changed();\n        }\n    }\n\n    get textColor() {\n        return this._textColor;\n    }\n\n    set textColor(v) {\n        if (this._textColor !== v) {\n            this._textColor = v;\n            this._changed();\n        }\n    }\n\n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingLeft(v) {\n        if (this._paddingLeft !== v) {\n            this._paddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingRight(v) {\n        if (this._paddingRight !== v) {\n            this._paddingRight = v;\n            this._changed();\n        }\n    }\n\n    get shadow() {\n        return this._shadow;\n    }\n\n    set shadow(v) {\n        if (this._shadow !== v) {\n            this._shadow = v;\n            this._changed();\n        }\n    }\n\n    get shadowColor() {\n        return this._shadowColor;\n    }\n\n    set shadowColor(v) {\n        if (this._shadowColor !== v) {\n            this._shadowColor = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetX() {\n        return this._shadowOffsetX;\n    }\n\n    set shadowOffsetX(v) {\n        if (this._shadowOffsetX !== v) {\n            this._shadowOffsetX = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetY() {\n        return this._shadowOffsetY;\n    }\n\n    set shadowOffsetY(v) {\n        if (this._shadowOffsetY !== v) {\n            this._shadowOffsetY = v;\n            this._changed();\n        }\n    }\n\n    get shadowBlur() {\n        return this._shadowBlur;\n    }\n\n    set shadowBlur(v) {\n        if (this._shadowBlur !== v) {\n            this._shadowBlur = v;\n            this._changed();\n        }\n    }\n\n    get highlight() {\n        return this._highlight;\n    }\n\n    set highlight(v) {\n        if (this._highlight !== v) {\n            this._highlight = v;\n            this._changed();\n        }\n    }\n\n    get highlightHeight() {\n        return this._highlightHeight;\n    }\n\n    set highlightHeight(v) {\n        if (this._highlightHeight !== v) {\n            this._highlightHeight = v;\n            this._changed();\n        }\n    }\n\n    get highlightColor() {\n        return this._highlightColor;\n    }\n\n    set highlightColor(v) {\n        if (this._highlightColor !== v) {\n            this._highlightColor = v;\n            this._changed();\n        }\n    }\n\n    get highlightOffset() {\n        return this._highlightOffset;\n    }\n\n    set highlightOffset(v) {\n        if (this._highlightOffset !== v) {\n            this._highlightOffset = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingLeft() {\n        return this._highlightPaddingLeft;\n    }\n\n    set highlightPaddingLeft(v) {\n        if (this._highlightPaddingLeft !== v) {\n            this._highlightPaddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingRight() {\n        return this._highlightPaddingRight;\n    }\n\n    set highlightPaddingRight(v) {\n        if (this._highlightPaddingRight !== v) {\n            this._highlightPaddingRight = v;\n            this._changed();\n        }\n    }\n\n    get cutSx() {\n        return this._cutSx;\n    }\n\n    set cutSx(v) {\n        if (this._cutSx !== v) {\n            this._cutSx = v;\n            this._changed();\n        }\n    }\n\n    get cutEx() {\n        return this._cutEx;\n    }\n\n    set cutEx(v) {\n        if (this._cutEx !== v) {\n            this._cutEx = v;\n            this._changed();\n        }\n    }\n\n    get cutSy() {\n        return this._cutSy;\n    }\n\n    set cutSy(v) {\n        if (this._cutSy !== v) {\n            this._cutSy = v;\n            this._changed();\n        }\n    }\n\n    get cutEy() {\n        return this._cutEy;\n    }\n\n    set cutEy(v) {\n        if (this._cutEy !== v) {\n            this._cutEy = v;\n            this._changed();\n        }\n    }\n\n    get advancedRenderer() {\n        return this._advancedRenderer;\n    }\n\n    set advancedRenderer(v) {\n        if (this._advancedRenderer !== v) {\n            this._advancedRenderer = v;\n            this._changed();\n        }\n    }\n\n    set letterSpacing(v) {\n        if (this._letterSpacing !== v) {\n            this._letterSpacing = v;\n            this._changed();\n        }\n    }\n\n    get letterSpacing() {\n        return this._letterSpacing;\n    }\n\n    set textIndent(v) {\n        if (this._textIndent !== v) {\n            this._textIndent = v;\n            this._changed();\n        }\n    }\n\n    get textIndent() {\n        return this._textIndent;\n    }\n\n    set rtl(v) {\n        if (this._rtl !== v) {\n            this._rtl = v;\n            this._changed();\n        }\n    }\n\n    get rtl() {\n        return this._rtl;\n    }\n\n    get precision() {\n        return super.precision;\n    }\n\n    set precision(v) {\n        // We actually draw differently when the precision changes.\n        if (this.precision !== v) {\n            super.precision = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this.text;\n    }\n\n    _getLookupId() {\n        let parts = [];\n\n        if (this.w !== 0) parts.push(\"w \" + this.w);\n        if (this.h !== 0) parts.push(\"h \" + this.h);\n        if (this.fontStyle !== \"normal\") parts.push(\"fS\" + this.fontStyle);\n        if (this.fontSize !== 40) parts.push(\"fs\" + this.fontSize);\n        if (this.fontBaselineRatio !== 0) parts.push('fb' + this.fontBaselineRatio);\n        if (this.fontFace !== null) parts.push(\"ff\" + (Array.isArray(this.fontFace) ? this.fontFace.join(\",\") : this.fontFace));\n        if (this.wordWrap !== true) parts.push(\"wr\" + (this.wordWrap ? 1 : 0));\n        if (this.wordWrapWidth !== 0) parts.push(\"ww\" + this.wordWrapWidth);\n        if (this.wordBreak !== false) parts.push(\"wb\" + this.wordBreak ? 1 : 0);\n        if (this.textOverflow != \"\") parts.push(\"to\" + this.textOverflow);\n        if (this.lineHeight !== null) parts.push(\"lh\" + this.lineHeight);\n        if (this.textBaseline !== \"alphabetic\") parts.push(\"tb\" + this.textBaseline);\n        if (this.textAlign !== \"left\") parts.push(\"ta\" + this.textAlign);\n        if (this.verticalAlign !== \"top\") parts.push(\"va\" + this.verticalAlign);\n        if (this.offsetY !== null) parts.push(\"oy\" + this.offsetY);\n        if (this.maxLines !== 0) parts.push(\"ml\" + this.maxLines);\n        if (this.maxLinesSuffix !== \"..\") parts.push(\"ms\" + this.maxLinesSuffix);\n        parts.push(\"pc\" + this.precision);\n        if (this.textColor !== 0xffffffff) parts.push(\"co\" + this.textColor.toString(16));\n        if (this.paddingLeft !== 0) parts.push(\"pl\" + this.paddingLeft);\n        if (this.paddingRight !== 0) parts.push(\"pr\" + this.paddingRight);\n        if (this.shadow !== false) parts.push(\"sh\" + (this.shadow ? 1 : 0));\n        if (this.shadowColor !== 0xff000000) parts.push(\"sc\" + this.shadowColor.toString(16));\n        if (this.shadowOffsetX !== 0) parts.push(\"sx\" + this.shadowOffsetX);\n        if (this.shadowOffsetY !== 0) parts.push(\"sy\" + this.shadowOffsetY);\n        if (this.shadowBlur !== 5) parts.push(\"sb\" + this.shadowBlur);\n        if (this.highlight !== false) parts.push(\"hL\" + (this.highlight ? 1 : 0));\n        if (this.highlightHeight !== 0) parts.push(\"hh\" + this.highlightHeight);\n        if (this.highlightColor !== 0xff000000) parts.push(\"hc\" + this.highlightColor.toString(16));\n        if (this.highlightOffset !== null) parts.push(\"ho\" + this.highlightOffset);\n        if (this.highlightPaddingLeft !== null) parts.push(\"hl\" + this.highlightPaddingLeft);\n        if (this.highlightPaddingRight !== null) parts.push(\"hr\" + this.highlightPaddingRight);\n        if (this.letterSpacing !== null) parts.push(\"ls\" + this.letterSpacing);\n        if (this.textIndent !== null) parts.push(\"ti\" + this.textIndent);\n\n        if (this.cutSx) parts.push(\"csx\" + this.cutSx);\n        if (this.cutEx) parts.push(\"cex\" + this.cutEx);\n        if (this.cutSy) parts.push(\"csy\" + this.cutSy);\n        if (this.cutEy) parts.push(\"cey\" + this.cutEy);\n\n        if (this.advancedRenderer) parts.push(\"aR\" + this.advancedRenderer ? 1 : 0);\n\n        let id = \"TX$\" + parts.join(\"|\") + \":\" + this.text;\n        return id;\n    }\n\n    _getSourceLoader() {\n        const args = this.cloneArgs();\n\n        const gl = this.stage.gl;\n\n        return function (cb) {\n            const canvas = this.stage.platform.getDrawingCanvas();\n            const renderer = (args.advancedRenderer)\n              ? new TextTextureRendererAdvanced(this.stage, canvas, args)\n              : new TextTextureRenderer(this.stage, canvas, args);\n            \n            const p = renderer.draw();\n\n            const texParams = {};\n\n            const sharpCfg = this.stage.getOption('fontSharp');\n            let sharpen = false;\n\n            // Prevent text blur when text texture is downscaled\n            if (Utils.isBoolean(sharpCfg)) {\n                sharpen = sharpCfg;\n            } else if (Utils.isObject(sharpCfg)) {\n                const precision = this.stage.getRenderPrecision();\n                sharpen = precision <= sharpCfg.precision && args.fontSize <= sharpCfg.fontSize;\n            }\n\n            if (gl && sharpen) {\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            if (p) {\n                p.then(() => {\n                    /* FIXME: on some platforms (e.g. RPI), throttling text textures cause artifacts */\n                    cb(null, Object.assign({\n                        renderInfo: renderer.renderInfo,\n                        throttle: false,\n                        texParams: texParams,\n                    }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n                }).catch((err) => {\n                    cb(err);\n                });\n            } else {\n                cb(null, Object.assign({\n                    renderInfo: renderer.renderInfo,\n                    throttle: false,\n                    texParams: texParams,\n                }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n            }\n        };\n    }\n\n\n    getNonDefaults() {\n        const nonDefaults = super.getNonDefaults();\n        if (this.text !== \"\") nonDefaults['text'] = this.text;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.fontStyle !== \"normal\") nonDefaults['fontStyle'] = this.fontStyle;\n        if (this.fontSize !== 40) nonDefaults[\"fontSize\"] = this.fontSize;\n        if (this.fontBaselineRatio !== 0) nonDefaults['fontBaselineRatio'] = this.fontBaselineRatio;\n        if (this.fontFace !== null) nonDefaults[\"fontFace\"] = this.fontFace;\n        if (this.wordWrap !== true) nonDefaults[\"wordWrap\"] = this.wordWrap;\n        if (this.wordWrapWidth !== 0) nonDefaults[\"wordWrapWidth\"] = this.wordWrapWidth;\n        if (this.wordBreak !== false) nonDefaults[\"wordBreak\"] = this.wordBreak;\n        if (this.textOverflow != \"\") nonDefaults[\"textOverflow\"] = this.textOverflow;\n        if (this.lineHeight !== null) nonDefaults[\"lineHeight\"] = this.lineHeight;\n        if (this.textBaseline !== \"alphabetic\") nonDefaults[\"textBaseline\"] = this.textBaseline;\n        if (this.textAlign !== \"left\") nonDefaults[\"textAlign\"] = this.textAlign;\n        if (this.verticalAlign !== \"top\") nonDefaults[\"verticalAlign\"] = this.verticalAlign;\n        if (this.offsetY !== null) nonDefaults[\"offsetY\"] = this.offsetY;\n        if (this.maxLines !== 0) nonDefaults[\"maxLines\"] = this.maxLines;\n        if (this.maxLinesSuffix !== \"..\") nonDefaults[\"maxLinesSuffix\"] = this.maxLinesSuffix;\n        if (this.precision !== this.stage.getOption('precision')) nonDefaults[\"precision\"] = this.precision;\n        if (this.textColor !== 0xffffffff) nonDefaults[\"textColor\"] = this.textColor;\n        if (this.paddingLeft !== 0) nonDefaults[\"paddingLeft\"] = this.paddingLeft;\n        if (this.paddingRight !== 0) nonDefaults[\"paddingRight\"] = this.paddingRight;\n        if (this.shadow !== false) nonDefaults[\"shadow\"] = this.shadow;\n        if (this.shadowColor !== 0xff000000) nonDefaults[\"shadowColor\"] = this.shadowColor;\n        if (this.shadowOffsetX !== 0) nonDefaults[\"shadowOffsetX\"] = this.shadowOffsetX;\n        if (this.shadowOffsetY !== 0) nonDefaults[\"shadowOffsetY\"] = this.shadowOffsetY;\n        if (this.shadowBlur !== 5) nonDefaults[\"shadowBlur\"] = this.shadowBlur;\n        if (this.highlight !== false) nonDefaults[\"highlight\"] = this.highlight;\n        if (this.highlightHeight !== 0) nonDefaults[\"highlightHeight\"] = this.highlightHeight;\n        if (this.highlightColor !== 0xff000000) nonDefaults[\"highlightColor\"] = this.highlightColor;\n        if (this.highlightOffset !== 0) nonDefaults[\"highlightOffset\"] = this.highlightOffset;\n        if (this.highlightPaddingLeft !== 0) nonDefaults[\"highlightPaddingLeft\"] = this.highlightPaddingLeft;\n        if (this.highlightPaddingRight !== 0) nonDefaults[\"highlightPaddingRight\"] = this.highlightPaddingRight;\n        if (this.letterSpacing !== 0) nonDefaults[\"letterSpacing\"] = this.letterSpacing;\n        if (this.textIndent !== 0) nonDefaults[\"textIndent\"] = this.textIndent;\n        if (this.rtl !== 0) nonDefaults[\"rtl\"] = this.rtl;\n\n        if (this.cutSx) nonDefaults[\"cutSx\"] = this.cutSx;\n        if (this.cutEx) nonDefaults[\"cutEx\"] = this.cutEx;\n        if (this.cutSy) nonDefaults[\"cutSy\"] = this.cutSy;\n        if (this.cutEy) nonDefaults[\"cutEy\"] = this.cutEy;\n\n        if (this.advancedRenderer) nonDefaults[\"renderer\"] = this.advancedRenderer;\n        return nonDefaults;\n    }\n\n    cloneArgs() {\n        let obj = {};\n        obj.text = this._text;\n        obj.w = this._w;\n        obj.h = this._h;\n        obj.fontStyle = this._fontStyle;\n        obj.fontSize = this._fontSize;\n        obj.fontBaselineRatio = this._fontBaselineRatio;\n        obj.fontFace = this._fontFace;\n        obj.wordWrap = this._wordWrap;\n        obj.wordWrapWidth = this._wordWrapWidth;\n        obj.wordBreak = this._wordBreak;\n        obj.textOverflow = this._textOverflow;\n        obj.lineHeight = this._lineHeight;\n        obj.textBaseline = this._textBaseline;\n        obj.textAlign = this._textAlign;\n        obj.verticalAlign = this._verticalAlign;\n        obj.offsetY = this._offsetY;\n        obj.maxLines = this._maxLines;\n        obj.maxLinesSuffix = this._maxLinesSuffix;\n        obj.precision = this._precision;\n        obj.textColor = this._textColor;\n        obj.paddingLeft = this._paddingLeft;\n        obj.paddingRight = this._paddingRight;\n        obj.shadow = this._shadow;\n        obj.shadowColor = this._shadowColor;\n        obj.shadowOffsetX = this._shadowOffsetX;\n        obj.shadowOffsetY = this._shadowOffsetY;\n        obj.shadowBlur = this._shadowBlur;\n        obj.highlight = this._highlight;\n        obj.highlightHeight = this._highlightHeight;\n        obj.highlightColor = this._highlightColor;\n        obj.highlightOffset = this._highlightOffset;\n        obj.highlightPaddingLeft = this._highlightPaddingLeft;\n        obj.highlightPaddingRight = this._highlightPaddingRight;\n        obj.letterSpacing = this._letterSpacing;\n        obj.textIndent = this._textIndent;\n        obj.rtl = this._rtl;\n        obj.cutSx = this._cutSx;\n        obj.cutEx = this._cutEx;\n        obj.cutSy = this._cutSy;\n        obj.cutEy = this._cutEy;\n        obj.advancedRenderer = this._advancedRenderer;\n        return obj;\n    }\n\n\n}\n\n// Because there are so many properties, we prefer to use the prototype for default values.\n// This causes a decrease in performance, but also a decrease in memory usage.\nlet proto = TextTexture.prototype;\nproto._text = \"\";\nproto._w = 0;\nproto._h = 0;\nproto._fontStyle = \"normal\";\nproto._fontSize = 40;\nproto._fontFace = null;\nproto._wordWrap = true;\nproto._wordWrapWidth = 0;\nproto._wordBreak = false;\nproto._textOverflow = \"\";\nproto._lineHeight = null;\nproto._textBaseline = \"alphabetic\";\nproto._textAlign = \"left\";\nproto._verticalAlign = \"top\";\nproto._offsetY = null;\nproto._maxLines = 0;\nproto._maxLinesSuffix = \"..\";\nproto._textColor = 0xFFFFFFFF;\nproto._paddingLeft = 0;\nproto._paddingRight = 0;\nproto._shadow = false;\nproto._shadowColor = 0xFF000000;\nproto._shadowOffsetX = 0;\nproto._shadowOffsetY = 0;\nproto._shadowBlur = 5;\nproto._highlight = false;\nproto._highlightHeight = 0;\nproto._highlightColor = 0xFF000000;\nproto._highlightOffset = 0;\nproto._highlightPaddingLeft = 0;\nproto._highlightPaddingRight = 0;\nproto._letterSpacing = 0;\nproto._textIndent = 0;\nproto._rtl = 0;\nproto._cutSx = 0;\nproto._cutEx = 0;\nproto._cutSy = 0;\nproto._cutEy = 0;\nproto._advancedRenderer = false;\nproto._fontBaselineRatio = 0;\n\n\nimport TextTextureRenderer from \"./TextTextureRenderer.mjs\";\nimport TextTextureRendererAdvanced from \"./TextTextureRendererAdvanced.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class SourceTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._textureSource = undefined;\n    }\n\n    get textureSource() {\n        return this._textureSource;\n    }\n\n    set textureSource(v) {\n        if (v !== this._textureSource) {\n            if (v.isResultTexture) {\n                // In case of a result texture, automatically inherit the precision.\n                this._precision = this.stage.getRenderPrecision();\n            }\n            this._textureSource = v;\n            this._changed();\n        }\n    }\n\n    _getTextureSource() {\n        return this._textureSource;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\n\nexport default class Transition extends EventEmitter {\n\n    constructor(manager, settings, element, property) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._getter = element.constructor.getGetter(property);\n        this._setter = element.constructor.getSetter(property);\n\n        this._merger = settings.merger;\n\n        if (!this._merger) {\n            this._merger = element.constructor.getMerger(property);\n        }\n\n        this._startValue = this._getter(this._element);\n        this._targetValue = this._startValue;\n\n        this._p = 1;\n        this._delayLeft = 0;\n    }\n\n    start(targetValue) {\n        this._startValue = this._getter(this._element);\n\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            if (targetValue === this._startValue) {\n                this.reset(targetValue, 1);\n            } else {\n                this._targetValue = targetValue;\n                this._p = 0;\n                this._delayLeft = this._settings.delay;\n                this.emit('start');\n                this.add();\n            }\n        }\n    }\n\n    finish() {\n        if (this._p < 1) {\n            // Value setting and will must be invoked (async) upon next transition cycle.\n            this._p = 1;\n        }\n    }\n\n    stop() {\n        // Just stop where the transition is at.\n        this.emit('stop');\n        this.manager.removeActive(this);\n    }\n\n    pause() {\n        this.stop();\n    }\n\n    play() {\n        this.manager.addActive(this);\n    }\n\n    reset(targetValue, p) {\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = p;\n            this.add();\n        }\n    }\n\n    _updateDrawValue() {\n        this._setter(this._element, this.getDrawValue());\n    }\n\n    add() {\n        this.manager.addActive(this);\n    }\n\n    isAttached() {\n        return this._element.attached;\n    }\n\n    isRunning() {\n        return (this._p < 1.0);\n    }\n\n    progress(dt) {\n        if (!this.isAttached()) {\n            // Skip to end of transition so that it is removed.\n            this._p = 1;\n        }\n\n        if (this.p < 1) {\n            if (this.delayLeft > 0) {\n                this._delayLeft -= dt;\n\n                if (this.delayLeft < 0) {\n                    dt = -this.delayLeft;\n                    this._delayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n\n            if (this._settings.duration == 0) {\n                this._p = 1;\n            } else {\n                this._p += dt / this._settings.duration;\n            }\n            if (this._p >= 1) {\n                // Finished!;\n                this._p = 1;\n            }\n        }\n\n        this._updateDrawValue();\n\n        this.invokeListeners();\n    }\n\n    invokeListeners() {\n        this.emit('progress', this.p);\n        if (this.p === 1) {\n            this.emit('finish');\n        }\n    }\n\n    updateTargetValue(targetValue) {\n        let t = this._settings.timingFunctionImpl(this.p);\n        if (t === 1) {\n            this._targetValue = targetValue;\n        } else if (t === 0) {\n            this._startValue = this._targetValue;\n            this._targetValue = targetValue;\n        } else {\n            this._startValue = targetValue - ((targetValue - this._targetValue) / (1 - t));\n            this._targetValue = targetValue;\n        }\n    }\n\n    getDrawValue() {\n        if (this.p >= 1) {\n            return this.targetValue;\n        } else {\n            let v = this._settings._timingFunctionImpl(this.p);\n            return this._merger(this.targetValue, this.startValue, v);\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n    }\n\n    get startValue() {\n        return this._startValue;\n    }\n\n    get targetValue() {\n        return this._targetValue;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n    set settings(v) {\n        this._settings = v;\n    }\n\n}\n\nTransition.prototype.isTransition = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages a list of objects.\n * Objects may be patched. Then, they can be referenced using the 'ref' (string) property.\n */\nexport default class ObjectList {\n\n    constructor() {\n        this._items = [];\n        this._refs = {}\n    }\n\n    get() {\n        return this._items;\n    }\n\n    get first() {\n        return this._items[0];\n    }\n\n    get last() {\n        return this._items.length ? this._items[this._items.length - 1] : undefined;\n    }\n\n    add(item) {\n        this.addAt(item, this._items.length);\n    }\n\n    addAt(item, index) {\n        if (index >= 0 && index <= this._items.length) {\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex === index) {\n                return item;\n            }\n\n            if (Utils.isObjectLiteral(item)) {\n                const o = item;\n                item = this.createItem(o);\n                item.patch(o);\n            }\n\n            if (currentIndex != -1) {\n                this.setAt(item, index);\n            } else {\n                if (item.ref) {\n                    this._refs[item.ref] = item;\n                }\n                this._items.splice(index, 0, item);\n                this.onAdd(item, index);\n            }\n        } else {\n            throw new Error('addAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    replaceByRef(item) {\n        if (item.ref) {\n            const existingItem = this.getByRef(item.ref);\n            if (!existingItem) {\n                throw new Error('replaceByRef: no item found with reference: ' + item.ref);\n            }\n            this.replace(item, existingItem);\n        } else {\n            throw new Error('replaceByRef: no ref specified in item');\n        }\n        this.addAt(item, this._items.length);\n\n    }\n\n    replace(item, prevItem) {\n        const index = this.getIndex(prevItem);\n        if (index === -1) {\n            throw new Error('replace: The previous item does not exist');\n        }\n        this.setAt(item, index);\n    }\n\n    setAt(item, index) {\n        if (index >= 0 && index <= this._items.length) {\n\n            if (Utils.isObjectLiteral(item)) {\n                const o = item;\n                item = this.createItem(o);\n                item.patch(o);\n            }\n\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex != -1) {\n                if (currentIndex !== index) {\n                    const fromIndex = currentIndex;\n                    if (fromIndex !== index) {\n                        this._items.splice(fromIndex, 1);\n                        this._items.splice(index, 0, item);\n                        this.onMove(item, fromIndex, index);\n                    }\n                }\n            } else {\n                if( index < this._items.length){\n\n                    if (this._items[index].ref) {\n                        this._refs[this._items[index].ref] = undefined;\n                    }\n\n                    const prevItem = this._items[index];\n\n                    // Doesn't exist yet: overwrite current.\n                    this._items[index] = item;\n\n                    if (item.ref) {\n                        this._refs[item.ref] = item;\n                    }\n\n                    this.onSet(item, index, prevItem);\n                } else {\n                    throw new Error('setAt: The index ' + index + ' is out of bounds ' + this._items.length);\n                }\n            }\n        } else {\n            throw new Error('setAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    getAt(index) {\n        return this._items[index];\n    }\n\n    getIndex(item) {\n        return this._items.indexOf(item);\n    }\n\n    remove(item) {\n        let index = this._items.indexOf(item);\n\n        if (index !== -1) {\n            this.removeAt(index);\n        }\n    };\n\n    removeAt(index) {\n        if (index >= 0 && index < this._items.length) {\n            const item = this._items[index];\n\n            if (item.ref) {\n                this._refs[item.ref] = undefined;\n            }\n\n            this._items.splice(index, 1);\n\n            this.onRemove(item, index);\n\n            return item;\n        } else {\n            throw new Error(`removeAt: The index ${index} is out of bounds ${this._items.length - 1}`);\n        }\n    };\n\n    clear() {\n        let n = this._items.length;\n        if (n) {\n            let prev = this._items;\n            this._items = [];\n            this._refs = {}\n            this.onSync(prev, [], []);\n        }\n    };\n\n    a(o) {\n        if (Utils.isObjectLiteral(o)) {\n            let c = this.createItem(o);\n            c.patch(o);\n            this.add(c);\n            return c;\n        } else if (Array.isArray(o)) {\n            for (let i = 0, n = o.length; i < n; i++) {\n                this.a(o[i]);\n            }\n            return null;\n        } else if (this.isItem(o)) {\n            this.add(o);\n            return o;\n        }\n    };\n\n    get length() {\n        return this._items.length;\n    }\n\n    _getRefs() {\n        return this._refs;\n    }\n\n    getByRef(ref) {\n        return this._refs[ref];\n    }\n\n    clearRef(ref) {\n        delete this._refs[ref];\n    }\n\n    setRef(ref, child) {\n        this._refs[ref] = child;\n    }\n\n    patch(settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            this._setByObject(settings);\n        } else if (Array.isArray(settings)) {\n            this._setByArray(settings);\n        }\n    }\n\n    _setByObject(settings) {\n        // Overrule settings of known referenced items.\n        let refs = this._getRefs();\n        let crefs = Object.keys(settings);\n        for (let i = 0, n = crefs.length; i < n; i++) {\n            let cref = crefs[i];\n            let s = settings[cref];\n\n            let c = refs[cref];\n            if (!c) {\n                if (this.isItem(s)) {\n                    // Replace previous item;\n                    s.ref = cref;\n                    this.add(s);\n                } else {\n                    // Create new item.\n                    c = this.createItem(s);\n                    c.ref = cref;\n                    c.patch(s);\n                    this.add(c);\n                }\n            } else {\n                if (this.isItem(s)) {\n                    if (c !== s) {\n                        // Replace previous item;\n                        let idx = this.getIndex(c);\n                        s.ref = cref;\n                        this.setAt(s, idx);\n                    }\n                } else {\n                    c.patch(s);\n                }\n            }\n        }\n    }\n\n    _equalsArray(array) {\n        let same = true;\n        if (array.length === this._items.length) {\n            for (let i = 0, n = this._items.length; (i < n) && same; i++) {\n                same = same && (this._items[i] === array[i]);\n            }\n        } else {\n            same = false;\n        }\n        return same;\n    }\n\n    _setByArray(array) {\n        // For performance reasons, first check if the arrays match exactly and bail out if they do.\n        if (this._equalsArray(array)) {\n            return;\n        }\n\n        for (let i = 0, n = this._items.length; i < n; i++) {\n            this._items[i].marker = true;\n        }\n\n        let refs;\n        let newItems = [];\n        for (let i = 0, n = array.length; i < n; i++) {\n            let s = array[i];\n            if (this.isItem(s)) {\n                s.marker = false;\n                newItems.push(s);\n            } else {\n                let cref = s.ref;\n                let c;\n                if (cref) {\n                    if (!refs) refs = this._getRefs();\n                    c = refs[cref];\n                }\n\n                if (!c) {\n                    // Create new item.\n                    c = this.createItem(s);\n                } else {\n                    c.marker = false;\n                }\n\n                if (Utils.isObjectLiteral(s)) {\n                    c.patch(s);\n                }\n\n                newItems.push(c);\n            }\n        }\n\n        this._setItems(newItems);\n    }\n\n    _setItems(newItems) {\n        let prevItems = this._items;\n        this._items = newItems;\n\n        // Remove the items.\n        let removed = prevItems.filter(item => {let m = item.marker; delete item.marker; return m});\n        let added = newItems.filter(item => (prevItems.indexOf(item) === -1));\n\n        if (removed.length || added.length) {\n            // Recalculate refs.\n            this._refs = {}\n            for (let i = 0, n = this._items.length; i < n; i++) {\n                let ref = this._items[i].ref;\n                if (ref) {\n                    this._refs[ref] = this._items[i];\n                }\n            }\n        }\n\n        this.onSync(removed, added, newItems);\n    }\n\n    sort(f) {\n        const items = this._items.slice();\n        items.sort(f);\n        this._setByArray(items);\n    }\n\n    onAdd(item, index) {\n    }\n\n    onRemove(item, index) {\n    }\n\n    onSync(removed, added, order) {\n    }\n\n    onSet(item, index, prevItem) {\n    }\n\n    onMove(item, fromIndex, toIndex) {\n    }\n\n    createItem(object) {\n        throw new Error(\"ObjectList.createItem must create and return a new object\");\n    }\n\n    isItem(object) {\n        return false;\n    }\n\n    forEach(f) {\n        this.get().forEach(f);\n    }\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"./ObjectList.mjs\";\n\nexport default class ElementChildList extends ObjectList {\n\n    constructor(element) {\n        super();\n        this._element = element;\n    }\n\n    _connectParent(item) {\n        const prevParent = item.parent;\n        if (prevParent && prevParent !== this._element) {\n            // Cleanup in previous child list, without\n            const prevChildList = item.parent.childList;\n            const index = prevChildList.getIndex(item);\n\n            if (item.ref) {\n                prevChildList._refs[item.ref] = undefined;\n            }\n            prevChildList._items.splice(index, 1);\n\n            // Also clean up element core.\n            prevParent.core.removeChildAt(index);\n\n        }\n\n        item._setParent(this._element);\n\n        // We are expecting the caller to sync it to the core.\n    }\n\n    onAdd(item, index) {\n        this._connectParent(item);\n        this._element.core.addChildAt(index, item.core);\n    }\n\n    onRemove(item, index) {\n        item._setParent(null);\n        this._element.core.removeChildAt(index);\n    }\n\n    onSync(removed, added, order) {\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i]._setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            this._connectParent(added[i]);\n        }\n        let gc = i => i.core;\n        this._element.core.syncChildren(removed.map(gc), added.map(gc), order.map(gc));\n    }\n\n    onSet(item, index, prevItem) {\n        prevItem._setParent(null);\n\n        this._connectParent(item);\n        this._element.core.setChildAt(index, item.core);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._element.core.moveChild(fromIndex, toIndex);\n    }\n\n    createItem(object) {\n        if (object.type) {\n            return new object.type(this._element.stage);\n        } else {\n            return this._element.stage.createElement();\n        }\n    }\n\n    isItem(object) {\n        return object.isElement;\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Render tree node.\n */\n\nimport StageUtils from \"./StageUtils.mjs\";\nimport ElementCore from \"./core/ElementCore.mjs\";\nimport Base from \"./Base.mjs\";\n\nimport Utils from \"./Utils.mjs\";\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Element {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.__id = Element.id++;\n\n        this.__start();\n\n        // EventEmitter constructor.\n        this._hasEventListeners = false;\n\n        this.__core = new ElementCore(this);\n\n        /**\n         * A reference that can be used while merging trees.\n         * @type {string}\n         */\n        this.__ref = null;\n\n        /**\n         * An element is attached if it is a descendant of the stage root.\n         * @type {boolean}\n         */\n        this.__attached = false;\n\n        /**\n         * An element is enabled when it is attached and it is visible (worldAlpha > 0).\n         * @type {boolean}\n         */\n        this.__enabled = false;\n\n        /**\n         * An element is active when it is enabled and it is within bounds.\n         * @type {boolean}\n         */\n        this.__active = false;\n\n        /**\n         * @type {Element}\n         */\n        this.__parent = null;\n\n        /**\n         * The texture that is currently set.\n         * @type {Texture}\n         */\n        this.__texture = null;\n\n        /**\n         * The currently displayed texture. While this.texture is loading, this one may be different.\n         * @type {Texture}\n         */\n        this.__displayedTexture = null;\n\n        /**\n         * Tags that can be used to identify/search for a specific element.\n         * @type {String[]}\n         */\n        this.__tags = null;\n\n        /**\n         * The tree's tags mapping.\n         * This contains all elements for all known tags, at all times.\n         * @type {Map}\n         */\n        this.__treeTags = null;\n\n        /**\n         * Creates a tag context: tagged elements in this branch will not be reachable from ancestors of this elements.\n         * @type {boolean}\n         */\n        this.__tagRoot = false;\n\n        /**\n         * (Lazy-initialised) list of children owned by this elements.\n         * @type {ElementChildList}\n         */\n        this.__childList = null;\n\n        this._w = 0;\n\n        this._h = 0;\n    }\n\n    __start() {\n    }\n\n    get id() {\n        return this.__id;\n    }\n\n    set ref(ref) {\n        if (this.__ref !== ref) {\n            const charcode = ref.charCodeAt(0);\n            if (!Utils.isUcChar(charcode)) {\n                this._throwError(\"Ref must start with an upper case character: \" + ref);\n            }\n            if (this.__ref !== null) {\n                this.removeTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.clearRef(this.__ref);\n                }\n            }\n\n            this.__ref = ref;\n\n            if (this.__ref) {\n                this._addTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.setRef(this.__ref, this);\n                }\n            }\n        }\n    }\n\n    get ref() {\n        return this.__ref;\n    }\n\n    get core() {\n        return this.__core;\n    }\n\n    setAsRoot() {\n        this.__core.setAsRoot();\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n    }\n\n    get isRoot() {\n        return this.__core.isRoot;\n    }\n\n    _setParent(parent) {\n        if (this.__parent === parent) return;\n\n        if (this.__parent) {\n            this._unsetTagsParent();\n        }\n\n        this.__parent = parent;\n\n        if (parent) {\n            this._setTagsParent();\n        }\n\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n        this._updateCollision();\n\n        if (this.isRoot && parent) {\n            this._throwError(\"Root should not be added as a child! Results are unspecified!\");\n        }\n    };\n\n    getDepth() {\n        let depth = 0;\n\n        let p = this.__parent;\n        while(p) {\n            depth++;\n            p = p.__parent;\n        }\n\n        return depth;\n    };\n\n    getAncestor(l) {\n        let p = this;\n        while (l > 0 && p.__parent) {\n            p = p.__parent;\n            l--;\n        }\n        return p;\n    };\n\n    getAncestors() {\n        const a = [];\n        let p = this;\n        while (p) {\n            a.push(p);\n            p = p.__parent;\n        }\n        return a;\n    }\n\n    getAncestorAtDepth(depth) {\n        let levels = this.getDepth() - depth;\n        if (levels < 0) {\n            return null;\n        }\n        return this.getAncestor(levels);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while(p = p.parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    getSharedAncestor(c) {\n        let o1 = this;\n        let o2 = c;\n        let l1 = o1.getDepth();\n        let l2 = o2.getDepth();\n        if (l1 > l2) {\n            o1 = o1.getAncestor(l1 - l2);\n        } else if (l2 > l1) {\n            o2 = o2.getAncestor(l2 - l1);\n        }\n\n        do {\n            if (o1 === o2) {\n                return o1;\n            }\n\n            o1 = o1.__parent;\n            o2 = o2.__parent;\n        } while (o1 && o2);\n\n        return null;\n    };\n\n    get attached() {\n        return this.__attached;\n    }\n\n    get enabled() {\n        return this.__enabled;\n    }\n\n    get active() {\n        return this.__active;\n    }\n\n    _isAttached() {\n        return (this.__parent ? this.__parent.__attached : (this.stage.root === this));\n    };\n\n    _isEnabled() {\n        return this.__core.visible && (this.__core.alpha > 0) && (this.__parent ? this.__parent.__enabled : (this.stage.root === this));\n    };\n\n    _isActive() {\n        return this._isEnabled() && this.withinBoundsMargin;\n    };\n\n    /**\n     * Updates the 'attached' flag for this branch.\n     */\n    _updateAttachedFlag() {\n        let newAttached = this._isAttached();\n        if (this.__attached !== newAttached) {\n            this.__attached = newAttached;\n\n            if (newAttached) {\n                this._onSetup();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateAttachedFlag();\n                    }\n                }\n            }\n\n            if (newAttached) {\n                this._onAttach();\n            } else {\n                this._onDetach();\n            }\n        }\n    };\n\n    /**\n     * Updates the 'enabled' flag for this branch.\n     */\n    _updateEnabledFlag() {\n        let newEnabled = this._isEnabled();\n        if (this.__enabled !== newEnabled) {\n            if (newEnabled) {\n                this._onEnabled();\n                this._setEnabledFlag();\n            } else {\n                this._onDisabled();\n                this._unsetEnabledFlag();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateEnabledFlag();\n                    }\n                }\n            }\n        }\n    };\n\n    _setEnabledFlag() {\n        this.__enabled = true;\n\n        // Force re-check of texture because dimensions might have changed (cutting).\n        this._updateDimensions();\n        this._updateTextureCoords();\n\n        if (this.__texture) {\n            this.__texture.addElement(this);\n        }\n\n        if (this.withinBoundsMargin) {\n            this._setActiveFlag();\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.addElement(this.__core);\n        }\n\n    }\n\n    _unsetEnabledFlag() {\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n\n        if (this.__texture) {\n            this.__texture.removeElement(this);\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.removeElement(this.__core);\n        }\n\n        if (this._texturizer) {\n            this.texturizer.filters.forEach(filter => filter.removeElement(this.__core));\n        }\n\n        this.__enabled = false;\n    }\n\n    _setActiveFlag() {\n        this.__active = true;\n\n        // This must happen before enabling the texture, because it may already be loaded or load directly.\n        if (this.__texture) {\n            this.__texture.incActiveCount();\n        }\n\n        if (this.__texture) {\n            this._enableTexture();\n        }\n        this._onActive();\n    }\n\n    _unsetActiveFlag() {\n        if (this.__texture) {\n            this.__texture.decActiveCount();\n        }\n\n        this.__active = false;\n        if (this.__texture) {\n            this._disableTexture();\n        }\n\n        if (this._hasTexturizer()) {\n            this.texturizer.deactivate();\n        }\n\n        this._onInactive();\n    }\n\n    _onSetup() {\n    }\n\n    _onAttach() {\n    }\n\n    _onDetach() {\n    }\n\n    _onEnabled() {\n    }\n\n    _onDisabled() {\n    }\n\n    _onActive() {\n    }\n\n    _onInactive() {\n    }\n\n    _onResize() {\n    }\n\n    _getRenderWidth() {\n        if (this._w) {\n            return this._w;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderWidth();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderWidth();\n        } else {\n            return 0;\n        }\n    };\n\n    _getRenderHeight() {\n        if (this._h) {\n            return this._h;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderHeight();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderHeight();\n        } else {\n            return 0;\n        }\n    };\n\n    get renderWidth() {\n        if (this.__enabled) {\n            // Render width is only maintained if this element is enabled.\n            return this.__core.getRenderWidth();\n        } else {\n            return this._getRenderWidth();\n        }\n    }\n\n    get renderHeight() {\n        if (this.__enabled) {\n            return this.__core.getRenderHeight();\n        } else {\n            return this._getRenderHeight();\n        }\n    }\n\n    get finalX() {\n        return this.__core.x;\n    }\n\n    get finalY() {\n        return this.__core.y;\n    }\n\n    get finalW() {\n        return this.__core.w;\n    }\n\n    get finalH() {\n        return this.__core.h;\n    }\n\n    textureIsLoaded() {\n        return this.__texture && this.__texture.isLoaded();\n    }\n\n    loadTexture() {\n        if (this.__texture) {\n            this.__texture.load();\n\n            if (!this.__texture.isUsed() || !this._isEnabled()) {\n                // Loading the texture will have no effect on the dimensions of this element.\n                // Manually update them, so that calcs can be performed immediately in userland.\n                this._updateDimensions();\n            }\n        }\n    }\n\n    _enableTextureError() {\n        // txError event should automatically be re-triggered when a element becomes active.\n        const loadError = this.__texture.loadError;\n        if (loadError) {\n            this.emit('txError', loadError, this.__texture._source);\n        }\n    }\n\n    _enableTexture() {\n        if (this.__texture.isLoaded()) {\n            this._setDisplayedTexture(this.__texture);\n        } else {\n            // We don't want to retain the old 'ghost' image as it wasn't visible anyway.\n            this._setDisplayedTexture(null);\n\n            this._enableTextureError();\n        }\n    }\n\n    _disableTexture() {\n        // We disable the displayed texture because, when the texture changes while invisible, we should use that w, h,\n        // mw, mh for checking within bounds.\n        this._setDisplayedTexture(null);\n    }\n\n    get texture() {\n        return this.__texture;\n    }\n\n    set texture(v) {\n        let texture;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                texture = new v.type(this.stage);\n            } else {\n                texture = this.texture;\n            }\n\n            if (texture) {\n                Base.patchObject(texture, v);\n            }\n        } else if (!v) {\n            texture = null;\n        } else {\n            if (v.isTexture) {\n                texture = v;\n            } else if (v.isTextureSource) {\n                texture = new SourceTexture(this.stage);\n                texture.textureSource = v;\n            } else {\n                console.error(\"[Lightning] Please specify a texture type.\");\n                return;\n            }\n        }\n\n        const prevTexture = this.__texture;\n        if (texture !== prevTexture) {\n            this.__texture = texture;\n\n            if (this.__texture) {\n                if (this.__enabled) {\n                    this.__texture.addElement(this);\n\n                    if (this.withinBoundsMargin) {\n                        if (this.__texture.isLoaded()) {\n                            this._setDisplayedTexture(this.__texture);\n                        } else {\n                            this._enableTextureError();\n                        }\n                    }\n                }\n            } else {\n                // Make sure that current texture is cleared when the texture is explicitly set to null.\n                this._setDisplayedTexture(null);\n            }\n\n            if (prevTexture && prevTexture !== this.__displayedTexture) {\n                prevTexture.removeElement(this);\n            }\n\n            this._updateDimensions();\n        }\n    }\n\n    get displayedTexture() {\n        return this.__displayedTexture;\n    }\n\n    _setDisplayedTexture(v) {\n        let prevTexture = this.__displayedTexture;\n\n        if (prevTexture && (v !== prevTexture)) {\n            if (this.__texture !== prevTexture) {\n                // The old displayed texture is deprecated.\n                prevTexture.removeElement(this);\n            }\n        }\n\n        const prevSource = this.__core.displayedTextureSource;\n        const sourceChanged = (v ? v._source : null) !== prevSource;\n\n        this.__displayedTexture = v;\n        this._updateDimensions();\n\n        if (this.__displayedTexture) {\n            if (sourceChanged) {\n                // We don't need to reference the displayed texture because it was already referenced (this.texture === this.displayedTexture).\n                this._updateTextureCoords();\n                this.__core.setDisplayedTextureSource(this.__displayedTexture._source);\n            }\n        } else {\n            this.__core.setDisplayedTextureSource(null);\n        }\n\n        if (sourceChanged) {\n            if (this.__displayedTexture) {\n                this.stage.removeUpdateSourceTexture(this.__displayedTexture)\n                this.emit('txLoaded', this.__displayedTexture);\n            } else {\n                this.emit('txUnloaded', this.__displayedTexture);\n            }\n        }\n    }\n\n    onTextureSourceLoaded() {\n        // This function is called when element is enabled, but we only want to set displayed texture for active elements.\n        if (this.active) {\n            // We may be dealing with a texture reloading, so we must force update.\n            this._setDisplayedTexture(this.__texture);\n        }\n    };\n\n    onTextureSourceLoadError(e) {\n        this.emit('txError', e, this.__texture._source);\n    };\n\n    forceRenderUpdate() {\n        this.__core.setHasRenderUpdates(3);\n    }\n\n    onDisplayedTextureClippingChanged() {\n        this._updateDimensions();\n        this._updateTextureCoords();\n    };\n\n    onPrecisionChanged() {\n        this._updateDimensions();\n    };\n\n    onDimensionsChanged(w, h) {\n        if (this.texture instanceof TextTexture) {\n            this.texture.w = w;\n            this.texture.h = h;\n            this.w = w;\n            this.h = h;\n        }\n    }\n\n    _updateDimensions() {\n        let w = this._getRenderWidth();\n        let h = this._getRenderHeight();\n\n        let unknownSize = false;\n        if (!w || !h) {\n            if (!this.__displayedTexture && this.__texture) {\n                // We use a 'max width' replacement instead in the ElementCore calcs.\n                // This makes sure that it is able to determine withinBounds.\n                w = w || this.__texture.mw;\n                h = h || this.__texture.mh;\n\n                if ((!w || !h) && this.__texture.isAutosizeTexture()) {\n                    unknownSize = true;\n                }\n            }\n        }\n\n        if (this.__core.setDimensions(w, h, unknownSize)) {\n            this._onResize();\n        }\n    }\n\n    _updateTextureCoords() {\n        if (this.displayedTexture && this.displayedTexture._source) {\n            let displayedTexture = this.displayedTexture;\n            let displayedTextureSource = this.displayedTexture._source;\n\n            let tx1 = 0, ty1 = 0, tx2 = 1.0, ty2 = 1.0;\n            if (displayedTexture.clipping) {\n                // Apply texture clipping.\n                let w = displayedTextureSource.getRenderWidth();\n                let h = displayedTextureSource.getRenderHeight();\n                let iw, ih, rw, rh;\n                iw = 1 / w;\n                ih = 1 / h;\n\n                if (displayedTexture.pw) {\n                    rw = (displayedTexture.pw) * iw;\n                } else {\n                    rw = (w - displayedTexture.px) * iw;\n                }\n\n                if (displayedTexture.ph) {\n                    rh = displayedTexture.ph * ih;\n                } else {\n                    rh = (h - displayedTexture.py) * ih;\n                }\n\n                iw *= (displayedTexture.px);\n                ih *= (displayedTexture.py);\n\n                tx1 = iw;\n                ty1 = ih;\n                tx2 = tx2 * rw + iw;\n                ty2 = ty2 * rh + ih;\n\n                tx1 = Math.max(0, tx1);\n                ty1 = Math.max(0, ty1);\n                tx2 = Math.min(1, tx2);\n                ty2 = Math.min(1, ty2);\n            }\n\n            if (displayedTextureSource._flipTextureY) {\n                let tempty = ty2;\n                ty2 = ty1;\n                ty1 = tempty;\n            }\n            this.__core.setTextureCoords(tx1, ty1, tx2, ty2);\n        }\n    }\n\n    getCornerPoints() {\n        return this.__core.getCornerPoints();\n    }\n\n    _unsetTagsParent() {\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                // Remove from treeTags.\n                let p = this;\n                while (p = p.__parent) {\n                    let parentTreeTags = p.__treeTags.get(tag);\n                    parentTreeTags.delete(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        let tags = null;\n        let n = 0;\n        if (this.__treeTags) {\n            if (!this.__tagRoot) {\n                tags = Utils.iteratorToArray(this.__treeTags.keys());\n                n = tags.length;\n\n                if (n > 0) {\n                    for (let i = 0; i < n; i++) {\n                        let tagSet = this.__treeTags.get(tags[i]);\n\n                        // Remove from treeTags.\n                        let p = this;\n                        while ((p = p.__parent)) {\n                            let parentTreeTags = p.__treeTags.get(tags[i]);\n\n                            tagSet.forEach(function (comp) {\n                                parentTreeTags.delete(comp);\n                            });\n\n                            if (p.__tagRoot) {\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    _setTagsParent() {\n        // Just copy over the 'local' tags.\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                let p = this;\n                while (p = p.__parent) {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        if (this.__treeTags && this.__treeTags.size) {\n            if (!this.__tagRoot) {\n                this.__treeTags.forEach((tagSet, tag) => {\n                    let p = this;\n                    while (!p.__tagRoot && (p = p.__parent)) {\n                        if (p.__tagRoot) {\n                            // Do not copy all subs.\n                        }\n                        if (!p.__treeTags) {\n                            p.__treeTags = new Map();\n                        }\n\n                        let s = p.__treeTags.get(tag);\n                        if (!s) {\n                            s = new Set();\n                            p.__treeTags.set(tag, s);\n                        }\n\n                        tagSet.forEach(function (comp) {\n                            s.add(comp);\n                        });\n                    }\n                });\n            }\n        }\n    };\n\n\n    _getByTag(tag) {\n        if (!this.__treeTags) {\n            return [];\n        }\n        let t = this.__treeTags.get(tag);\n        return t ? Utils.setToArray(t) : [];\n    };\n\n    getTags() {\n        return this.__tags ? this.__tags : [];\n    };\n\n    setTags(tags) {\n        tags = tags.reduce((acc, tag) => {\n            return acc.concat(tag.split(' '));\n        }, []);\n\n        if (this.__ref) {\n            tags.push(this.__ref);\n        }\n\n        let i, n = tags.length;\n        let removes = [];\n        let adds = [];\n        for (i = 0; i < n; i++) {\n            if (!this.hasTag(tags[i])) {\n                adds.push(tags[i]);\n            }\n        }\n\n        let currentTags = this.tags || [];\n        n = currentTags.length;\n        for (i = 0; i < n; i++) {\n            if (tags.indexOf(currentTags[i]) == -1) {\n                removes.push(currentTags[i]);\n            }\n        }\n\n        for (i = 0; i < removes.length; i++) {\n            this.removeTag(removes[i]);\n        }\n\n        for (i = 0; i < adds.length; i++) {\n            this.addTag(adds[i]);\n        }\n    }\n\n    addTag(tag) {\n        if (tag.indexOf(' ') === -1) {\n            if (Utils.isUcChar(tag.charCodeAt(0))) {\n                this._throwError(\"Tag may not start with an upper case character.\");\n            }\n\n            this._addTag(tag);\n        } else {\n            const tags = tag.split(' ');\n            for (let i = 0, m = tags.length; i < m; i++) {\n                const tag = tags[i];\n\n                if (Utils.isUcChar(tag.charCodeAt(0))) {\n                    this._throwError(\"Tag may not start with an upper case character.\");\n                }\n\n                this._addTag(tag);\n            }\n        }\n    }\n\n    _addTag(tag) {\n        if (!this.__tags) {\n            this.__tags = [];\n        }\n        if (this.__tags.indexOf(tag) === -1) {\n            this.__tags.push(tag);\n\n            // Add to treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    removeTag(tag) {\n        let i = this.__tags.indexOf(tag);\n        if (i !== -1) {\n            this.__tags.splice(i, 1);\n\n            // Remove from treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    let list = p.__treeTags.get(tag);\n                    if (list) {\n                        list.delete(this);\n                    }\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    hasTag(tag) {\n        return (this.__tags && (this.__tags.indexOf(tag) !== -1));\n    }\n\n    /**\n     * Returns one of the elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element}\n     */\n    _tag(tag) {\n        if (tag.indexOf(\".\") !== -1) {\n            return this.mtag(tag)[0];\n        } else {\n            if (this.__treeTags) {\n                let t = this.__treeTags.get(tag);\n                if (t) {\n                    const item = t.values().next();\n                    return item ? item.value : undefined;\n                }\n            }\n        }\n    };\n\n    get tag() {\n        return this._tag;\n    }\n\n    set tag(t) {\n        this.tags = t;\n    }\n\n    /**\n     * Returns all elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element[]}\n     */\n    mtag(tag) {\n        let idx = tag.indexOf(\".\");\n        if (idx >= 0) {\n            let parts = tag.split('.');\n            let res = this._getByTag(parts[0]);\n            let level = 1;\n            let c = parts.length;\n            while (res.length && level < c) {\n                let resn = [];\n                for (let j = 0, n = res.length; j < n; j++) {\n                    resn = resn.concat(res[j]._getByTag(parts[level]));\n                }\n\n                res = resn;\n                level++;\n            }\n            return res;\n        } else {\n            return this._getByTag(tag);\n        }\n    };\n\n    stag(tag, settings) {\n        let t = this.mtag(tag);\n        let n = t.length;\n        for (let i = 0; i < n; i++) {\n            Base.patchObject(t[i], settings);\n        }\n    }\n\n    get tagRoot() {\n        return this.__tagRoot;\n    }\n\n    set tagRoot(v) {\n        if (this.__tagRoot !== v) {\n            if (!v) {\n                this._setTagsParent();\n            } else {\n                this._unsetTagsParent();\n            }\n\n            this.__tagRoot = v;\n        }\n    }\n\n    sel(path) {\n        const results = this.select(path);\n        if (results.length) {\n            return results[0];\n        } else {\n            return undefined;\n        }\n    }\n\n    select(path) {\n        if (path.indexOf(\",\") !== -1) {\n            let selectors = path.split(',');\n            let res = [];\n            for (let i = 0; i < selectors.length; i++) {\n                res = res.concat(this._select(selectors[i]));\n            }\n            return res;\n        } else {\n            return this._select(path);\n        }\n    }\n\n    _select(path) {\n        if (path === \"\") return [this];\n\n\n        let pointIdx = path.indexOf(\".\");\n        let arrowIdx = path.indexOf(\">\");\n        if (pointIdx === -1 && arrowIdx === -1) {\n            // Quick case.\n            return this.mtag(path);\n        }\n\n        // Detect by first char.\n        let isRef;\n        if (arrowIdx === 0) {\n            isRef = true;\n            path = path.substr(1);\n        } else if (pointIdx === 0) {\n            isRef = false;\n            path = path.substr(1);\n        } else {\n            isRef = false;\n        }\n\n        return this._selectChilds(path, isRef);\n    }\n\n    _selectChilds(path, isRef) {\n        const pointIdx = path.indexOf(\".\");\n        const arrowIdx = path.indexOf(\">\");\n\n        if (pointIdx === -1 && arrowIdx === -1) {\n            if (isRef) {\n                const ref = this.getByRef(path);\n                return ref ? [ref] : [];\n            } else {\n                return this.mtag(path);\n            }\n        }\n\n        if ((arrowIdx === -1) || (pointIdx !== -1 && pointIdx < arrowIdx)) {\n            let next;\n            const str = path.substr(0, pointIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(pointIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, false));\n            }\n            return total;\n        } else {\n            let next;\n            const str = path.substr(0, arrowIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(arrowIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, true));\n            }\n            return total;\n        }\n    }\n\n    getByRef(ref) {\n        return this.childList.getByRef(ref);\n    }\n\n    getLocationString() {\n        let i;\n        i = this.__parent ? this.__parent._children.getIndex(this) : \"R\";\n        let localTags = this.getTags();\n        let str = this.__parent ? this.__parent.getLocationString(): \"\";\n        if (this.ref) {\n            str += \":[\" + i + \"]\" + this.ref;\n        } else if (localTags.length) {\n            str += \":[\" + i + \"]\" + localTags.join(\",\");\n        } else {\n            str += \":[\" + i + \"]#\" + this.id;\n        }\n        return str;\n    }\n\n    toString() {\n        let obj = this.getSettings();\n        return Element.getPrettyString(obj, \"\");\n    };\n\n    static getPrettyString(obj, indent) {\n        let children = obj.children;\n        delete obj.children;\n\n\n        // Convert singular json settings object.\n        let colorKeys = [\"color\", \"colorUl\", \"colorUr\", \"colorBl\", \"colorBr\"];\n        let str = JSON.stringify(obj, function (k, v) {\n            if (colorKeys.indexOf(k) !== -1) {\n                return \"COLOR[\" + v.toString(16) + \"]\";\n            }\n            return v;\n        });\n        str = str.replace(/\"COLOR\\[([a-f0-9]{1,8})\\]\"/g, \"0x$1\");\n\n        if (children) {\n            let childStr = \"\";\n            if (Utils.isObjectLiteral(children)) {\n                let refs = Object.keys(children);\n                childStr = \"\";\n                for (let i = 0, n = refs.length; i < n; i++) {\n                    childStr += `\\n${indent}  \"${refs[i]}\":`\n                    delete children[refs[i]].ref;\n                    childStr += Element.getPrettyString(children[refs[i]], indent + \"  \") + (i < n - 1 ? \",\" : \"\");\n                }\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + childStr + \"\\n\" + indent + \"}\";\n            } else {\n                let n = children.length;\n                childStr = \"[\";\n                for (let i = 0; i < n; i++) {\n                    childStr += Element.getPrettyString(children[i], indent + \"  \") + (i < n - 1 ? \",\" : \"\") + \"\\n\";\n                }\n                childStr += indent + \"]}\";\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + \"\\\"children\\\":\\n\" + indent + childStr + \"}\";\n            }\n\n        }\n\n        return str;\n    }\n\n    getSettings() {\n        let settings = this.getNonDefaults();\n\n        let children = this._children.get();\n        if (children) {\n            let n = children.length;\n            if (n) {\n                const childArray = [];\n                let missing = false;\n                for (let i = 0; i < n; i++) {\n                    childArray.push(children[i].getSettings());\n                    missing = missing || !children[i].ref;\n                }\n\n                if (!missing) {\n                    settings.children = {}\n                    childArray.forEach(child => {\n                        settings.children[child.ref] = child;\n                    });\n                } else {\n                    settings.children = childArray;\n                }\n            }\n        }\n\n        settings.id = this.id;\n\n        return settings;\n    }\n\n    getNonDefaults() {\n        let settings = {};\n\n        if (this.constructor !== Element) {\n            settings.type = this.constructor.name;\n        }\n\n        if (this.__ref) {\n            settings.ref = this.__ref;\n        }\n\n        if (this.__tags && this.__tags.length) {\n            settings.tags = this.__tags;\n        }\n\n        if (this.x !== 0) settings.x = this.x;\n        if (this.y !== 0) settings.y = this.y;\n        if (this.w !== 0) settings.w = this.w;\n        if (this.h !== 0) settings.h = this.h;\n\n        if (this.scaleX === this.scaleY) {\n            if (this.scaleX !== 1) settings.scale = this.scaleX;\n        } else {\n            if (this.scaleX !== 1) settings.scaleX = this.scaleX;\n            if (this.scaleY !== 1) settings.scaleY = this.scaleY;\n        }\n\n        if (this.pivotX === this.pivotY) {\n            if (this.pivotX !== 0.5) settings.pivot = this.pivotX;\n        } else {\n            if (this.pivotX !== 0.5) settings.pivotX = this.pivotX;\n            if (this.pivotY !== 0.5) settings.pivotY = this.pivotY;\n        }\n\n        if (this.mountX === this.mountY) {\n            if (this.mountX !== 0) settings.mount = this.mountX;\n        } else {\n            if (this.mountX !== 0) settings.mountX = this.mountX;\n            if (this.mountY !== 0) settings.mountY = this.mountY;\n        }\n\n        if (this.alpha !== 1) settings.alpha = this.alpha;\n\n        if (!this.visible) settings.visible = false;\n\n        if (this.rotation !== 0) settings.rotation = this.rotation;\n\n        if (this.colorUl === this.colorUr && this.colorBl === this.colorBr && this.colorUl === this.colorBl) {\n            if (this.colorUl !== 0xFFFFFFFF) settings.color = this.colorUl.toString(16);\n        } else {\n            if (this.colorUl !== 0xFFFFFFFF) settings.colorUl = this.colorUl.toString(16);\n            if (this.colorUr !== 0xFFFFFFFF) settings.colorUr = this.colorUr.toString(16);\n            if (this.colorBl !== 0xFFFFFFFF) settings.colorBl = this.colorBl.toString(16);\n            if (this.colorBr !== 0xFFFFFFFF) settings.colorBr = this.colorBr.toString(16);\n        }\n\n        if (this.zIndex) settings.zIndex = this.zIndex;\n\n        if (this.forceZIndexContext) settings.forceZIndexContext = true;\n\n        if (this.clipping) settings.clipping = this.clipping;\n\n        if (!this.clipbox) settings.clipbox = this.clipbox;\n\n        if (this.__texture) {\n            let tnd = this.__texture.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.texture = tnd;\n            }\n        }\n\n        if (this.shader && Utils.isFunction(this.shader.getNonDefaults)) {\n            let tnd = this.shader.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.shader = tnd;\n            }\n        }\n\n        if (this._hasTexturizer()) {\n            if (this.texturizer.enabled) {\n                settings.renderToTexture = this.texturizer.enabled;\n            }\n            if (this.texturizer.lazy) {\n                settings.renderToTextureLazy = this.texturizer.lazy;\n            }\n            if (this.texturizer.colorize) {\n                settings.colorizeResultTexture = this.texturizer.colorize;\n            }\n            if (this.texturizer.renderOffscreen) {\n                settings.renderOffscreen = this.texturizer.renderOffscreen;\n            }\n        }\n\n        return settings;\n    };\n\n    static getGetter(propertyPath) {\n        let getter = Element.PROP_GETTERS.get(propertyPath);\n        if (!getter) {\n            getter = new Function('obj', 'return obj.' + propertyPath);\n            Element.PROP_GETTERS.set(propertyPath, getter);\n        }\n        return getter;\n    }\n\n    static getSetter(propertyPath) {\n        let setter = Element.PROP_SETTERS.get(propertyPath);\n        if (!setter) {\n            setter = new Function('obj', 'v', 'obj.' + propertyPath + ' = v');\n            Element.PROP_SETTERS.set(propertyPath, setter);\n        }\n        return setter;\n    }\n\n    get withinBoundsMargin() {\n        return this.__core._withinBoundsMargin;\n    }\n\n    _enableWithinBoundsMargin() {\n        // Iff enabled, this toggles the active flag.\n        if (this.__enabled) {\n            this._setActiveFlag();\n        }\n    }\n\n    _disableWithinBoundsMargin() {\n        // Iff active, this toggles the active flag.\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n    }\n\n    set boundsMargin(v) {\n        if (!Array.isArray(v) && v !== null) {\n            throw new Error(\"boundsMargin should be an array of left-top-right-bottom values or null (inherit margin)\");\n        }\n        this.__core.boundsMargin = v;\n    }\n\n    get boundsMargin() {\n        return this.__core.boundsMargin;\n    }\n\n    get x() {\n        return this.__core.offsetX;\n    }\n\n    set x(v) {\n        this.__core.offsetX = v;\n    }\n\n    get y() {\n        return this.__core.offsetY;\n    }\n\n    set y(v) {\n        this.__core.offsetY = v;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (Utils.isFunction(v)) {\n            this._w = 0;\n            this.__core.funcW = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._w !== v) {\n                this.__core.disableFuncW();\n                this._w = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (Utils.isFunction(v)) {\n            this._h = 0;\n            this.__core.funcH = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._h !== v) {\n                this.__core.disableFuncH();\n                this._h = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get collision() {\n        return this._collision;\n    }\n\n    set collision(v) {\n        this._collision = v;\n    }\n\n    _updateCollision() {\n        if (this.collision && this.__parent && this.__parent.collision === undefined) {\n            /**\n             * Mark collision as 2 to indicate atleast one descendant has collision enabled.\n             * This narrows down the search for elements with active collision.\n            */\n            this.__parent.collision = 2;\n        }\n    }\n\n    get scaleX() {\n        return this.__core.scaleX;\n    }\n\n    set scaleX(v) {\n        this.__core.scaleX = v;\n    }\n\n    get scaleY() {\n        return this.__core.scaleY;\n    }\n\n    set scaleY(v) {\n        this.__core.scaleY = v;\n    }\n\n    get scale() {\n        return this.__core.scale;\n    }\n\n    set scale(v) {\n        this.__core.scale = v;\n    }\n\n    get pivotX() {\n        return this.__core.pivotX;\n    }\n\n    set pivotX(v) {\n        this.__core.pivotX = v;\n    }\n\n    get pivotY() {\n        return this.__core.pivotY;\n    }\n\n    set pivotY(v) {\n        this.__core.pivotY = v;\n    }\n\n    get pivot() {\n        return this.__core.pivot;\n    }\n\n    set pivot(v) {\n        this.__core.pivot = v;\n    }\n\n    get mountX() {\n        return this.__core.mountX;\n    }\n\n    set mountX(v) {\n        this.__core.mountX = v;\n    }\n\n    get mountY() {\n        return this.__core.mountY;\n    }\n\n    set mountY(v) {\n        this.__core.mountY = v;\n    }\n\n    get mount() {\n        return this.__core.mount;\n    }\n\n    set mount(v) {\n        this.__core.mount = v;\n    }\n\n    get rotation() {\n        return this.__core.rotation;\n    }\n\n    set rotation(v) {\n        this.__core.rotation = v;\n    }\n\n    get alpha() {\n        return this.__core.alpha;\n    }\n\n    set alpha(v) {\n        this.__core.alpha = v;\n    }\n\n    get visible() {\n        return this.__core.visible;\n    }\n\n    set visible(v) {\n        this.__core.visible = v;\n    }\n    \n    get colorUl() {\n        return this.__core.colorUl;\n    }\n\n    set colorUl(v) {\n        this.__core.colorUl = v;\n    }\n\n    get colorUr() {\n        return this.__core.colorUr;\n    }\n\n    set colorUr(v) {\n        this.__core.colorUr = v;\n    }\n\n    get colorBl() {\n        return this.__core.colorBl;\n    }\n\n    set colorBl(v) {\n        this.__core.colorBl = v;\n    }\n\n    get colorBr() {\n        return this.__core.colorBr;\n    }\n\n    set colorBr(v) {\n        this.__core.colorBr = v;\n    }\n\n    get color() {\n        return this.__core.colorUl;\n    }\n\n    set color(v) {\n        if (this.colorUl !== v || this.colorUr !== v || this.colorBl !== v || this.colorBr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorTop() {\n        return this.colorUl;\n    }\n\n    set colorTop(v) {\n        if (this.colorUl !== v || this.colorUr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n        }\n    }\n\n    get colorBottom() {\n        return this.colorBl;\n    }\n\n    set colorBottom(v) {\n        if (this.colorBl !== v || this.colorBr !== v) {\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorLeft() {\n        return this.colorUl;\n    }\n\n    set colorLeft(v) {\n        if (this.colorUl !== v || this.colorBl !== v) {\n            this.colorUl = v;\n            this.colorBl = v;\n        }\n    }\n\n    get colorRight() {\n        return this.colorUr;\n    }\n\n    set colorRight(v) {\n        if (this.colorUr !== v || this.colorBr !== v) {\n            this.colorUr = v;\n            this.colorBr = v;\n        }\n    }\n\n    get zIndex() {return this.__core.zIndex}\n    set zIndex(v) {\n        this.__core.zIndex = v;\n    }\n\n    get forceZIndexContext() {return this.__core.forceZIndexContext}\n    set forceZIndexContext(v) {\n        this.__core.forceZIndexContext = v;\n    }\n\n    get clipping() {return this.__core.clipping}\n    set clipping(v) {\n        this.__core.clipping = v;\n    }\n\n    get clipbox() {return this.__core.clipbox}\n    set clipbox(v) {\n        this.__core.clipbox = v;\n    }\n\n    get tags() {\n        return this.getTags();\n    }\n\n    set tags(v) {\n        if (!Array.isArray(v)) v = [v];\n        this.setTags(v);\n    }\n\n    set t(v) {\n        this.tags = v;\n    }\n\n    get _children() {\n        if (!this.__childList) {\n            this.__childList = new ElementChildList(this, false);\n        }\n        return this.__childList;\n    }\n\n    get childList() {\n        if (!this._allowChildrenAccess()) {\n            this._throwError(\"Direct access to children is not allowed in \" + this.getLocationString());\n        }\n        return this._children;\n    }\n\n    hasChildren() {\n        return this._allowChildrenAccess() && this.__childList && (this.__childList.length > 0);\n    }\n\n    _allowChildrenAccess() {\n        return true;\n    }\n\n    get children() {\n        return this.childList.get();\n    }\n\n    set children(children) {\n        this.childList.patch(children);\n    }\n\n    add(o) {\n        return this.childList.a(o);\n    }\n\n    get p() {\n        return this.__parent;\n    }\n\n    get parent() {\n        return this.__parent;\n    }\n\n    get src() {\n        if (this.texture && this.texture instanceof ImageTexture) {\n            return this.texture._src;\n        } else {\n            return undefined;\n        }\n    }\n\n    set src(v) {\n        const texture = new ImageTexture(this.stage);\n        texture.src = v;\n        this.texture = texture;\n    }\n\n    set mw(v) {\n        if (this.texture) {\n            this.texture.mw = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mw after setting a texture.');\n        }\n    }\n\n    set mh(v) {\n        if (this.texture) {\n            this.texture.mh = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mh after setting a texture.');\n        }\n    }\n\n    get rect() {\n        return (this.texture === this.stage.rectangleTexture);\n    }\n\n    set rect(v) {\n        if (v) {\n            this.texture = this.stage.rectangleTexture;\n        } else {\n            this.texture = null;\n        }\n    }\n\n    enableTextTexture() {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.texture = new TextTexture(this.stage);\n\n            if (!this.texture.w && !this.texture.h) {\n                // Inherit dimensions from element.\n                // This allows userland to set dimensions of the Element and then later specify the text.\n                this.texture.w = this.w;\n                this.texture.h = this.h;\n            }\n        }\n        return this.texture;\n    }\n\n    get text() {\n        if (this.texture && (this.texture instanceof TextTexture)) {\n            return this.texture;\n        } else {\n            return null;\n        }\n    }\n\n    set text(v) {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.enableTextTexture();\n        }\n        if (Utils.isString(v)) {\n            this.texture.text = v;\n        } else {\n            this.texture.patch(v);\n        }\n    }\n\n    set onUpdate(f) {\n        this.__core.onUpdate = f;\n    }\n\n    set onAfterCalcs(f) {\n        this.__core.onAfterCalcs = f;\n    }\n\n    set onAfterUpdate(f) {\n        this.__core.onAfterUpdate = f;\n    }\n\n    forceUpdate() {\n        // Make sure that the update loop is run.\n        this.__core._setHasUpdates();\n    }\n\n    get shader() {\n        return this.__core.shader;\n    }\n\n    set shader(v) {\n        if (Utils.isObjectLiteral(v) && !v.type) {\n            // Setting properties on an existing shader.\n            if (this.shader) {\n                this.shader.patch(v);\n            }\n        } else {\n            const shader = Shader.create(this.stage, v);\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.removeElement(this.__core);\n            }\n\n            this.__core.shader = shader;\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.addElement(this.__core);\n            }\n        }\n    }\n\n    _hasTexturizer() {\n        return !!this.__core._texturizer;\n    }\n\n    get renderToTexture() {\n        return this.rtt\n    }\n\n    set renderToTexture(v) {\n        this.rtt = v\n    }\n\n    get rtt() {\n        return this._hasTexturizer() && this.texturizer.enabled;\n    }\n\n    set rtt(v) {\n        this.texturizer.enabled = v;\n    }\n\n    get rttLazy() {\n        return this._hasTexturizer() && this.texturizer.lazy;\n    }\n\n    set rttLazy(v) {\n        this.texturizer.lazy = v;\n    }\n\n    get renderOffscreen() {\n        return this._hasTexturizer() && this.texturizer.renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this.texturizer.renderOffscreen = v;\n    }\n\n    get colorizeResultTexture() {\n        return this._hasTexturizer() && this.texturizer.colorize;\n    }\n\n    set colorizeResultTexture(v) {\n        this.texturizer.colorize = v;\n    }\n\n    getTexture() {\n        return this.texturizer._getTextureSource();\n    }\n\n    get texturizer() {\n        return this.__core.texturizer;\n    }\n\n    patch(settings) {\n        let paths = Object.keys(settings);\n\n        for (let i = 0, n = paths.length; i < n; i++) {\n            let path = paths[i];\n            const v = settings[path];\n\n            const firstCharCode = path.charCodeAt(0);\n            if (Utils.isUcChar(firstCharCode)) {\n                // Ref.\n                const child = this.getByRef(path);\n                if (!child) {\n                    if (v !== undefined) {\n                        // Add to list immediately.\n                        let c;\n                        if (Utils.isObjectLiteral(v)) {\n                            // Catch this case to capture createMode flag.\n                            c = this.childList.createItem(v);\n                            c.patch(v);\n                        } else if (Utils.isObject(v)) {\n                            c = v;\n                        }\n                        if (c.isElement) {\n                            c.ref = path;\n                        }\n\n                        this.childList.a(c);\n                    }\n                } else {\n                    if (v === undefined) {\n                        if (child.parent) {\n                            child.parent.childList.remove(child);\n                        }\n                    } else if (Utils.isObjectLiteral(v)) {\n                        child.patch(v);\n                    } else if (v.isElement) {\n                        // Replace element by new element.\n                        v.ref = path;\n                        this.childList.replace(v, child);\n                    } else {\n                        this._throwError(\"Unexpected value for path: \" + path);\n                    }\n                }\n            } else {\n                // Property.\n                Base.patchObjectProperty(this, path, v);\n            }\n        }\n    }\n\n    _throwError(message) {\n        throw new Error(this.constructor.name + \" (\" + this.getLocationString() + \"): \" + message);\n    }\n\n    animation(settings) {\n        return this.stage.animations.createAnimation(this, settings);\n    }\n\n    transition(property, settings = null) {\n        if (settings === null) {\n            return this._getTransition(property);\n        } else {\n            this._setTransition(property, settings);\n            // We do not create/return the transition, because it would undo the 'lazy transition creation' optimization.\n            return null;\n        }\n    }\n\n    set transitions(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            this.transition(property, object[property]);\n        });\n    }\n\n    set smooth(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            let value = object[property];\n            if (Array.isArray(value)) {\n                this.setSmooth(property, value[0], value[1]);\n            } else {\n                this.setSmooth(property, value);\n            }\n        });\n    }\n\n    fastForward(property) {\n        if (this._transitions) {\n            let t = this._transitions[property];\n            if (t && t.isTransition) {\n                t.finish();\n            }\n        }\n    }\n\n    _getTransition(property) {\n        if (!this._transitions) {\n            this._transitions = {};\n        }\n        let t = this._transitions[property];\n        if (!t) {\n            // Create default transition.\n            t = new Transition(this.stage.transitions, this.stage.transitions.defaultTransitionSettings, this, property);\n        } else if (t.isTransitionSettings) {\n            // Upgrade to 'real' transition.\n            t = new Transition(\n                this.stage.transitions,\n                t,\n                this,\n                property\n            );\n        }\n        this._transitions[property] = t;\n        return t;\n    }\n\n    _setTransition(property, settings) {\n        if (!settings) {\n            this._removeTransition(property);\n        } else {\n            if (Utils.isObjectLiteral(settings)) {\n                // Convert plain object to proper settings object.\n                settings = this.stage.transitions.createSettings(settings);\n            }\n\n            if (!this._transitions) {\n                this._transitions = {};\n            }\n\n            let current = this._transitions[property];\n            if (current && current.isTransition) {\n                // Runtime settings change.\n                current.settings = settings;\n                return current;\n            } else {\n                // Initially, only set the settings and upgrade to a 'real' transition when it is used.\n                this._transitions[property] = settings;\n            }\n        }\n    }\n\n    _removeTransition(property) {\n        if (this._transitions) {\n            delete this._transitions[property];\n        }\n    }\n\n    getSmooth(property, v) {\n        let t = this._getTransition(property);\n        if (t && t.isAttached()) {\n            return t.targetValue;\n        } else {\n            return v;\n        }\n    }\n\n    setSmooth(property, v, settings) {\n        if (settings) {\n            this._setTransition(property, settings);\n        }\n        let t = this._getTransition(property);\n        t.start(v);\n        return t;\n    }\n\n    get flex() {\n        return this.__core.flex;\n    }\n\n    set flex(v) {\n        this.__core.flex = v;\n    }\n\n    get flexItem() {\n        return this.__core.flexItem;\n    }\n\n    set flexItem(v) {\n        this.__core.flexItem = v;\n    }\n\n    static isColorProperty(property) {\n        return property.toLowerCase().indexOf(\"color\") >= 0;\n    }\n\n    static getMerger(property) {\n        if (Element.isColorProperty(property)) {\n            return StageUtils.mergeColors;\n        } else {\n            return StageUtils.mergeNumbers;\n        }\n    }\n\n    toJSON() {\n        const ref = [`${this.constructor.name}`];\n        const tree = {};\n        tree[ref] = {};\n\n        if (this.hasChildren()) {\n            Element.collectChildren(tree[ref], this.__childList);\n        } else {\n            tree[ref] = {...Element.getProperties(this)};\n        }\n        return tree;\n    }\n\n    static collectChildren(tree, children) {\n        const childList = children;\n        for (let i = 0, j = childList.length; i < j; i++) {\n            const element = childList.getAt(i);\n            const ref = `${element.__ref || `Element-${element.id}`}`;\n            const properties = this.getProperties(element);\n\n            tree[ref] = {...properties};\n\n            if (element.hasChildren()) {\n                tree[ref].children = {};\n                this.collectChildren(\n                    tree[ref].children, element.__childList\n                );\n            }\n        }\n    }\n\n    static getProperties(element) {\n        const props = {};\n        const list = [\n            \"alpha\", \"active\", \"attached\", \"boundsMargin\", \"color\", \"clipping\", \"enabled\", \"h\", \"id\", \"isComponent\",\n            \"mount\", \"mountY\", \"mountX\", \"pivot\", \"pivotX\", \"pivotY\", \"ref\", \"renderOffscreen\", \"renderToTexture\", \"scale\",\n            \"scaleX\", \"scaleY\", \"state\", \"tag\", \"visible\", \"w\", \"x\", \"y\", \"zIndex\",\n            \"!!flex\", \"!!flexItem\", \"hasFocus()\", \"hasFinalFocus()\"\n        ];\n        let n = list.length;\n\n        while (n--) {\n            let key = list[n];\n            const getBoolean = /^!{2}/;\n            const isFunction = /\\(\\)$/;\n\n            if (getBoolean.test(key)) {\n                key = key.substring(2, key.length);\n                props[key] = !!element[key];\n            } else if (isFunction.test(key)) {\n                key = key.substring(0, key.length - 2);\n                if (typeof element[key] === \"function\") {\n                    props[key] = element[key]();\n                }\n            } else {\n                props[key] = element[key];\n            }\n        }\n        return {...props, ...element.getNonDefaults()};\n    }\n}\n\n// This gives a slight performance benefit compared to extending EventEmitter.\nEventEmitter.addAsMixin(Element);\n\nElement.prototype.isElement = 1;\n\nElement.id = 1;\n\n// Getters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_GETTERS = new Map();\n\n// Setters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_SETTERS = new Map();\n\nimport Texture from \"./Texture.mjs\";\nimport ImageTexture from \"../textures/ImageTexture.mjs\";\nimport TextTexture from \"../textures/TextTexture.mjs\";\nimport SourceTexture from \"../textures/SourceTexture.mjs\";\nimport Transition from \"../animation/Transition.mjs\";\nimport ElementChildList from \"./ElementChildList.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StateMachine {\n\n    constructor() {\n        StateMachine.setupStateMachine(this);\n    }\n\n    static setupStateMachine(target) {\n        const targetConstructor = target.constructor;\n        const router = StateMachine.create(targetConstructor);\n        Object.setPrototypeOf(target, router.prototype);\n        target.constructor = targetConstructor;\n        target._initStateMachine();\n    }\n\n    /**\n     * Creates a state machine implementation.\n     * It extends the original type and should be used when creating new instances.\n     * The original type is available as static property 'original', and it must be used when subclassing as follows:\n     * const type = StateMachine.create(class YourNewStateMachineClass extends YourBaseStateMachineClass.original {  })\n     * @param {Class} type\n     * @returns {StateMachine}\n     */\n    static create(type) {\n        if (!type.hasOwnProperty('_sm')) {\n            // Only need to run once.\n            const stateMachineType = new StateMachineType(type);\n            type._sm = stateMachineType;\n        }\n\n        return type._sm.router;\n    }\n\n    /**\n     * Calls the specified method if it exists.\n     * @param {string} event\n     * @param {*...} args\n     */\n    fire(event, ...args) {\n        if (this._hasMethod(event)) {\n            return this[event](...args);\n        }\n    }\n\n    /**\n     * Returns the current state path (for example \"Initialized.Loading\").\n     * @returns {string}\n     * @protected\n     */\n    _getState() {\n        return this._state.__path;\n    }\n\n    /**\n     * Returns true iff statePath is (an ancestor of) currentStatePath.\n     * @param {string} statePath\n     * @param {string} currentStatePath\n     * @returns {Boolean}\n     * @protected\n     */\n    _inState(statePath, currentStatePath = this._state.__path) {\n        const state = this._sm.getStateByPath(statePath);\n        const currentState = this._sm.getStateByPath(currentStatePath);\n        const level = state.__level;\n        const stateAtLevel = StateMachine._getStateAtLevel(currentState, level);\n        return (stateAtLevel === state);\n    }\n\n    /**\n     * Returns true if the specified class member is defined for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMember(name) {\n        return !!this.constructor.prototype[name];\n    }\n\n    /**\n     * Returns true if the specified class member is a method for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMethod(name) {\n        const member = this.constructor.prototype[name];\n        return !!member && (typeof member === \"function\")\n    }\n\n    /**\n     * Switches to the specified state.\n     * @param {string} statePath\n     *   Substates are seperated by a underscores (for example \"Initialized.Loading\").\n     * @param {*[]} [args]\n     *   Args that are supplied in $enter and $exit events.\n     * @protected\n     */\n    _setState(statePath, args) {\n        const setStateId = ++this._setStateCounter;\n        this._setStateId = setStateId;\n\n        if (this._state.__path !== statePath) {\n            // Performance optimization.\n            let newState = this._sm._stateMap[statePath];\n            if (!newState) {\n                // Check for super state.\n                newState = this._sm.getStateByPath(statePath);\n            }\n\n            const prevState = this._state;\n\n            const hasDifferentEnterMethod = (newState.prototype.$enter !== this._state.prototype.$enter);\n            const hasDifferentExitMethod = (newState.prototype.$exit !== this._state.prototype.$exit);\n            if (hasDifferentEnterMethod || hasDifferentExitMethod) {\n                const sharedState = StateMachine._getSharedState(this._state, newState);\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path,\n                    sharedState: sharedState.__path\n                };\n                const sharedLevel = sharedState.__level;\n\n                if (hasDifferentExitMethod) {\n                    const exitStates = StateMachine._getStatesUntilLevel(this._state, sharedLevel);\n                    for (let i = 0, n = exitStates.length; i < n; i++) {\n                        this.__setState(exitStates[i]);\n                        this._callExit(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n                if (hasDifferentEnterMethod) {\n                    const enterStates = StateMachine._getStatesUntilLevel(newState, sharedLevel).reverse();\n                    for (let i = 0, n = enterStates.length; i < n; i++) {\n                        this.__setState(enterStates[i]);\n                        this._callEnter(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n            }\n\n            this.__setState(newState);\n\n            if (this._changedState) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n\n                if (args) {\n                    this._changedState(context, ...args);\n                } else {\n                    this._changedState(context);\n                }\n            }\n\n            if (this._onStateChange) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n                this._onStateChange(context);\n            }\n\n        }\n    }\n\n    _callEnter(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$enter) {\n            if (!hasParent || (state.__parent.prototype.$enter !== state.prototype.$enter)) {\n                state.prototype.$enter.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    _callExit(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$exit) {\n            if (!hasParent || (state.__parent.prototype.$exit !== state.prototype.$exit)) {\n                state.prototype.$exit.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    __setState(state) {\n        this._state = state;\n        this._stateIndex = state.__index;\n        this.constructor = state;\n    }\n\n    _initStateMachine() {\n        this._state = null;\n        this._stateIndex = 0;\n        this._setStateCounter = 0;\n        this._sm = this._routedType._sm;\n        this.__setState(this._sm.getStateByPath(\"\"));\n        const context = {newState: \"\", prevState: undefined, sharedState: undefined};\n        this._callEnter(this._state, [], context);\n        this._onStateChange = undefined;\n    }\n\n    /**\n     * Between multiple member names, select the one specified in the deepest state.\n     * If multiple member names are specified in the same deepest state, the first one in the array is returned.\n     * @param {string[]} memberNames\n     * @returns {string|undefined}\n     * @protected\n     */\n    _getMostSpecificHandledMember(memberNames) {\n        let cur = this._state;\n        do {\n            for (let i = 0, n = memberNames.length; i < n; i++) {\n                const memberName = memberNames[i];\n                if (!cur.__parent) {\n                    if (cur.prototype[memberName]) {\n                        return memberName;\n                    }\n                } else {\n                    const alias = StateMachineType.getStateMemberAlias(cur.__path, memberName);\n                    if (this[alias]) {\n                        return memberName;\n                    }\n                }\n            }\n            cur = cur.__parent;\n        } while (cur);\n    }\n\n    static _getStatesUntilLevel(state, level) {\n        const states = [];\n        while (state.__level > level) {\n            states.push(state);\n            state = state.__parent;\n        }\n        return states;\n    }\n\n    static _getSharedState(state1, state2) {\n        const state1Array = StateMachine._getAncestorStates(state1);\n        const state2Array = StateMachine._getAncestorStates(state2);\n        const n = Math.min(state1Array.length, state2Array.length);\n        for (let i = 0; i < n; i++) {\n            if (state1Array[i] !== state2Array[i]) {\n                return state1Array[i - 1];\n            }\n        }\n        return state1Array[n - 1];\n    }\n\n    static _getAncestorStates(state) {\n        const result = [];\n        do {\n            result.push(state);\n        } while(state = state.__parent);\n        return result.reverse();\n    }\n\n    static _getStateAtLevel(state, level) {\n        if (level > state.__level) {\n            return undefined;\n        }\n\n        while(level < state.__level) {\n            state = state.__parent;\n        }\n        return state;\n    }\n}\n\nclass StateMachineType {\n\n    constructor(type) {\n        this._type = type;\n        this._router = null;\n\n        this.init();\n    }\n\n    get router() {\n        return this._router;\n    }\n\n    init() {\n        this._router = this._createRouter();\n\n        this._stateMap = this._getStateMap();\n\n        this._addStateMemberDelegatorsToRouter();\n\n    }\n\n    _createRouter() {\n        const type = this._type;\n\n        const router = class StateMachineRouter extends type {\n            constructor() {\n                super(...arguments);\n                if (!this.constructor.hasOwnProperty('_isRouter')) {\n                    throw new Error(`You need to extend ${type.name}.original instead of ${type.name}.`);\n                }\n            }\n        };\n        router._isRouter = true;\n        router.prototype._routedType = type;\n        router.original = type;\n\n        this._mixinStateMachineMethods(router);\n\n        return router;\n    }\n\n    _mixinStateMachineMethods(router) {\n        // Mixin the state machine methods, so that we reuse the methods instead of re-creating them.\n        const names = Object.getOwnPropertyNames(StateMachine.prototype);\n        for (let i = 0, n = names.length; i < n; i++) {\n            const name = names[i];\n            if (name !== \"constructor\") {\n                const descriptor = Object.getOwnPropertyDescriptor(StateMachine.prototype, name);\n                Object.defineProperty(router.prototype, name, descriptor);\n            }\n        }\n    }\n\n    _addStateMemberDelegatorsToRouter() {\n        const members = this._getAllMemberNames();\n\n        members.forEach(member => {\n            this._addMemberRouter(member);\n        });\n    }\n\n    /**\n     * @note We are generating code because it yields much better performance.\n     */\n    _addMemberRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member);\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        let type = undefined;\n        descriptors.forEach(descriptor => {\n            if (descriptor) {\n                const descType = this._getDescriptorType(descriptor);\n                if (type && (type !== descType)) {\n                    console.warn(`[Lightning] Member ${member} in ${this._type.name} has inconsistent types.`);\n                    return;\n                }\n                type = descType;\n            }\n        });\n\n        switch(type) {\n            case \"method\":\n                this._addMethodRouter(member, descriptors, aliases);\n                break;\n            case \"getter\":\n                this._addGetterSetterRouters(member);\n                break;\n            case \"property\":\n                console.warn(\"[Lightning] Fixed properties are not supported; please use a getter instead!\")\n                break;\n        }\n    }\n\n    _getDescriptor(state, member, isValid = () => true) {\n        let type = state;\n        let curState = state;\n\n        do {\n            const descriptor = Object.getOwnPropertyDescriptor(type.prototype, member);\n            if (descriptor) {\n                if (isValid(descriptor)) {\n                    descriptor._source = curState;\n                    return descriptor;\n                }\n            }\n            type = Object.getPrototypeOf(type);\n            if (type && type.hasOwnProperty('__state')) {\n                curState = type;\n            }\n        } while(type && type.prototype);\n        return undefined;\n    }\n\n    _getDescriptorType(descriptor) {\n        if (descriptor.get || descriptor.set) {\n            return 'getter';\n        } else {\n            if (typeof descriptor.value === \"function\") {\n                return 'method';\n            } else {\n                return 'property';\n            }\n        }\n    }\n\n    static _supportsSpread() {\n        if (this.__supportsSpread === undefined) {\n            this.__supportsSpread = false;\n            try {\n                const func = new Function(\"return [].concat(...arguments);\");\n                func();\n                this.__supportsSpread = true;\n            } catch(e) {}\n        }\n        return this.__supportsSpread;\n    }\n\n    _addMethodRouter(member, descriptors, aliases) {\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        const supportsSpread = StateMachineType._supportsSpread();\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    if (supportsSpread) {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"](...arguments); else`);\n                    } else {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"].apply(this, arguments); else`);\n                    }\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            if (supportsSpread) {\n                code.push(`return this[\"${cur}\"](...arguments);`);\n            } else {\n                code.push(`return this[\"${cur}\"].apply(this, arguments);`);\n            }\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n\n        const descriptor = {value: router};\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _addGetterSetterRouters(member) {\n        const getter = this._getGetterRouter(member);\n        const setter = this._getSetterRouter(member);\n        const descriptor = {\n            get: getter,\n            set: setter\n        };\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _getGetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.get));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) return this[\"${cur}\"]; else`);\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`return this[\"${cur}\"];`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n        return router;\n    }\n\n    _getSetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.set));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) this[\"${cur}\"] = arg; else`);\n                } else {\n                    code.push(`if (i < ${i}) ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`this[\"${cur}\"] = arg;`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([\"arg\"], functionBody);\n        return router;\n    }\n\n    static getStateMemberAlias(path, member) {\n        return \"$\" + (path ? path + \".\" : \"\") + member;\n    }\n\n    _getAllMemberNames() {\n        const stateMap = this._stateMap;\n        const map = Object.keys(stateMap);\n        let members = new Set();\n        map.forEach(statePath => {\n            if (statePath === \"\") {\n                // Root state can be skipped: if the method only occurs in the root state, we don't need to re-delegate it based on state.\n                return;\n            }\n            const state = stateMap[statePath];\n            const names = this._getStateMemberNames(state);\n            names.forEach(name => {\n                members.add(name);\n            })\n        });\n        return [...members];\n    }\n\n    _getStateMemberNames(state) {\n        let type = state;\n        let members = new Set();\n        const isRoot = this._type === state;\n        do {\n            const names = this._getStateMemberNamesForType(type);\n            names.forEach(name => {\n                members.add(name)\n            });\n\n            type = Object.getPrototypeOf(type);\n        } while(type && type.prototype && (!type.hasOwnProperty(\"__state\") || isRoot));\n\n        return members;\n    }\n\n    _getStateMemberNamesForType(type) {\n        const memberNames = Object.getOwnPropertyNames(type.prototype);\n        return memberNames.filter(memberName => {\n            return (memberName !== \"constructor\") && !StateMachineType._isStateLocalMember(memberName);\n        });\n    }\n\n    static _isStateLocalMember(memberName) {\n        return (memberName === \"$enter\") || (memberName === \"$exit\");\n    }\n\n    getStateByPath(statePath) {\n        if (this._stateMap[statePath]) {\n            return this._stateMap[statePath];\n        }\n\n        // Search for closest match.\n        const parts = statePath.split(\".\");\n        while(parts.pop()) {\n            const statePath = parts.join(\".\");\n            if (this._stateMap[statePath]) {\n                return this._stateMap[statePath];\n            }\n        }\n    }\n\n    _getStateMap() {\n        if (!this._stateMap) {\n            this._stateMap = this._createStateMap();\n        }\n        return this._stateMap;\n    }\n\n    _createStateMap() {\n        const stateMap = {};\n        this._addState(this._type, null, \"\", stateMap);\n        return stateMap;\n    }\n\n    _addState(state, parentState, name, stateMap) {\n        state.__state = true;\n        state.__name = name;\n\n        this._addStaticStateProperty(state, parentState);\n\n        const parentPath = (parentState ? parentState.__path : \"\");\n        let path = (parentPath ? parentPath + \".\" : \"\") + name;\n        state.__path = path;\n        state.__level = parentState ? parentState.__level + 1 : 0;\n        state.__parent = parentState;\n        state.__index = Object.keys(stateMap).length;\n        stateMap[path] = state;\n\n        const states = state._states;\n        if (states) {\n            const isInheritedFromParent = (parentState && parentState._states === states);\n            if (!isInheritedFromParent) {\n                const subStates = state._states();\n                subStates.forEach(subState => {\n                    const stateName = StateMachineType._getStateName(subState);\n                    this._addState(subState, state, stateName, stateMap);\n                });\n            }\n        }\n    }\n\n    static _getStateName(state) {\n        const name = state.name;\n\n        const index = name.indexOf('$');\n        if (index > 0) {\n            // Strip off rollup name suffix.\n            return name.substr(0, index);\n        }\n\n        return name;\n    }\n\n    _addStaticStateProperty(state, parentState) {\n        if (parentState) {\n            const isClassStateLevel = parentState && !parentState.__parent;\n            if (isClassStateLevel) {\n                this._router[state.__name] = state;\n            } else {\n                parentState[state.__name] = state;\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Element from \"../tree/Element.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport StateMachine from \"./StateMachine.mjs\";\n\n/**\n * @extends StateMachine\n */\nexport default class Component extends Element {\n\n    constructor(stage, properties) {\n        super(stage);\n\n        // Encapsulate tags to prevent leaking.\n        this.tagRoot = true;\n\n        if (Utils.isObjectLiteral(properties)) {\n            Object.assign(this, properties);\n        }\n\n        this.__initialized = false;\n        this.__firstActive = false;\n        this.__firstEnable = false;\n\n        this.__signals = undefined;\n\n        this.__passSignals = undefined;\n\n        this.__construct();\n\n        // Quick-apply template.\n        const func = this.constructor.getTemplateFunc(this);\n        func.f(this, func.a);\n\n        this._build();\n    }\n\n    __start() {\n        StateMachine.setupStateMachine(this);\n        this._onStateChange = Component.prototype.__onStateChange;\n    }\n\n    get state() {\n        return this._getState();\n    }\n\n    __onStateChange() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    _refocus() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    static bindProp(name, func = null) {\n        return {__propertyBinding: true, __name: name, __func: func};\n    }\n\n    __bindProperty(propObj, targetObj, targetProp) {\n        // 1. find binding position: find object and property name to be bound\n        const obj = targetObj;\n        const prop = targetProp;\n        const propDependencies = Array.isArray(propObj.__name) ? propObj.__name : [propObj.__name];\n\n        // 2. create setters for every given dependency\n        for (let i = 0; i < propDependencies.length; i++) {\n            const propName = propDependencies[i];\n            const func = propObj.__func ? propObj.__func : (context) => context[propName];\n\n            if (!this.hasOwnProperty(propName)) {\n                this[`__prop_bindings_${propName}`] = [{__obj: obj, __prop: prop, __func: func}];\n                Object.defineProperty(this, propName, {\n                    set: (value) => {\n                        this[`__prop_${propName}`] = value;\n                        for (const {__obj, __prop, __func} of this[`__prop_bindings_${propName}`]) {\n                            __obj[__prop] = __func(this);\n                        }\n                    },\n                    get: () => this[`__prop_${propName}`]\n                });\n            } else {\n                this[`__prop_bindings_${propName}`].push({__obj: obj, __prop: prop, __func: func});\n            }\n        }\n    }\n\n    /**\n     * Returns a high-performance template patcher.\n     */\n    static getTemplateFunc(ctx) {\n        // We need a different template function per patch id.\n        const name = \"_templateFunc\";\n\n        // Be careful with class-based static inheritance.\n        const hasName = '__has' + name;\n        if (this[hasName] !== this) {\n            this[hasName] = this;\n            this[name] = this.parseTemplate(this._template(ctx));\n        }\n        return this[name];\n    }\n\n    static parseTemplate(obj) {\n        const context = {\n            loc: [],\n            store: [],\n            rid: 0\n        };\n\n        this.parseTemplateRec(obj, context, \"element\");\n\n        const code = context.loc.join(\";\\n\");\n        const f = new Function(\"element\", \"store\", code);\n        return {f: f, a: context.store};\n    }\n\n    static parseTemplateRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            let value = obj[key];\n            if (Utils.isUcChar(key.charCodeAt(0))) {\n                // Value must be expanded as well.\n                if (Utils.isObjectLiteral(value)) {\n                    // Ref.\n                    const childCursor = `r${key.replace(/[^a-z0-9]/gi, \"\") + context.rid}`;\n                    let type = value.type ? value.type : Element;\n                    if (type === Element) {\n                        loc.push(`var ${childCursor} = element.stage.createElement()`);\n                    } else {\n                        store.push(type);\n                        loc.push(`var ${childCursor} = new store[${store.length - 1}](${cursor}.stage)`);\n                    }\n                    loc.push(`${childCursor}.ref = \"${key}\"`);\n                    context.rid++;\n\n                    // Enter sub.\n                    this.parseTemplateRec(value, context, childCursor);\n\n                    loc.push(`${cursor}.childList.add(${childCursor})`);\n                } else if (Utils.isObject(value)) {\n                    // Dynamic assignment.\n                    store.push(value);\n                    loc.push(`${cursor}.childList.add(store[${store.length - 1}])`);\n                }\n            } else {\n                if (key === \"text\") {\n                    const propKey = cursor + \"__text\";\n                    loc.push(`var ${propKey} = ${cursor}.enableTextTexture()`);\n                    if (value.__propertyBinding === true) {\n                        // Allow binding entire objects to text property\n                        store.push(value);\n                        loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                    } else {\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else if (key === \"shader\" && Utils.isObjectLiteral(value)) {\n                    const shaderCursor = `${cursor}[\"shader\"]`\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    this.parsePropertyBindings(value, context, shaderCursor);\n                } else if (key === \"texture\" && Utils.isObjectLiteral(value)) {\n                    const propKey = cursor + \"__texture\";\n                    const type = value.type;\n                    if (type) {\n                        store.push(type);\n                        loc.push(`var ${propKey} = new store[${store.length - 1}](${cursor}.stage)`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                        loc.push(`${cursor}[\"${key}\"] = ${propKey}`);\n                    } else {\n                        loc.push(`${propKey} = ${cursor}.texture`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                } else {\n                    // Property;\n                    if (Utils.isNumber(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                    } else if (Utils.isBoolean(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                    } else if (Utils.isObject(value) || Array.isArray(value)) {\n                        // Dynamic assignment.\n                        // Because literal objects may contain dynamics, we store the full object.\n                        store.push(value);\n                        loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    } else {\n                        // String etc.\n                        loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                    }\n                }\n            }\n        });\n    }\n\n    static parseTemplatePropRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isNumber(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                } else if (Utils.isBoolean(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                } else if (Utils.isObject(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                } else if (Utils.isObject(value) || Array.isArray(value)) {\n                    // Dynamic assignment.\n                    // Because literal objects may contain dynamics, we store the full object.\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                } else {\n                    // String etc.\n                    loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                }\n            }\n        });\n    }\n\n    static parsePropertyBindings(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                }\n            }\n        });\n    }\n\n    _onSetup() {\n        if (!this.__initialized) {\n            this._setup();\n        }\n    }\n\n    _setup() {\n    }\n\n    _onAttach() {\n        if (!this.__initialized) {\n            this.__init();\n            this.__initialized = true;\n        }\n\n        this._attach();\n    }\n\n    _attach() {\n    }\n\n    _onDetach() {\n        this._detach();\n    }\n\n    _detach() {\n    }\n\n    _onEnabled() {\n        if (!this.__firstEnable) {\n            this._firstEnable();\n            this.__firstEnable = true;\n        }\n\n        this._enable();\n    }\n\n    _firstEnable() {\n    }\n\n    _enable() {\n    }\n\n    _onDisabled() {\n        this._disable();\n    }\n\n    _disable() {\n    }\n\n    _onActive() {\n        if (!this.__firstActive) {\n            this._firstActive();\n            this.__firstActive = true;\n        }\n\n        this._active();\n    }\n\n    _firstActive() {\n    }\n\n    _active() {\n    }\n\n    _onInactive() {\n        this._inactive();\n    }\n\n    _inactive() {\n    }\n\n    get application() {\n        return this.stage.application;\n    }\n\n    __construct() {\n        this._construct();\n    }\n\n    _construct() {\n    }\n\n    _build() {\n    }\n\n    __init() {\n        this._init();\n    }\n\n    _init() {\n    }\n\n    _focus(newTarget, prevTarget) {\n    }\n\n    _unfocus(newTarget) {\n    }\n\n    _focusChange(target, newTarget) {\n    }\n\n    _getFocused() {\n        // Override to delegate focus to child components.\n        return this;\n    }\n\n    _setFocusSettings(settings) {\n        // Override to add custom settings. See Application._handleFocusSettings().\n    }\n\n    _handleFocusSettings(settings) {\n        // Override to react on custom settings. See Application._handleFocusSettings().\n    }\n\n    static _template() {\n        return {};\n    }\n\n    hasFinalFocus() {\n        let path = this.application._focusPath;\n        return path && path.length && path[path.length - 1] === this;\n    }\n\n    hasFocus() {\n        let path = this.application._focusPath;\n        return path && (path.indexOf(this) >= 0);\n    }\n\n    get cparent() {\n        return Component.getParent(this);\n    }\n\n    seekAncestorByType(type) {\n        let c = this.cparent;\n        while (c) {\n            if (c.constructor === type) {\n                return c;\n            }\n            c = c.cparent;\n        }\n    }\n\n    getSharedAncestorComponent(element) {\n        let ancestor = this.getSharedAncestor(element);\n        while (ancestor && !ancestor.isComponent) {\n            ancestor = ancestor.parent;\n        }\n        return ancestor;\n    }\n\n    get signals() {\n        return this.__signals;\n    }\n\n    set signals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        this.__signals = v;\n    }\n\n    set alterSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__signals) {\n            this.__signals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__signals[key];\n            } else {\n                this.__signals[key] = v;\n            }\n        }\n    }\n\n    get passSignals() {\n        return this.__passSignals || {};\n    }\n\n    set passSignals(v) {\n        this.__passSignals = Object.assign(this.__passSignals || {}, v);\n    }\n\n    set alterPassSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__passSignals) {\n            this.__passSignals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__passSignals[key];\n            } else {\n                this.__passSignals[key] = v;\n            }\n        }\n    }\n\n    /**\n     * Signals the parent of the specified event.\n     * A parent/ancestor that wishes to handle the signal should set the 'signals' property on this component.\n     * @param {string} event\n     * @param {...*} args\n     */\n    signal(event, ...args) {\n        return this._signal(event, args);\n    }\n\n    _signal(event, args) {\n        const signalParent = this._getParentSignalHandler();\n        if (signalParent) {\n            if (this.__signals) {\n                let fireEvent = this.__signals[event];\n                if (fireEvent === false) {\n                    // Ignore event.\n                    return;\n                }\n                if (fireEvent) {\n                    if (fireEvent === true) {\n                        fireEvent = event;\n                    }\n \n                    if (Utils.isFunction(fireEvent)) {\n                        return fireEvent(...args);\n                    }\n\n                    if (signalParent._hasMethod(fireEvent)) {\n                        return signalParent[fireEvent](...args);\n                    }\n                }\n            }\n\n            let passSignal = (this.__passSignals && this.__passSignals[event]);\n            if (passSignal) {\n                // Bubble up.\n                if (passSignal && passSignal !== true) {\n                    // Replace signal name.\n                    event = passSignal;\n                }\n\n                return signalParent._signal(event, args);\n            }\n        }\n    }\n\n    _getParentSignalHandler() {\n        return this.cparent ? this.cparent._getSignalHandler() : null;\n    }\n\n    _getSignalHandler() {\n        if (this._signalProxy) {\n            return this.cparent ? this.cparent._getSignalHandler() : null;\n        }\n        return this;\n    }\n\n    get _signalProxy() {\n        return false;\n    }\n\n    fireAncestors(name, ...args) {\n        if (!name.startsWith('$')) {\n            throw new Error(\"Ancestor event name must be prefixed by dollar sign.\");\n        }\n\n        const parent = this._getParentSignalHandler();\n        if (parent) {\n            return parent._doFireAncestors(name, args);\n        }\n    }\n\n    _doFireAncestors(name, args) {\n        if (this._hasMethod(name)) {\n            return this.fire(name, ...args);\n        } else {\n            const signalParent = this._getParentSignalHandler();\n            if (signalParent) {\n                return signalParent._doFireAncestors(name, args);\n            }\n        }\n    }\n\n    static collectSubComponents(subs, element) {\n        if (element.hasChildren()) {\n            const childList = element.__childList;\n            for (let i = 0, n = childList.length; i < n; i++) {\n                const child = childList.getAt(i);\n                if (child.isComponent) {\n                    subs.push(child);\n                } else {\n                    Component.collectSubComponents(subs, child);\n                }\n            }\n        }\n    }\n\n    static getComponent(element) {\n        let parent = element;\n        while (parent && !parent.isComponent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n\n    static getParent(element) {\n        return Component.getComponent(element.parent);\n    }\n}\n\nComponent.prototype.isComponent = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreQuadList {\n\n    constructor(ctx) {\n\n        this.ctx = ctx;\n\n        this.quadTextures = [];\n\n        this.quadElements = [];\n    }\n\n    get length() {\n        return this.quadTextures.length;\n    }\n\n    reset() {\n        this.quadTextures = [];\n        this.quadElements = [];\n        this.dataLength = 0;\n    }\n\n    getElement(index) {\n        return this.quadElements[index]._element;\n    }\n\n    getElementCore(index) {\n        return this.quadElements[index];\n    }\n\n    getTexture(index) {\n        return this.quadTextures[index];\n    }\n\n    getTextureWidth(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.w) {\n            // Render texture;\n            return nativeTexture.w;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.w;\n        }\n    }\n\n    getTextureHeight(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.h) {\n            // Render texture;\n            return nativeTexture.h;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class WebGLCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        // Allocate a fairly big chunk of memory that should be enough to support ~100000 (default) quads.\n        // We do not (want to) handle memory overflow.\n        const byteSize = ctx.stage.getOption('bufferMemory');\n\n        this.dataLength = 0;\n\n        this.data = new ArrayBuffer(byteSize);\n        this.floats = new Float32Array(this.data);\n        this.uints = new Uint32Array(this.data);\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return index * 80;\n    }\n\n    getQuadContents() {\n        // Debug: log contents of quad buffer.\n        let floats = this.floats;\n        let uints = this.uints;\n        let lines = [];\n        for (let i = 1; i <= this.length; i++) {\n            let str = 'entry ' + i + ': ';\n            for (let j = 0; j < 4; j++) {\n                let b = i * 20 + j * 4;\n                str += floats[b] + ',' + floats[b+1] + ':' + floats[b+2] + ',' + floats[b+3] + '[' + uints[b+4].toString(16) + '] ';\n            }\n            lines.push(str);\n        }\n\n        return lines;\n    }\n\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n\n        this.ctx = ctx;\n        this.shader = shader;\n        this.shaderOwner = shaderOwner;\n        this.renderTextureInfo = renderTextureInfo;\n        this.scissor = scissor;\n        this.index = index;\n        this.length = 0;\n\n    }\n\n    get quads() {\n        return this.ctx.renderState.quads;\n    }\n\n    getTexture(index) {\n        return this.quads.getTexture(this.index + index);\n    }\n\n    getElementCore(index) {\n        return this.quads.getElementCore(this.index + index);\n    }\n\n    getElement(index) {\n        return this.quads.getElement(this.index + index);\n    }\n\n    getElementWidth(index) {\n        return this.getElement(index).renderWidth;\n    }\n\n    getElementHeight(index) {\n        return this.getElement(index).renderHeight;\n    }\n\n    getTextureWidth(index) {\n        return this.quads.getTextureWidth(this.index + index);\n    }\n\n    getTextureHeight(index) {\n        return this.quads.getTextureHeight(this.index + index);\n    }\n\n    getRenderWidth() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.w;\n        } else {\n            return this.ctx.stage.w;\n        }\n    }\n\n    getRenderHeight() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.h;\n        } else {\n            return this.ctx.stage.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class WebGLCoreQuadOperation extends CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        super(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n\n        this.extraAttribsDataByteOffset = 0;\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return this.quads.getAttribsDataByteOffset(this.index + index);\n    }\n\n    /**\n     * Returns the relative pixel coordinates in the shader owner to gl position coordinates in the render texture.\n     * @param x\n     * @param y\n     * @return {number[]}\n     */\n    getNormalRenderTextureCoords(x, y) {\n        let coords = this.shaderOwner.getRenderTextureCoords(x, y);\n        coords[0] /= this.getRenderWidth();\n        coords[1] /= this.getRenderHeight();\n        coords[0] = coords[0] * 2 - 1;\n        coords[1] = 1 - coords[1] * 2;\n        return coords;\n    }\n\n    getProjection() {\n        if (this.renderTextureInfo === null) {\n            return this.ctx.renderExec._projection;\n        } else {\n            return this.renderTextureInfo.nativeTexture.projection;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreRenderExecutor {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.renderState = ctx.renderState;\n\n        this.gl = this.ctx.stage.gl;\n    }\n\n    destroy() {\n        this.ctx = null;\n        this.renderState = null;\n        this.gl = null;\n\n        delete this.ctx;\n        delete this.renderState;\n        delete this.gl;\n    }\n\n    _reset() {\n        this._bindRenderTexture(null);\n        this._setScissor(null);\n        this._clearRenderTexture();\n    }\n\n    execute() {\n        this._reset();\n\n        let qops = this.renderState.quadOperations;\n\n        let i = 0, j = 0, n = qops.length;\n        while (i < n) {\n            this._processQuadOperation(qops[i]);\n            i++;\n        }\n    }\n\n    _processQuadOperation(quadOperation) {\n        if (quadOperation.renderTextureInfo && quadOperation.renderTextureInfo.ignore) {\n            // Ignore quad operations when we are 're-using' another texture as the render texture result.\n            return;\n        }\n\n        this._setupQuadOperation(quadOperation);\n        this._execQuadOperation(quadOperation);\n\n    }\n\n    _setupQuadOperation(quadOperation) {\n    }\n\n    _execQuadOperation(op) {\n        // Set render texture.\n        let nativeTexture = op.renderTextureInfo ? op.renderTextureInfo.nativeTexture : null;\n\n        if (this._renderTexture !== nativeTexture) {\n            this._bindRenderTexture(nativeTexture);\n        }\n\n        if (op.renderTextureInfo && !op.renderTextureInfo.cleared) {\n            this._setScissor(null);\n            this._clearRenderTexture();\n            op.renderTextureInfo.cleared = true;\n            this._setScissor(op.scissor);\n        } else {\n            this._setScissor(op.scissor);\n        }\n\n        this._renderQuadOperation(op);\n    }\n\n    _renderQuadOperation(op) {\n    }\n\n    _bindRenderTexture(renderTexture) {\n        this._renderTexture = renderTexture;\n    }\n\n    _clearRenderTexture(renderTexture) {\n    }\n\n    _setScissor(area) {\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\n\nexport default class WebGLCoreRenderExecutor extends CoreRenderExecutor {\n\n    constructor(ctx) {\n        super(ctx)\n\n        this.gl = this.ctx.stage.gl;\n\n        this.init();\n    }\n\n    init() {\n        let gl = this.gl;\n\n        // Create new sharable buffer for params.\n        this._attribsBuffer = gl.createBuffer();\n\n        let maxQuads = Math.floor(this.renderState.quads.data.byteLength / 80);\n\n        // Init webgl arrays.\n        let allIndices = new Uint16Array(maxQuads * 6);\n\n        // fill the indices with the quads to draw.\n        for (let i = 0, j = 0; i < maxQuads; i += 6, j += 4) {\n            allIndices[i] = j;\n            allIndices[i + 1] = j + 1;\n            allIndices[i + 2] = j + 2;\n            allIndices[i + 3] = j;\n            allIndices[i + 4] = j + 2;\n            allIndices[i + 5] = j + 3;\n        }\n\n        // The quads buffer can be (re)used to draw a range of quads.\n        this._quadsBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, allIndices, gl.STATIC_DRAW);\n\n        // The matrix that causes the [0,0 - W,H] box to map to [-1,-1 - 1,1] in the end results.\n        this._projection = new Float32Array([2/this.ctx.stage.coordsWidth, -2/this.ctx.stage.coordsHeight]);\n\n    }\n\n    destroy() {\n        super.destroy();\n        this.gl.deleteBuffer(this._attribsBuffer);\n        this.gl.deleteBuffer(this._quadsBuffer);\n\n        this.gl = null;\n        delete this.gl;\n    }\n\n    _reset() {\n        super._reset();\n\n        let gl = this.gl;\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n        gl.disable(gl.DEPTH_TEST);\n\n        this._stopShaderProgram();\n        this._setupBuffers();\n    }\n\n    _setupBuffers() {\n        let gl = this.gl;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        let element = new Float32Array(this.renderState.quads.data, 0, this.renderState.quads.dataLength);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._attribsBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, element, gl.DYNAMIC_DRAW);\n    }\n\n    _setupQuadOperation(quadOperation) {\n        super._setupQuadOperation(quadOperation);\n        this._useShaderProgram(quadOperation.shader, quadOperation);\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            shader.beforeDraw(op);\n            shader.draw(op);\n            shader.afterDraw(op);\n        }\n    }\n\n    /**\n     * @param {WebGLShader} shader;\n     * @param {CoreQuadOperation} operation;\n     */\n    _useShaderProgram(shader, operation) {\n        if (!shader.hasSameProgram(this._currentShaderProgram)) {\n            if (this._currentShaderProgram) {\n                this._currentShaderProgram.stopProgram();\n            }\n            shader.useProgram();\n            this._currentShaderProgram = shader;\n        }\n        shader.setupUniforms(operation);\n    }\n\n    _stopShaderProgram() {\n        if (this._currentShaderProgram) {\n            // The currently used shader program should be stopped gracefully.\n            this._currentShaderProgram.stopProgram();\n            this._currentShaderProgram = null;\n        }\n    }\n\n    _bindRenderTexture(renderTexture) {\n        super._bindRenderTexture(renderTexture);\n\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            gl.viewport(0,0,this.ctx.stage.w,this.ctx.stage.h);\n        } else {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this._renderTexture.framebuffer);\n            gl.viewport(0,0,this._renderTexture.w, this._renderTexture.h);\n        }\n    }\n\n    _clearRenderTexture() {\n        super._clearRenderTexture();\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            let glClearColor = this.ctx.stage.getClearColor();\n            if (glClearColor) {\n                gl.clearColor(glClearColor[0] * glClearColor[3], glClearColor[1] * glClearColor[3], glClearColor[2] * glClearColor[3], glClearColor[3]);\n                gl.clear(gl.COLOR_BUFFER_BIT);\n            }\n        } else {\n            // Clear texture.\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n    }\n\n    _setScissor(area) {\n        super._setScissor(area);\n\n        if (this._scissor === area) {\n            return;\n        }\n        this._scissor = area;\n\n        let gl = this.gl;\n        if (!area) {\n            gl.disable(gl.SCISSOR_TEST);\n        } else {\n            gl.enable(gl.SCISSOR_TEST);\n            let precision = this.ctx.stage.getRenderPrecision();\n            let y = area[1];\n            if (this._renderTexture === null) {\n                // Flip.\n                y = (this.ctx.stage.h / precision - (area[1] + area[3]));\n            }\n            gl.scissor(Math.round(area[0] * precision), Math.round(y * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreRenderState {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.stage = ctx.stage;\n\n        this.defaultShader = this.stage.renderer.getDefaultShader(ctx);\n\n        this.renderer = ctx.stage.renderer;\n\n        this.quads = this.renderer.createCoreQuadList(ctx);\n\n    }\n\n    reset() {\n        this._renderTextureInfo = null;\n\n        this._scissor = null;\n\n        this._shader = null;\n\n        this._shaderOwner = null;\n\n        this._realShader = null;\n\n        this._check = false;\n\n        this.quadOperations = [];\n\n        this._texturizer = null;\n\n        this._texturizerTemporary = false;\n\n        this._quadOperation = null;\n\n        this.quads.reset();\n\n        this._temporaryTexturizers = [];\n        \n        this._isCachingTexturizer = false;\n\n    }\n\n    get length() {\n        return this.quads.quadTextures.length;\n    }\n\n    setShader(shader, owner) {\n        if (this._shaderOwner !== owner || this._realShader !== shader) {\n            // Same shader owner: active shader is also the same.\n            // Prevent any shader usage to save performance.\n\n            this._realShader = shader;\n\n            if (shader.useDefault()) {\n                // Use the default shader when possible to prevent unnecessary program changes.\n                shader = this.defaultShader;\n            }\n            if (this._shader !== shader || this._shaderOwner !== owner) {\n                this._shader = shader;\n                this._shaderOwner = owner;\n                this._check = true;\n            }\n        }\n    }\n\n    get renderTextureInfo() {\n        return this._renderTextureInfo;\n    }\n\n    setScissor(area) {\n        if (this._scissor !== area) {\n            if (area) {\n                this._scissor = area;\n            } else {\n                this._scissor = null;\n            }\n            this._check = true;\n        }\n    }\n\n    getScissor() {\n        return this._scissor;\n    }\n\n    setRenderTextureInfo(renderTextureInfo) {\n        if (this._renderTextureInfo !== renderTextureInfo) {\n            this._renderTextureInfo = renderTextureInfo;\n            this._scissor = null;\n            this._check = true;\n        }\n    }\n\n    /**\n     * Sets the texturizer to be drawn during subsequent addQuads.\n     * @param {ElementTexturizer} texturizer\n     */\n    setTexturizer(texturizer, cache = false) {\n        this._texturizer = texturizer;\n        this._cacheTexturizer = cache;\n    }\n\n    set isCachingTexturizer(v) {\n        this._isCachingTexturizer = v;\n    }\n\n    get isCachingTexturizer() {\n        return this._isCachingTexturizer;\n    }\n\n    addQuad(elementCore) {\n        if (!this._quadOperation) {\n            this._createQuadOperation();\n        } else if (this._check && this._hasChanges()) {\n            this._finishQuadOperation();\n            this._check = false;\n        }\n\n        let nativeTexture = null;\n        if (this._texturizer) {\n            nativeTexture = this._texturizer.getResultTexture();\n\n            if (!this._cacheTexturizer) {\n                // We can release the temporary texture immediately after finalizing this quad operation.\n                this._temporaryTexturizers.push(this._texturizer);\n            }\n        }\n\n        if (!nativeTexture) {\n            nativeTexture = elementCore._displayedTextureSource.nativeTexture;\n        }\n\n        if (this._renderTextureInfo) {\n            if (this._shader === this.defaultShader && this._renderTextureInfo.empty) {\n                // The texture might be reusable under some conditions. We will check them in ElementCore.renderer.\n                this._renderTextureInfo.nativeTexture = nativeTexture;\n                this._renderTextureInfo.offset = this.length;\n            } else {\n                // It is not possible to reuse another texture when there is more than one quad.\n                this._renderTextureInfo.nativeTexture = null;\n            }\n            this._renderTextureInfo.empty = false;\n        }\n\n        this.quads.quadTextures.push(nativeTexture);\n        this.quads.quadElements.push(elementCore);\n\n        this._quadOperation.length++;\n\n        this.renderer.addQuad(this, this.quads, this.length - 1)\n    }\n\n    finishedRenderTexture() {\n        if (this._renderTextureInfo.nativeTexture) {\n            // There was only one texture drawn in this render texture.\n            // Check if we can reuse it so that we can optimize out an unnecessary render texture operation.\n            // (it should exactly span this render texture).\n            if (!this._isRenderTextureReusable()) {\n                this._renderTextureInfo.nativeTexture = null;\n            }\n        }\n    }\n\n    _isRenderTextureReusable() {\n        const offset = this._renderTextureInfo.offset;\n        return (this.quads.quadTextures[offset].w === this._renderTextureInfo.w) &&\n            (this.quads.quadTextures[offset].h === this._renderTextureInfo.h) &&\n            this.renderer.isRenderTextureReusable(this, this._renderTextureInfo)\n    }\n\n    _hasChanges() {\n        let q = this._quadOperation;\n        if (this._shader !== q.shader) return true;\n        if (this._shaderOwner !== q.shaderOwner) return true;\n        if (this._renderTextureInfo !== q.renderTextureInfo) return true;\n        if (this._scissor !== q.scissor) {\n            if ((this._scissor[0] !== q.scissor[0]) || (this._scissor[1] !== q.scissor[1]) || (this._scissor[2] !== q.scissor[2]) || (this._scissor[3] !== q.scissor[3])) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    _finishQuadOperation(create = true) {\n        if (this._quadOperation) {\n            if (this._quadOperation.length || this._shader.addEmpty()) {\n                if (!this._quadOperation.scissor || ((this._quadOperation.scissor[2] > 0) && (this._quadOperation.scissor[3] > 0))) {\n                    // Ignore empty clipping regions.\n                    this.quadOperations.push(this._quadOperation);\n                }\n            }\n\n            if (this._temporaryTexturizers.length) {\n                for (let i = 0, n = this._temporaryTexturizers.length; i < n; i++) {\n                    // We can now reuse these render-to-textures in subsequent stages.\n                    // Huge performance benefit when filtering (fast blur).\n                    this._temporaryTexturizers[i].releaseRenderTexture();\n                }\n                this._temporaryTexturizers = [];\n            }\n\n            this._quadOperation = null;\n        }\n\n        if (create) {\n            this._createQuadOperation();\n        }\n    }\n\n    _createQuadOperation() {\n        this._quadOperation = this.renderer.createCoreQuadOperation(\n            this.ctx,\n            this._shader,\n            this._shaderOwner,\n            this._renderTextureInfo,\n            this._scissor,\n            this.length\n        );\n        this._check = false;\n    }\n\n    finish() {\n        if (this._quadOperation) {\n            // Add remaining.\n            this._finishQuadOperation(false);\n        }\n\n        this.renderer.finishRenderState(this);\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Base functionality for shader setup/destroy.\n */\nexport default class WebGLShaderProgram {\n\n    constructor(vertexShaderSource, fragmentShaderSource) {\n\n        this.vertexShaderSource = vertexShaderSource;\n        this.fragmentShaderSource = fragmentShaderSource;\n\n        this._program = null;\n        this.gl = null;\n\n        this._uniformLocations = new Map();\n        this._attributeLocations = new Map();\n\n        this._currentUniformValues = {};\n    }\n\n    compile(gl) {\n        if (this._program) return;\n\n        this.gl = gl;\n\n        this._program = gl.createProgram();\n\n        let glVertShader = this._glCompile(gl.VERTEX_SHADER, this.vertexShaderSource);\n        let glFragShader = this._glCompile(gl.FRAGMENT_SHADER, this.fragmentShaderSource);\n\n        gl.attachShader(this._program, glVertShader);\n        gl.attachShader(this._program, glFragShader);\n        gl.linkProgram(this._program);\n\n        // if linking fails, then log and cleanup\n        if (!gl.getProgramParameter(this._program, gl.LINK_STATUS)) {\n            console.error('[Lightning] Error: Could not initialize shader.');\n            console.error('[Lightning] gl.VALIDATE_STATUS', gl.getProgramParameter(this._program, gl.VALIDATE_STATUS));\n            console.error('[Lightning] gl.getError()', gl.getError());\n\n            // if there is a program info log, log it\n            if (gl.getProgramInfoLog(this._program) !== '') {\n                console.warn('[Lightning] Warning: gl.getProgramInfoLog()', gl.getProgramInfoLog(this._program));\n            }\n\n            gl.deleteProgram(this._program);\n            this._program = null;\n        }\n\n        // clean up some shaders\n        gl.deleteShader(glVertShader);\n        gl.deleteShader(glFragShader);\n    }\n\n    _glCompile(type, src) {\n        let shader = this.gl.createShader(type);\n\n        this.gl.shaderSource(shader, src);\n        this.gl.compileShader(shader);\n\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n            console.error('[Lightning]', this.constructor.name, 'Type: ' + (type === this.gl.VERTEX_SHADER ? 'vertex shader' : 'fragment shader') );\n            console.error('[Lightning]', this.gl.getShaderInfoLog(shader));\n            let idx = 0;\n            console.error('[Lightning]', \"========== source ==========\\n\" + src.split(\"\\n\").map(line => \"\" + (++idx) + \": \" + line).join(\"\\n\"));\n            return null;\n        }\n\n        return shader;\n    }\n\n    getUniformLocation(name) {\n        let location = this._uniformLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getUniformLocation(this._program, name);\n            this._uniformLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    getAttribLocation(name) {\n        let location = this._attributeLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getAttribLocation(this._program, name);\n            this._attributeLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    destroy() {\n        if (this._program) {\n            this.gl.deleteProgram(this._program);\n        }\n\n        this._attributeLocations = null;\n        this._currentUniformValues = null;\n        this.fragmentShaderSource = null;\n        this._program = null;\n        this.gl = null;\n        this._uniformLocations = null;\n        this.vertexShaderSource = null;  \n\n        delete this.vertexShaderSource;\n        delete this._program;        \n        delete this._currentUniformValues;\n        delete this.fragmentShaderSource;\n        delete this.gl;\n        delete this._uniformLocations;\n        delete this._attributeLocations;\n\n    }\n\n    get glProgram() {\n        return this._program;\n    }\n\n    get compiled() {\n        return !!this._program;\n    }\n\n    _valueEquals(v1, v2) {\n        // Uniform value is either a typed array or a numeric value.\n        if (v1.length && v2.length) {\n            for (let i = 0, n = v1.length; i < n; i++) {\n                if (v1[i] !== v2[i]) return false;\n            }\n            return true;\n        } else {\n            return (v1 === v2);\n        }\n    }\n\n    _valueClone(v) {\n        if (v.length) {\n            return v.slice(0);\n        } else {\n            return v;\n        }\n    }\n\n    setUniformValue(name, value, glFunction) {\n        let v = this._currentUniformValues[name];\n        if (v === undefined || !this._valueEquals(v, value)) {\n            let clonedValue = this._valueClone(value);\n            this._currentUniformValues[name] = clonedValue;\n\n            let loc = this.getUniformLocation(name);\n            if (loc) {\n                let isMatrix = (glFunction === this.gl.uniformMatrix2fv || glFunction === this.gl.uniformMatrix3fv || glFunction === this.gl.uniformMatrix4fv);\n                if (isMatrix) {\n                    glFunction.call(this.gl, loc, false, clonedValue);\n                } else {\n                    glFunction.call(this.gl, loc, clonedValue);\n                }\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShaderProgram from \"./WebGLShaderProgram.mjs\";\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class WebGLShader extends Shader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        const stage = ctx.stage;\n\n        this._program = stage.renderer.shaderPrograms.get(this.constructor);\n        if (!this._program) {\n            this._program = new WebGLShaderProgram(this.constructor.vertexShaderSource, this.constructor.fragmentShaderSource);\n\n            // Let the vbo context perform garbage collection.\n            stage.renderer.shaderPrograms.set(this.constructor, this._program);\n        }\n\n        this.gl = stage.gl;\n    }\n\n    get glProgram() {\n        return this._program.glProgram;\n    }\n\n    _init() {\n        if (!this._initialized) {\n            this.initialize();\n            this._initialized = true;\n        }\n    }\n\n    initialize() {\n        this._program.compile(this.gl);\n    }\n\n    get initialized() {\n        return this._initialized;\n    }\n\n    _uniform(name) {\n        return this._program.getUniformLocation(name);\n    }\n\n    _attrib(name) {\n        return this._program.getAttribLocation(name);\n    }\n\n    _setUniform(name, value, glFunction) {\n        this._program.setUniformValue(name, value, glFunction);\n    }\n\n    useProgram() {\n        this._init();\n        this.gl.useProgram(this.glProgram);\n        this.beforeUsage();\n        this.enableAttribs();\n    }\n\n    stopProgram() {\n        this.afterUsage();\n        this.disableAttribs();\n    }\n\n    hasSameProgram(other) {\n        // For performance reasons, we first check for identical references.\n        return (other && ((other === this) || (other._program === this._program)));\n    }\n\n    beforeUsage() {\n        // Override to set settings other than the default settings (blend mode etc).\n    }\n\n    afterUsage() {\n        // All settings changed in beforeUsage should be reset here.\n    }\n\n    enableAttribs() {\n\n    }\n\n    disableAttribs() {\n\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 0;\n    }\n\n    getVertexAttribPointerOffset(operation) {\n        return operation.extraAttribsDataByteOffset - operation.index * 4 * this.getExtraAttribBytesPerVertex();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Set extra attrib data in in operation.quads.data/floats/uints, starting from\n        // operation.extraAttribsBufferByteOffset.\n    }\n\n    setupUniforms(operation) {\n        // Set all shader-specific uniforms.\n        // Notice that all uniforms should be set, even if they have not been changed within this shader instance.\n        // The uniforms are shared by all shaders that have the same type (and shader program).\n    }\n\n    _getProjection(operation) {\n        return operation.getProjection();\n    }\n\n    getFlipY(operation) {\n        return this._getProjection(operation)[1] < 0;\n    }\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n    cleanup() {\n        this._initialized = false;\n        // Program takes little resources, so it is only destroyed when the full stage is destroyed.\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../WebGLShader.mjs\";\n\nexport default class DefaultShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            \n            gl.bindTexture(gl.TEXTURE_2D, glTexture);\n            gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n        }\n    }\n\n}\n\nDefaultShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDefaultShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Renderer {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._defaultShader = undefined;\n    }\n\n    gc(aggressive) {\n    }\n\n    destroy() {\n    }\n\n    getDefaultShader(ctx = this.stage.ctx) {\n        if (!this._defaultShader) {\n            this._defaultShader = this._createDefaultShader(ctx);\n        }\n        return this._defaultShader;\n    }\n\n    _createDefaultShader(ctx) {\n    }\n\n    isValidShaderType(shaderType) {\n        return (shaderType.prototype instanceof this._getShaderBaseType());\n    }\n\n    createShader(ctx, settings) {\n        const shaderType = settings.type;\n        // If shader type is not correct, use a different platform.\n        if (!this.isValidShaderType(shaderType)) {\n            const convertedShaderType = this._getShaderAlternative(shaderType);\n            if (!convertedShaderType) {\n                console.warn(\"[Lightning] Shader has no implementation for render target: \" + shaderType.name);\n                return this._createDefaultShader(ctx);\n            }\n            return new convertedShaderType(ctx);\n        } else {\n            const shader = new shaderType(ctx);\n            Base.patchObject(this, settings);\n            return shader;\n        }\n    }\n\n    _getShaderBaseType() {\n    }\n\n    _getShaderAlternative(shaderType) {\n        return this.getDefaultShader();\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        console.warn('[Lightning] copyRenderTexture not supported by renderer');\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport WebGLCoreQuadList from \"./WebGLCoreQuadList.mjs\";\nimport WebGLCoreQuadOperation from \"./WebGLCoreQuadOperation.mjs\";\nimport WebGLCoreRenderExecutor from \"./WebGLCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport WebGLShader from \"./WebGLShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\n\nexport default class WebGLRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n        this.shaderPrograms = new Map();\n        this._compressedTextureExtensions = {\n            astc: stage.gl.getExtension('WEBGL_compressed_texture_astc'),\n            etc1: stage.gl.getExtension('WEBGL_compressed_texture_etc1'),\n            s3tc: stage.gl.getExtension('WEBGL_compressed_texture_s3tc'),\n            pvrtc: stage.gl.getExtension('WEBGL_compressed_texture_pvrtc'),\n        }\n    }\n\n    getCompressedTextureExtensions() {\n        return this._compressedTextureExtensions\n    }\n\n    destroy() {\n        this.shaderPrograms.forEach(shaderProgram => shaderProgram.destroy());\n\n        this.shaderPrograms = null;\n        this._compressedTextureExtensions = null;\n\n        delete this.shaderPrograms;\n        delete this._compressedTextureExtensions;\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return WebGLShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getWebGL && shaderType.getWebGL();\n    }\n\n    createCoreQuadList(ctx) {\n        return new WebGLCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new WebGLCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new WebGLCoreRenderExecutor(ctx);\n    }\n\n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const gl = this.stage.gl;\n        const glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, pw, ph, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        glTexture.params = {};\n        glTexture.params[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        glTexture.params[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n        glTexture.options = { format: gl.RGBA, internalFormat: gl.RGBA, type: gl.UNSIGNED_BYTE };\n\n        // We need a specific framebuffer for every render texture.\n        glTexture.framebuffer = gl.createFramebuffer();\n        glTexture.projection = new Float32Array([2 / w, 2 / h]);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, glTexture.framebuffer);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, glTexture, 0);\n\n        return glTexture;\n    }\n\n    freeRenderTexture(glTexture) {\n        let gl = this.stage.gl;\n        gl.deleteFramebuffer(glTexture.framebuffer);\n        gl.deleteTexture(glTexture);\n    }\n\n    _getBytesPerPixel(fmt, type) {\n        const gl = this.stage.gl;\n\n        if (fmt === gl.RGBA) {\n            switch (type) {\n                case gl.UNSIGNED_BYTE:\n                    return 4;\n\n                case gl.UNSIGNED_SHORT_4_4_4_4:\n                    return 2;\n\n                case gl.UNSIGNED_SHORT_5_5_5_1:\n                    return 2;\n\n                default:\n                    throw new Error('Invalid type specified for GL_RGBA format');\n            }\n        }\n        else if (fmt === gl.RGB) {\n            switch (type) {\n                case gl.UNSIGNED_BYTE:\n                    return 3;\n\n                case gl.UNSIGNED_BYTE_5_6_5:\n                    return 2;\n\n                default:\n                    throw new Error('Invalid type specified for GL_RGB format');\n            }\n        }\n        else {\n            throw new Error('Invalid format specified in call to _getBytesPerPixel()');\n        }\n    }\n\n    uploadTextureSource(textureSource, options) {\n        const gl = this.stage.gl;\n\n        const source = options.source;\n        let compressed = false;\n        if (options.renderInfo) {\n            compressed = options.renderInfo.compressed || false\n        }\n\n        const format = {\n            premultiplyAlpha: true,\n            hasAlpha: true\n        };\n\n        if (options && options.hasOwnProperty('premultiplyAlpha')) {\n            format.premultiplyAlpha = options.premultiplyAlpha;\n        }\n\n        if (options && options.hasOwnProperty('flipBlueRed')) {\n            format.flipBlueRed = options.flipBlueRed;\n        }\n\n        if (options && options.hasOwnProperty('hasAlpha')) {\n            format.hasAlpha = options.hasAlpha;\n        }\n\n        if (!format.hasAlpha) {\n            format.premultiplyAlpha = false;\n        }\n\n        format.texParams = options.texParams || {}\n        format.texOptions = options.texOptions || {}\n\n        let glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, format.premultiplyAlpha);\n\n        if (Utils.isNode) {\n            gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, !!format.flipBlueRed);\n        }\n\n        const texParams = format.texParams;\n        if (!texParams[gl.TEXTURE_MAG_FILTER]) texParams[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_MIN_FILTER]) texParams[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_WRAP_S]) texParams[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        if (!texParams[gl.TEXTURE_WRAP_T]) texParams[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n\n        Object.keys(texParams).forEach(key => {\n            const value = texParams[key];\n            gl.texParameteri(gl.TEXTURE_2D, parseInt(key), value);\n        });\n\n        if (compressed) {\n            this.stage.platform.uploadCompressedGlTexture(gl, textureSource, source);\n            return glTexture;\n        }\n         \n        const texOptions = format.texOptions;\n        texOptions.format = texOptions.format || (format.hasAlpha ? gl.RGBA : gl.RGB);\n        texOptions.type = texOptions.type || gl.UNSIGNED_BYTE;\n        texOptions.internalFormat = texOptions.internalFormat || texOptions.format;\n        if (options && options.imageRef) {\n            texOptions.imageRef = options.imageRef;\n        }\n        \n        this.stage.platform.uploadGlTexture(gl, textureSource, source, texOptions);\n        \n        glTexture.params = Utils.cloneObjShallow(texParams);\n        glTexture.options = Utils.cloneObjShallow(texOptions);\n\n        // calculate bytes per pixel for vram usage tracking\n        glTexture.bytesPerPixel = this._getBytesPerPixel(texOptions.format, texOptions.type);\n\n        return glTexture;\n    }\n\n    freeTextureSource(textureSource) {\n        this.stage.gl.deleteTexture(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        let offset = (index * 20);\n        const elementCore = quads.quadElements[index];\n\n        let r = elementCore._renderContext;\n\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        const mca = StageUtils.mergeColorAlpha;\n\n        if (r.tb !== 0 || r.tc !== 0) {\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta;\n            floats[offset++] = r.py + elementCore._w * r.tc;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._w * r.tc + elementCore._h * r.td;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._h * r.td;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        } else {\n            // Simple.\n            let cx = r.px + elementCore._w * r.ta;\n            let cy = r.py + elementCore._h * r.td;\n\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        }\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        let offset = (renderState._renderTextureInfo.offset * 80) / 4;\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        return ((floats[offset] === 0) &&\n            (floats[offset + 1] === 0) &&\n            (floats[offset + 2] === 0) &&\n            (floats[offset + 3] === 0) &&\n            (uints[offset + 4] === 0xFFFFFFFF) &&\n            (floats[offset + 5] === renderTextureInfo.w) &&\n            (floats[offset + 6] === 0) &&\n            (floats[offset + 7] === 1) &&\n            (floats[offset + 8] === 0) &&\n            (uints[offset + 9] === 0xFFFFFFFF) &&\n            (floats[offset + 10] === renderTextureInfo.w) &&\n            (floats[offset + 11] === renderTextureInfo.h) &&\n            (floats[offset + 12] === 1) &&\n            (floats[offset + 13] === 1) &&\n            (uints[offset + 14] === 0xFFFFFFFF) &&\n            (floats[offset + 15] === 0) &&\n            (floats[offset + 16] === renderTextureInfo.h) &&\n            (floats[offset + 17] === 0) &&\n            (floats[offset + 18] === 1) &&\n            (uints[offset + 19] === 0xFFFFFFFF));\n    }\n\n    finishRenderState(renderState) {\n        // Set extra shader attribute data.\n        let offset = renderState.length * 80;\n        for (let i = 0, n = renderState.quadOperations.length; i < n; i++) {\n            renderState.quadOperations[i].extraAttribsDataByteOffset = offset;\n            let extra = renderState.quadOperations[i].shader.getExtraAttribBytesPerVertex() * 4 * renderState.quadOperations[i].length;\n            offset += extra;\n            if (extra) {\n                renderState.quadOperations[i].shader.setExtraAttribsInBuffer(renderState.quadOperations[i], renderState.quads);\n            }\n        }\n        renderState.quads.dataLength = offset;\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        const gl = this.stage.gl;\n        gl.bindTexture(gl.TEXTURE_2D, nativeTexture);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture.framebuffer);\n        const precision = renderTexture.precision;\n        gl.copyTexSubImage2D(\n            gl.TEXTURE_2D,\n            0,\n            precision * (options.sx || 0),\n            precision * (options.sy || 0),\n            precision * (options.x || 0),\n            precision * (options.y || 0),\n            precision * (options.w || renderTexture.ow),\n            precision * (options.h || renderTexture.oh));\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class C2dCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this.renderContexts = [];\n        this.modes = [];\n    }\n\n    setRenderContext(index, v) {\n        this.renderContexts[index] = v;\n    }\n\n    setSimpleTc(index, v) {\n        if (v) {\n            this.modes[index] |= 1;\n        } else {\n            this.modes[index] -= (this.modes[index] & 1);\n        }\n    }\n\n    setWhite(index, v) {\n        if (v) {\n            this.modes[index] |= 2;\n        } else {\n            this.modes[index] -= (this.modes[index] & 2);\n        }\n    }\n\n    getRenderContext(index) {\n        return this.renderContexts[index];\n    }\n\n    getSimpleTc(index) {\n        return (this.modes[index] & 1);\n    }\n\n    getWhite(index) {\n        return (this.modes[index] & 2);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class C2dCoreQuadOperation extends CoreQuadOperation {\n\n    getRenderContext(index) {\n        return this.quads.getRenderContext(this.index + index);\n    }\n\n    getSimpleTc(index) {\n        return this.quads.getSimpleTc(this.index + index);\n    }\n\n    getWhite(index) {\n        return this.quads.getWhite(this.index + index);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport Utils from \"../../tree/Utils.mjs\";\n\nexport default class C2dCoreRenderExecutor extends CoreRenderExecutor {\n\n    init() {\n        this._mainRenderTexture = this.ctx.stage.getCanvas();\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            const target = this._renderTexture || this._mainRenderTexture;\n            shader.beforeDraw(op, target);\n            shader.draw(op, target);\n            shader.afterDraw(op, target);\n        }\n    }\n\n    _clearRenderTexture() {\n        const ctx = this._getContext();\n\n        let clearColor = [0, 0, 0, 0];\n        if (this._mainRenderTexture.ctx === ctx) {\n            clearColor = this.ctx.stage.getClearColor();\n        }\n\n        const renderTexture = ctx.canvas;\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        if (!clearColor[0] && !clearColor[1] && !clearColor[2] && !clearColor[3]) {\n            ctx.clearRect(0, 0, renderTexture.width, renderTexture.height);\n        } else {\n            ctx.fillStyle = StageUtils.getRgbaStringFromArray(clearColor);\n            // Do not use fillRect because it produces artifacts.\n            ctx.globalCompositeOperation = 'copy';\n            ctx.beginPath();\n            ctx.rect(0, 0, renderTexture.width, renderTexture.height);\n            ctx.closePath();\n            ctx.fill();\n            ctx.globalCompositeOperation = 'source-over';\n        }\n    }\n    \n    _getContext() {\n        if (this._renderTexture) {\n            return this._renderTexture.ctx;\n        } else {\n            return this._mainRenderTexture.ctx;\n        } \n    }\n\n    _restoreContext() {\n        const ctx = this._getContext();\n        ctx.restore();\n        ctx.save();\n        ctx._scissor = null;\n    }\n\n    _setScissor(area) {\n        const ctx = this._getContext();\n\n        if (!C2dCoreRenderExecutor._equalScissorAreas(ctx.canvas, ctx._scissor, area)) {\n            // Clipping is stored in the canvas context state.\n            // We can't reset clipping alone so we need to restore the full context.\n            this._restoreContext();\n\n            let precision = this.ctx.stage.getRenderPrecision();\n            if (area) {\n                ctx.beginPath();\n                ctx.rect(Math.round(area[0] * precision), Math.round(area[1] * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n                ctx.closePath();\n                ctx.clip();\n            }\n            ctx._scissor = area;\n        }\n    }\n\n    static _equalScissorAreas(canvas, area, current) {\n        if (!area) {\n            area = [0, 0, canvas.width, canvas.height]\n        }\n        if (!current) {\n            current = [0, 0, canvas.width, canvas.height]\n        }\n        return Utils.equalValues(area, current)\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class C2dShader extends Shader {\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dShader from \"../C2dShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class DefaultShader extends C2dShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._rectangleTexture = ctx.stage.rectangleTexture.source.nativeTexture;\n        this._tintManager = this.ctx.stage.renderer.tintManager;\n    }\n\n    draw(operation, target) {\n        const ctx = target.ctx;\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            const tx = operation.getTexture(i);\n            const vc = operation.getElementCore(i);\n            const rc = operation.getRenderContext(i);\n            const white = operation.getWhite(i);\n            const stc = operation.getSimpleTc(i);\n\n            //@todo: try to optimize out per-draw transform setting. split translate, transform.\n            const precision = this.ctx.stage.getRenderPrecision();\n            ctx.setTransform(rc.ta * precision, rc.tc * precision, rc.tb * precision, rc.td * precision, rc.px * precision, rc.py * precision);\n\n            const rect = (tx === this._rectangleTexture);\n            const info = {operation, target, index: i, rect};\n\n            if (rect) {\n                // Check for gradient.\n                if (white) {\n                    ctx.fillStyle = 'white';\n                } else {\n                    this._setColorGradient(ctx, vc);\n                }\n\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n                ctx.fillRect(0, 0, vc.w, vc.h);\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            } else {\n                // @todo: set image smoothing based on the texture.\n\n                // @todo: optimize by registering whether identity texcoords are used.\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n\n                // @todo: test if rounding yields better performance.\n\n                // Notice that simple texture coords can be turned on even though vc._ulx etc are not simple, because\n                //  we are rendering a render-to-texture (texcoords were stashed). Same is true for 'white' color btw.\n                const sourceX = stc ? 0 : (vc._ulx * tx.w);\n                const sourceY = stc ? 0 : (vc._uly * tx.h);\n                const sourceW = (stc ? 1 : (vc._brx - vc._ulx)) * tx.w;\n                const sourceH = (stc ? 1 : (vc._bry - vc._uly)) * tx.h;\n\n                let colorize = !white;\n                if (colorize) {\n                    // @todo: cache the tint texture for better performance.\n\n                    // Draw to intermediate texture with background color/gradient.\n                    // This prevents us from having to create a lot of render texture canvases.\n\n                    // Notice that we don't support (non-rect) gradients, only color tinting for c2d. We'll just take the average color.\n                    let color = vc._colorUl;\n                    if (vc._colorUl !== vc._colorUr || vc._colorUr !== vc._colorBl || vc._colorBr !== vc._colorBl) {\n                        color = StageUtils.mergeMultiColorsEqual([vc._colorUl, vc._colorUr, vc._colorBl, vc._colorBr]);\n                    }\n\n                    const alpha = ((color / 16777216) | 0) / 255.0;\n                    ctx.globalAlpha *= alpha;\n\n                    const rgb = color & 0x00FFFFFF;\n                    const tintTexture = this._tintManager.getTintTexture(tx, rgb);\n\n                    // Actually draw result.\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tintTexture, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                } else {\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tx, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                }\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            }\n        }\n    }\n\n    _setColorGradient(ctx, vc, w = vc.w, h = vc.h, transparency = true) {\n        let color = vc._colorUl;\n        let gradient;\n        //@todo: quick single color check.\n        //@todo: cache gradient/fill style (if possible, probably context-specific).\n\n        if (vc._colorUl === vc._colorUr) {\n            if (vc._colorBl === vc._colorBr) {\n                if (vc._colorUl === vc.colorBl) {\n                    // Single color.\n                } else {\n                    // Vertical gradient.\n                    gradient = ctx.createLinearGradient(0, 0, 0, h);\n                    if (transparency) {\n                        gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBl));\n                    } else {\n                        gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBl));\n\n                    }\n                }\n            } else {\n                // Not supported gradient.\n            }\n        } else {\n            if (vc._colorUl === vc._colorBl && vc._colorUr === vc._colorBr) {\n                // Horizontal gradient.\n                gradient = ctx.createLinearGradient(0, 0, w, 0);\n                if (transparency) {\n                    gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBr));\n                } else {\n                    gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBr));\n                }\n            }\n        }\n\n        if (gradient) {\n            ctx.fillStyle = gradient;\n        } else {\n            ctx.fillStyle = transparency ? StageUtils.getRgbaString(color) : StageUtils.getRgbString(color);\n        }\n    }\n\n    _beforeDrawEl(info) {\n    }\n\n    _afterDrawEl(info) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class C2dTextureTintManager {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._usedMemory = 0;\n        this._cachedNativeTextures = new Set();\n    }\n\n    destroy() {\n        this.gc(true);\n\n        this.stage = null;\n        delete this.stage;\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n\n        this.stage.addMemoryUsage(delta);\n    }\n\n    delete(nativeTexture) {\n        // Should be called when native texture is cleaned up.\n        if (this._hasCache(nativeTexture)) {\n            const cache = this._getCache(nativeTexture);\n            const prevMemUsage = cache.memoryUsage;\n            cache.clear();\n            this._cachedNativeTextures.delete(nativeTexture);\n            this._addMemoryUsage(cache.memoryUsage - prevMemUsage);\n        }\n    }\n\n    getTintTexture(nativeTexture, color) {\n        const frame = this.stage.frameCounter;\n\n        this._cachedNativeTextures.add(nativeTexture);\n\n        const cache = this._getCache(nativeTexture);\n\n        const item = cache.get(color);\n        item.lf = frame;\n\n        if (item.tx) {\n            if (nativeTexture.update > item.u) {\n                // Native texture was updated in the mean time: renew.\n                this._tintTexture(item.tx, nativeTexture, color)\n            }\n\n            return item.tx;\n        } else {\n            const before = cache.memoryUsage;\n\n            // Find blanco tint texture.\n            let target = cache.reuseTexture(frame);\n            if (target) {\n                target.ctx.clearRect(0, 0, target.width, target.height);\n            } else {\n                // Allocate new.\n                target = document.createElement('canvas');\n                target.width = nativeTexture.w;\n                target.height = nativeTexture.h;\n                target.ctx = target.getContext('2d');\n            }\n\n            this._tintTexture(target, nativeTexture, color);\n            cache.set(color, target, frame);\n\n            const after = cache.memoryUsage;\n\n            if (after !== before) {\n                this._addMemoryUsage(after - before);\n            }\n\n            return target;\n        }\n    }\n\n    _tintTexture(target, source, color) {\n        let col = color.toString(16);\n        while (col.length < 6) {\n            col = \"0\" + col;\n        }\n        target.ctx.fillStyle = '#' + col;\n        target.ctx.globalCompositeOperation = 'copy';\n        target.ctx.fillRect(0, 0, source.w, source.h);\n        target.ctx.globalCompositeOperation = 'multiply';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n\n        // Alpha-mix the texture.\n        target.ctx.globalCompositeOperation = 'destination-in';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n    }\n\n    _hasCache(nativeTexture) {\n        return !!nativeTexture._tintCache;\n    }\n\n    _getCache(nativeTexture) {\n        if (!nativeTexture._tintCache) {\n            nativeTexture._tintCache = new C2dTintCache(nativeTexture);\n        }\n        return nativeTexture._tintCache;\n    }\n\n    gc(aggressive = false) {\n        const frame = this.stage.frameCounter;\n        let delta = 0;\n        this._cachedNativeTextures.forEach(texture => {\n            const cache = this._getCache(texture);\n            if (aggressive) {\n                delta += cache.memoryUsage;\n                cache.clear();\n            } else {\n                const before = cache.memoryUsage;\n                cache.cleanup(frame);\n                cache.releaseBlancoTextures();\n                delta += (cache.memoryUsage - before);\n            }\n        });\n\n        if (aggressive) {\n            this._cachedNativeTextures.clear();\n        }\n\n        if (delta) {\n            this._addMemoryUsage(delta);\n        }\n    }\n\n}\n\nclass C2dTintCache {\n\n    constructor(nativeTexture) {\n        this._tx = nativeTexture;\n        this._colors = new Map();\n        this._blancoTextures = null;\n        this._lastCleanupFrame = 0;\n        this._memTextures = 0;\n    }\n\n    get memoryUsage() {\n        return this._memTextures * this._tx.w * this._tx.h;\n    }\n\n    releaseBlancoTextures() {\n        this._memTextures -= this._blancoTextures.length;\n        this._blancoTextures = [];\n    }\n\n    clear() {\n        // Dereference the textures.\n        this._blancoTextures = null;\n        this._colors.clear();\n        this._memTextures = 0;\n    }\n\n    get(color) {\n        let item = this._colors.get(color);\n        if (!item) {\n            item = {lf: -1, tx: undefined, u: -1};\n            this._colors.set(color, item);\n        }\n        return item;\n    }\n\n    set(color, texture, frame) {\n        const item = this.get(color);\n        item.lf = frame;\n        item.tx = texture;\n        item.u = frame;\n        this._memTextures++;\n    }\n\n    cleanup(frame) {\n        // We only need to clean up once per frame.\n        if (this._lastCleanupFrame !== frame) {\n\n            // We limit blanco textures reuse to one frame only to prevent memory usage growth.\n            this._blancoTextures = [];\n\n            this._colors.forEach((item, color) => {\n                // Clean up entries that were not used last frame.\n                if (item.lf < frame - 1) {\n                    if (item.tx) {\n                        // Keep as reusable blanco texture.\n                        this._blancoTextures.push(item.tx);\n                    }\n                    this._colors.delete(color);\n                }\n            });\n\n            this._lastCleanupFrame = frame;\n        }\n    }\n\n    reuseTexture(frame) {\n        // Try to reuse textures, because creating them every frame is expensive.\n        this.cleanup(frame);\n        if (this._blancoTextures && this._blancoTextures.length) {\n            this._memTextures--;\n            return this._blancoTextures.pop();\n        }\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dCoreQuadList from \"./C2dCoreQuadList.mjs\";\nimport C2dCoreQuadOperation from \"./C2dCoreQuadOperation.mjs\";\nimport C2dCoreRenderExecutor from \"./C2dCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport C2dShader from \"./C2dShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\nimport TextureTintManager from \"./C2dTextureTintManager.mjs\";\n\nexport default class C2dRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n\n        this.tintManager = new TextureTintManager(stage);\n\n        this.setupC2d(this.stage.c2d.canvas);\n    }\n\n    destroy() {\n        this.tintManager.destroy();\n\n        this.tintManager = null;\n        delete this.tintManager;\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return C2dShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getC2d && shaderType.getC2d();\n    }\n\n    createCoreQuadList(ctx) {\n        return new C2dCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new C2dCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new C2dCoreRenderExecutor(ctx);\n    }\n    \n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const canvas = document.createElement('canvas');\n        canvas.width = pw;\n        canvas.height = ph;\n        this.setupC2d(canvas);\n        return canvas;\n    }\n    \n    freeRenderTexture(nativeTexture) {\n        this.tintManager.delete(nativeTexture);\n    }\n\n    gc(aggressive) {\n        this.tintManager.gc(aggressive);\n    }\n\n    uploadTextureSource(textureSource, options) {\n        // For canvas, we do not need to upload.\n        if (options.source.buffer) {\n            // Convert RGBA buffer to canvas.\n            const canvas = document.createElement('canvas');\n            canvas.width = options.w;\n            canvas.height = options.h;\n\n            const imageData = new ImageData(new Uint8ClampedArray(options.source.buffer), options.w, options.h);\n            canvas.getContext('2d').putImageData(imageData, 0, 0);\n            return canvas;\n        }\n\n        return options.source;\n    }\n\n    freeTextureSource(textureSource) {\n        this.tintManager.delete(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        // Render context changes while traversing so we save it by ref.\n        const elementCore = quads.quadElements[index];\n        quads.setRenderContext(index, elementCore._renderContext);\n        quads.setWhite(index, elementCore.isWhite());\n        quads.setSimpleTc(index, elementCore.hasSimpleTexCoords());\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        // @todo: check render coords/matrix, maybe move this to core?\n        return false;\n    }\n\n    finishRenderState(renderState) {\n    }\n\n    setupC2d(canvas) {\n        const ctx = canvas.getContext('2d');\n        canvas.ctx = ctx;\n\n        ctx._scissor = null;\n\n        // Save base state so we can restore the defaults later.\n        canvas.ctx.save();\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../../webgl/WebGLShader.mjs\";\n\nexport default class SparkShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    if (glTexture.options && glTexture.options.imageRef) {\n                        let elementPostion = (i > 0) ? (i - 1) : i;\n                        const precision = this.ctx.stage.getOption('precision');\n                        let vc = operation.getElementCore(elementPostion);\n                        this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                    } else {\n                        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                        gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    }\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            if (pos < length) {\n                if (glTexture.options && glTexture.options.imageRef) {\n                    const precision = this.ctx.stage.getOption('precision');\n                    let vc = operation.getElementCore(pos);\n                    this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                } else {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                }\n            }\n        }\n    }\n\n}\n\nSparkShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nSparkShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLRenderer from \"../webgl/WebGLRenderer.mjs\";\nimport SparkShader from \"./shaders/SparkShader.mjs\";\n\nexport default class SparkRenderer extends WebGLRenderer {\n\n    constructor(stage) {\n        super(stage);\n    }\n\n    _createDefaultShader(ctx) {\n        return new SparkShader(ctx);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        global.beginDrawing();\n        let ret = super.createCoreRenderExecutor(ctx);\n        global.endDrawing();\n        return ret;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ImageWorker {\n\n    constructor(options = {}) {\n        this._items = new Map();\n        this._id = 0;\n\n        this._initWorker();\n    }\n\n    destroy() {\n        if (this._worker) {\n            this._worker.terminate();\n        }\n\n        this._items = null;\n        this._worker = null;\n\n        delete this._items;\n        delete this._worker;        \n    }\n\n    _initWorker() {\n        const code = `(${createWorker.toString()})()`;\n        const blob = new Blob([code.replace('\"use strict\";', '')]); // firefox adds \"use strict\"; to any function which might block worker execution so knock it off\n        const blobURL = (window.URL ? URL : webkitURL).createObjectURL(blob, {\n            type: 'application/javascript; charset=utf-8'\n        });\n        this._worker = new Worker(blobURL);\n\n        this._worker.postMessage({type: 'config', config: {path: window.location.href, protocol: window.location.protocol}});\n\n        this._worker.onmessage = (e) => {\n            if (e.data && e.data.id) {\n                const id = e.data.id;\n                const item = this._items.get(id);\n                if (item) {\n                    if (e.data.type == 'data') {\n                        this.finish(item, e.data.info);\n                    } else {\n                        this.error(item, e.data.info);\n                    }\n                }\n            }\n        }\n    }\n\n    create(src) {\n        const id = ++this._id;\n        const item = new ImageWorkerImage(this, id, src);\n        this._items.set(id, item);\n        this._worker.postMessage({type: \"add\", id: id, src: src});\n        return item;\n    }\n\n    cancel(image) {\n        this._worker.postMessage({type: \"cancel\", id: image.id});\n        this._items.delete(image.id);\n    }\n\n    error(image, info) {\n        image.error(info);\n        this._items.delete(image.id);\n    }\n\n    finish(image, info) {\n        image.load(info);\n        this._items.delete(image.id);\n    }\n\n}\n\nclass ImageWorkerImage {\n\n    constructor(manager, id, src) {\n        this._manager = manager;\n        this._id = id;\n        this._src = src;\n        this._onError = null;\n        this._onLoad = null;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set onError(f) {\n        this._onError = f;\n    }\n\n    set onLoad(f) {\n        this._onLoad = f;\n    }\n\n    cancel() {\n        this._manager.cancel(this);\n    }\n\n    load(info) {\n        if (this._onLoad) {\n            this._onLoad(info);\n        }\n    }\n\n    error(info) {\n        if (this._onError) {\n            this._onError(info);\n        }\n    }\n\n}\n\n/**\n * Notice that, within the createWorker function, we must only use ES5 code to keep it ES5-valid after babelifying, as\n *  the converted code of this section is converted to a blob and used as the js of the web worker thread.\n */\nconst createWorker = function() {\n\n    function ImageWorkerServer() {\n\n        this.items = new Map();\n\n        var t = this;\n        onmessage = function(e) {\n            t._receiveMessage(e);\n        }\n\n    }\n\n    ImageWorkerServer.isPathAbsolute = function(path) {\n        return /^(?:\\/|[a-z]+:\\/\\/)/.test(path) || path.substr(0, 5) == 'data:';\n    };\n\n    ImageWorkerServer.prototype._receiveMessage = function(e) {\n        if (e.data.type === 'config') {\n            this.config = e.data.config;\n\n            var base = this.config.path;\n            // the constructing of the basepath fails\n            // if location.hash contains a slash\n            var hasHashPath = /#.*?\\//;\n            if(hasHashPath.test(base)){\n                base = base.replace(/#.*$/,'');\n            }\n\n            var parts = base.split(\"/\");\n            parts.pop();\n            this._relativeBase = parts.join(\"/\") + \"/\";\n\n        } else if (e.data.type === 'add') {\n            this.add(e.data.id, e.data.src);\n        } else if (e.data.type === 'cancel') {\n            this.cancel(e.data.id);\n        }\n    };\n\n    ImageWorkerServer.prototype.add = function(id, src) {\n        // Convert relative URLs.\n        if (!ImageWorkerServer.isPathAbsolute(src)) {\n            src = this._relativeBase + src;\n        }\n\n        if (src.substr(0,2) === \"//\") {\n            // This doesn't work for image workers.\n            src = this.config.protocol + src;\n        }\n\n        var item = new ImageWorkerServerItem(id, src);\n        var t = this;\n        item.onFinish = function(result) {\n            t.finish(item, result);\n        };\n        item.onError = function(info) {\n            t.error(item, info);\n        };\n        this.items.set(id, item);\n        item.start();\n    };\n\n    ImageWorkerServer.prototype.cancel = function(id) {\n        var item = this.items.get(id);\n        if (item) {\n            item.cancel();\n            this.items.delete(id);\n        }\n    }\n\n    ImageWorkerServer.prototype.finish = function(item, {imageBitmap, hasAlphaChannel}) {\n        postMessage({\n            type: \"data\",\n            id: item.id,\n            info: {\n                imageBitmap,\n                hasAlphaChannel\n            }\n        }, [imageBitmap]);\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.prototype.error = function(item, {type, message}) {\n        postMessage({\n            type: \"error\",\n            id: item.id,\n            info: {\n                type,\n                message\n            }\n        });\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.isWPEBrowser = function() {\n        return (navigator.userAgent.indexOf(\"WPE\") !== -1);\n    };\n\n    function ImageWorkerServerItem(id, src) {\n\n        this._onError = undefined;\n        this._onFinish = undefined;\n        this._id = id;\n        this._src = src;\n        this._xhr = undefined;\n        this._mimeType = undefined;\n        this._canceled = false;\n\n    }\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'id', {\n        get: function() {\n            return this._id;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onFinish', {\n        get: function() {\n            return this._onFinish;\n        },\n        set: function(f) {\n            this._onFinish = f;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onError', {\n        get: function() {\n            return this._onError;\n        },\n        set: function(f) {\n            this._onError = f;\n        }\n    });\n\n    ImageWorkerServerItem.prototype.start = function() {\n        this._xhr = new XMLHttpRequest();\n        this._xhr.open(\"GET\", this._src, true);\n        this._xhr.responseType = \"blob\";\n\n        var t = this;\n        this._xhr.onerror = function(oEvent) {\n            t.error({type: \"connection\", message: \"Connection error\"});\n        };\n\n        this._xhr.onload = function(oEvent) {\n            var blob = t._xhr.response;\n            t._mimeType = blob.type;\n\n            t._createImageBitmap(blob);\n        };\n\n        this._xhr.send();\n    };\n\n    ImageWorkerServerItem.prototype._createImageBitmap = function(blob) {\n        var t = this;\n        createImageBitmap(blob, {premultiplyAlpha: 'premultiply', colorSpaceConversion: 'none', imageOrientation: 'none'}).then(function(imageBitmap) {\n            t.finish({\n                imageBitmap,\n                hasAlphaChannel: t._hasAlphaChannel()\n            });\n        }).catch(function(e) {\n            t.error({type: \"parse\", message: \"Error parsing image data\"});\n        });\n    };\n\n    ImageWorkerServerItem.prototype._hasAlphaChannel = function() {\n        if (ImageWorkerServer.isWPEBrowser()) {\n            // When using unaccelerated rendering image (https://github.com/WebPlatformForEmbedded/WPEWebKit/blob/wpe-20170728/Source/WebCore/html/ImageBitmap.cpp#L52),\n            // everything including JPG images are in RGBA format. Upload is way faster when using an alpha channel.\n            // @todo: after hardware acceleration is fixed and re-enabled, JPG should be uploaded in RGB to get the best possible performance and memory usage.\n            return true;\n        } else {\n            return (this._mimeType.indexOf(\"image/png\") !== -1);\n        }\n    };\n\n    ImageWorkerServerItem.prototype.cancel = function() {\n        if (this._canceled) return;\n        if (this._xhr) {\n            this._xhr.abort();\n        }\n        this._canceled = true;\n    };\n\n    ImageWorkerServerItem.prototype.error = function(type, message) {\n        if (!this._canceled && this._onError) {\n            this._onError({type, message});\n        }\n    };\n\n    ImageWorkerServerItem.prototype.finish = function(info) {\n        if (!this._canceled && this._onFinish) {\n            this._onFinish(info);\n        }\n    };\n\n    var worker = new ImageWorkerServer();\n};\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport ImageWorker from \"./ImageWorker.mjs\";\n\n/**\n * Platform-specific functionality.\n */\nexport default class WebPlatform {\n\n    init(stage) {\n        this.stage = stage;\n        this._looping = false;\n        this._awaitingLoop = false;\n\n        // Alternative handler to avoid RAF when idle\n        this._loopHandler = null;\n        this._idleLoopCounter = 0;\n        this._idleLoopDelay = 60;\n        this._onIdle = false;\n\n        if (this.stage.getOption(\"useImageWorker\")) {\n            if (!window.createImageBitmap || !window.Worker) {\n                console.warn(\"[Lightning] Can't use image worker because browser does not have createImageBitmap and Web Worker support\");\n            } else {\n                this._imageWorker = new ImageWorker();\n            }\n        }\n\n        this._registerVisibilityChangeHandler();\n    }\n\n    destroy() {\n        if (this._imageWorker) {\n            this._imageWorker.destroy();\n        }\n\n        clearInterval(this._loopHandler);\n\n        this._removeKeyHandler();\n        this._removeClickHandler();\n        this._removeHoverHandler();\n        this._removeScrollWheelHandler();\n        this._removeVisibilityChangeHandler();\n\n        this.stage = null;\n        delete this.stage;\n    }\n\n    startLoop() {\n        this._looping = true;\n        if (!this._awaitingLoop) {\n            this.loop();\n        }\n    }\n\n    stopLoop() {\n        this._looping = false;\n    }\n\n    switchLoop() {\n        if (this._onIdle === false) {\n            this._onIdle = true;\n            this.stage.onIdle();\n        }\n\n        if (this._idleLoopCounter < this._idleLoopDelay) {\n            this._idleLoopCounter++;\n            return;\n        }\n        if (!this.stage.ctx.hasRenderUpdates()) {\n            this.stopLoop();\n            this._loopHandler = setInterval(() => {\n                this.stage.updateFrame();\n                this.stage.idleFrame();\n                if (this.stage.ctx.hasRenderUpdates()) {\n                    clearInterval(this._loopHandler);\n                    this.startLoop();\n                };\n            }, 1000 / 60);\n        } else {\n            this._idleLoopCounter = 0;\n        }\n    }\n\n    loop() {\n        let self = this;\n        let lp = function () {\n            self._awaitingLoop = false;\n            self._onIdle = false;\n            if (self._looping) {\n                self.stage.updateFrame();\n                if (self.stage.getOption(\"pauseRafLoopOnIdle\")) {\n                    self.switchLoop();\n                }\n                self.stage.renderFrame();\n                requestAnimationFrame(lp);\n                self._awaitingLoop = true;\n            }\n        }\n        requestAnimationFrame(lp);\n    }\n\n    uploadCompressedGlTexture(gl, textureSource, source, options) {\n        const view = !source.pvr ? new DataView(source.mipmaps[0]) : source.mipmaps[0];\n        gl.compressedTexImage2D(\n            gl.TEXTURE_2D,\n            0,\n            source.glInternalFormat,\n            source.pixelWidth,\n            source.pixelHeight,\n            0,\n            view,\n        )\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    }\n\n    uploadGlTexture(gl, textureSource, source, options) {\n        if (source instanceof ImageData || source instanceof HTMLImageElement || source instanceof HTMLVideoElement || (window.ImageBitmap && source instanceof ImageBitmap)) {\n            // Web-specific data types.\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\n        } else if (source instanceof HTMLCanvasElement) {\n            if (Utils.isZiggo || this.stage.getOption(\"forceTxCanvasSource\")) {\n                // Ziggo EOS and Selene have issues with getImageData implementation causing artifacts.\n                gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\n            } else if (source.width > 0 && source.height > 0) {\n                // Workaround for some browsers (e.g. Tizen) as they do not convert canvas data to texture correctly, sometimes causing artifacts.\n                // Width/Height check added because of https://github.com/rdkcentral/Lightning/issues/412\n                const ctx = source.getContext('2d');\n                gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, ctx.getImageData(0, 0, source.width, source.height));\n            }\n        } else {\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, textureSource.w, textureSource.h, 0, options.format, options.type, source);\n        }\n    }\n\n    /**\n     * KTX File format specification\n     * https://www.khronos.org/registry/KTX/specs/1.0/ktxspec_v1.html\n     **/\n    handleKtxLoad(cb, src) {\n        var self = this;\n        return function () {\n            var arraybuffer = this.response;\n            var view = new DataView(arraybuffer);\n\n            // identifier, big endian\n            var targetIdentifier = 3632701469\n            if (targetIdentifier !== (view.getUint32(0) + view.getUint32(4) + view.getUint32(8))) {\n                cb('Parsing failed: identifier ktx mismatch:', src)\n            }\n\n            var littleEndian = (view.getUint32(12) === 16909060) ? true : false;\n            var data = {\n                glType: view.getUint32(16, littleEndian),\n                glTypeSize: view.getUint32(20, littleEndian),\n                glFormat: view.getUint32(24, littleEndian),\n                glInternalFormat: view.getUint32(28, littleEndian),\n                glBaseInternalFormat: view.getUint32(32, littleEndian),\n                pixelWidth: view.getUint32(36, littleEndian),\n                pixelHeight: view.getUint32(40, littleEndian),\n                pixelDepth: view.getUint32(44, littleEndian),\n                numberOfArrayElements: view.getUint32(48, littleEndian),\n                numberOfFaces: view.getUint32(52, littleEndian),\n                numberOfMipmapLevels: view.getUint32(56, littleEndian),\n                bytesOfKeyValueData: view.getUint32(60, littleEndian),\n                kvps: [],\n                mipmaps: [],\n                get width() { return this.pixelWidth },\n                get height() { return this.pixelHeight },\n            };\n\n            const props = (obj) => {\n                const p = [];\n                for (let v in obj) {\n                    p.push(obj[v]);\n                }\n                return p;\n            }\n\n            const formats = Object.values(self.stage.renderer.getCompressedTextureExtensions())\n                .filter((obj) => obj != null)\n                .map((obj) => props(obj))\n                .reduce((prev, current) => prev.concat(current));\n\n            if (!formats.includes(data.glInternalFormat)) {\n                console.warn(\"[Lightning] Unrecognized texture extension format:\", src, data.glInternalFormat, self.stage.renderer.getCompressedTextureExtensions());\n            }\n\n            var offset = 64\n            // Key Value Pairs of data start at byte offset 64\n            // But the only known kvp is the API version, so skipping parsing.\n            offset += data.bytesOfKeyValueData;\n\n            for (var i = 0; i < data.numberOfMipmapLevels; i++) {\n                var imageSize = view.getUint32(offset);\n                offset += 4;\n                data.mipmaps.push(view.buffer.slice(offset, imageSize));\n                offset += imageSize\n            }\n\n            cb(null, {\n                source: data,\n                renderInfo: { src: src, compressed: true },\n            })\n        }\n    }\n\n    handlePvrLoad(cb, src) {\n        return function () {\n            // pvr header length in 32 bits\n            const pvrHeaderLength = 13;\n            // for now only we only support: COMPRESSED_RGB_ETC1_WEBGL\n            const pvrFormatEtc1 = 0x8D64;\n            const pvrWidth = 7;\n            const pvrHeight = 6;\n            const pvrMipmapCount = 11;\n            const pvrMetadata = 12;\n            const arrayBuffer = this.response;\n            const header = new Int32Array(arrayBuffer, 0, pvrHeaderLength);\n            const dataOffset = header[pvrMetadata] + 52;\n            const pvrtcData = new Uint8Array(arrayBuffer, dataOffset);\n\n            var data = {\n                glInternalFormat: pvrFormatEtc1,\n                pixelWidth: header[pvrWidth],\n                pixelHeight: header[pvrHeight],\n                numberOfMipmapLevels: header[pvrMipmapCount],\n                mipmaps: [],\n                pvr: true,\n                get width() { return this.pixelWidth },\n                get height() { return this.pixelHeight },\n            };\n\n            let offset = 0\n            let width = data.pixelWidth;\n            let height = data.pixelHeight;\n\n            for (var i = 0; i < data.numberOfMipmapLevels; i++) {\n                const level = ((width + 3) >> 2) * ((height + 3) >> 2) * 8;\n                const view = new Uint8Array(arrayBuffer, pvrtcData.byteOffset + offset, level);\n                data.mipmaps.push(view);\n                offset += level;\n                width = width >> 1;\n                height = height >> 1;\n            }\n\n            cb(null, {\n                source: data,\n                renderInfo: { src: src, compressed: true },\n            })\n        }\n    }\n\n    loadSrcTexture({ src, hasAlpha }, cb) {\n        let cancelCb = undefined;\n        let isPng = (src.toLowerCase().indexOf(\".png\") >= 0) || src.substr(0, 21) == 'data:image/png;base64';\n        let isKtx = src.indexOf('.ktx') >= 0;\n        let isPvr = src.indexOf('.pvr') >= 0;\n        if (isKtx || isPvr) {\n            let request = new XMLHttpRequest();\n            request.addEventListener(\n                \"load\", isKtx ? this.handleKtxLoad(cb, src) : this.handlePvrLoad(cb, src)\n            );\n            request.open(\"GET\", src);\n            request.responseType = \"arraybuffer\";\n            request.send();\n            cancelCb = function () {\n                request.abort();\n            }\n        } else if (this._imageWorker) {\n            // WPE-specific image parser.\n            const image = this._imageWorker.create(src);\n            image.onError = function (err) {\n                return cb(\"Image load error\");\n            };\n            image.onLoad = function ({ imageBitmap, hasAlphaChannel }) {\n                cb(null, {\n                    source: imageBitmap,\n                    renderInfo: { src: src, compressed: false },\n                    hasAlpha: hasAlphaChannel,\n                    premultiplyAlpha: true\n                });\n            };\n            cancelCb = function () {\n                image.cancel();\n            }\n        } else {\n            let image = new Image();\n\n            // On the PS4 platform setting the `crossOrigin` attribute on\n            // images can cause CORS failures.\n            if (!(src.substr(0, 5) == \"data:\") && !Utils.isPS4) {\n                // Base64.\n                image.crossOrigin = \"Anonymous\";\n            }\n            image.onerror = function (err) {\n                // Ignore error message when cancelled.\n                if (image.src) {\n                    return cb(\"Image load error\");\n                }\n            };\n            image.onload = function () {\n                cb(null, {\n                    source: image,\n                    renderInfo: { src: src, compressed: false },\n                    hasAlpha: isPng || hasAlpha\n                });\n            };\n            image.src = src;\n\n            cancelCb = function () {\n                image.onerror = null;\n                image.onload = null;\n                image.removeAttribute('src');\n            }\n        }\n\n        return cancelCb;\n    }\n\n    createWebGLContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let opts = {\n            alpha: true,\n            antialias: false,\n            premultipliedAlpha: true,\n            stencil: true,\n            preserveDrawingBuffer: false\n        };\n\n        let gl = canvas.getContext('webgl', opts) || canvas.getContext('experimental-webgl', opts) || canvas.getContext('webgl2', opts);\n\n        if (!gl) {\n            throw new Error('This browser does not support webGL.');\n        }\n\n        return gl;\n    }\n\n    createCanvasContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let c2d = canvas.getContext('2d');\n        if (!c2d) {\n            throw new Error('This browser does not support 2d canvas.');\n        }\n\n        return c2d;\n    }\n\n    getHrTime() {\n        return window.performance ? window.performance.now() : (new Date()).getTime();\n    }\n\n    getDrawingCanvas() {\n        // We can't reuse this canvas because textures may load async.\n        return document.createElement('canvas');\n    }\n\n    getTextureOptionsForDrawingCanvas(canvas) {\n        let options = {};\n        options.source = canvas;\n        return options;\n    }\n\n    nextFrame(changes) {\n        /* WebGL blits automatically */\n    }\n\n    registerKeydownHandler(keyhandler) {\n        this._keydownListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keydown', this._keydownListener);\n    }\n\n    registerKeyupHandler(keyhandler) {\n        this._keyupListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keyup', this._keyupListener);\n    }\n\n    _removeKeyHandler() {\n        if (this._keydownListener) {\n            window.removeEventListener('keydown', this._keydownListener);\n        }\n\n        if (this._keyupListener) {\n            window.removeEventListener('keyup', this._keyupListener);\n        }\n    }\n\n    registerClickHandler(clickHandler) {\n        this._clickListener = e => {\n            clickHandler(e);\n        };\n        window.addEventListener('mousedown', this._clickListener);\n    }\n\n    _removeClickHandler() {\n        if (this._clickListener) {\n            window.removeEventListener('mousedown', this._clickListener);\n        }\n    }\n\n    registerHoverHandler(hoverHandler) {\n        this._hoverListener = e => {\n            hoverHandler(e);\n        };\n        window.addEventListener('mousemove', this._hoverListener);\n    }\n\n    _removeHoverHandler() {\n        if (this._hoverListener) {\n            window.removeEventListener('mousemove', this._hoverListener);\n        }\n    }\n\n    registerScrollWheelHandler(registerScrollWheelHandler) {\n        this._scrollWheelListener = e => {\n            registerScrollWheelHandler(e);\n        }\n        window.addEventListener('wheel', this._scrollWheelListener);\n    }\n\n    _removeScrollWheelHandler() {\n        if (this._scrollWheelListener) {\n            window.removeEventListener('wheel', this._scrollWheelListener);\n        }\n    }\n\n    /**\n     * Fix for issue reported at: https://github.com/WebPlatformForEmbedded/WPEWebKit/issues/882\n     */\n    _registerVisibilityChangeHandler() {\n        this._visibilityChangeHandler = () => {\n            if (document.visibilityState === 'visible') {\n                this.stage.root.core.setHasRenderUpdates(2);\n                this.stage.renderFrame();\n            }\n        }\n        document.addEventListener('visibilitychange', this._visibilityChangeHandler);\n    }\n\n    _removeVisibilityChangeHandler() {\n        if (this._visibilityChangeHandler) {\n            document.removeEventListener('visibilitychange', this._visibilityChangeHandler);\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebPlatform from \"./browser/WebPlatform.mjs\";\n\nexport default class PlatformLoader {\n    static load(options) {\n        if (options.platform) {\n            return options.platform;\n        } else {\n            return WebPlatform;\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value == 'string';\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object' || type == 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2)\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2)\n        } else {\n            return v1 === v2\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false\n            }\n        }\n\n        return true\n    }\n\n}\n\n/**\n * Maintains the state of a WebGLRenderingContext.\n */\nclass WebGLState {\n\n    constructor(id, gl) {\n        this._id = id;\n        this._gl = gl;\n        this._program = undefined;\n        this._buffers = new Map();\n        this._framebuffers = new Map();\n        this._renderbuffers = new Map();\n\n        // Contains vertex attribute definition arrays (enabled, size, type, normalized, stride, offset).\n        this._vertexAttribs = new Array(16);\n        this._nonDefaultFlags = new Set();\n        this._settings = new Map();\n        this._textures = new Array(8);\n        this._maxTexture = 0;\n        this._activeTexture = gl.TEXTURE0;\n        this._pixelStorei = new Array(5);\n    }\n\n    _getDefaultFlag(cap) {\n        return (cap === this._gl.DITHER);\n    }\n\n    setFlag(cap, v) {\n        const def = this._getDefaultFlag(cap);\n        if (v === def) {\n            return this._nonDefaultFlags.delete(cap);\n        } else {\n            if (!this._nonDefaultFlags.has(cap)) {\n                this._nonDefaultFlags.add(cap);\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    setBuffer(target, buffer) {\n        const change = this._buffers.get(target) !== buffer;\n        this._buffers.set(target, buffer);\n\n        if (change && (target === this._gl.ARRAY_BUFFER)) {\n            // When the array buffer is changed all attributes are cleared.\n            this._vertexAttribs = [];\n        }\n\n        return change;\n    }\n\n    setFramebuffer(target, buffer) {\n        const change = this._framebuffers.get(target) !== buffer;\n        this._framebuffers.set(target, buffer);\n        return change;\n    }\n\n    setRenderbuffer(target, buffer) {\n        const change = this._renderbuffers.get(target) !== buffer;\n        this._renderbuffers.set(target, buffer);\n        return change;\n    }\n\n    setProgram(program) {\n        const change = this._program !== program;\n        this._program = program;\n        return change\n    }\n\n    setSetting(func, v) {\n        const s = this._settings.get(func);\n        const change = !s || !Utils.equalValues(s, v);\n        this._settings.set(func, v);\n        return change\n    }\n\n    disableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va && va[5]) {\n            va[5] = false;\n            return true;\n        }\n        return false;\n    }\n\n    enableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va) {\n            if (!va[0]) {\n                va[0] = true;\n                return true;\n            }\n        } else {\n            this._vertexAttribs[index] = [0, 0, 0, 0, 0, true];\n            return true;\n        }\n        return false;\n    }\n\n    vertexAttribPointer(index, props) {\n        let va = this._vertexAttribs[index];\n        let equal = false;\n        if (va) {\n            equal = va[0] === props[0] &&\n                va[1] === props[1] &&\n                va[2] === props[2] &&\n                va[3] === props[3] &&\n                va[4] === props[4];\n        }\n\n        if (equal) {\n            return false;\n        } else {\n            props[5] = va ? va[5] : false;\n            return true;\n        }\n    }\n\n    setActiveTexture(texture) {\n        const changed = this._activeTexture !== texture;\n        this._activeTexture = texture;\n        return changed;\n    }\n\n    bindTexture(target, texture) {\n        const activeIndex = WebGLState._getTextureIndex(this._activeTexture);\n        this._maxTexture = Math.max(this._maxTexture, activeIndex + 1);\n        const current = this._textures[activeIndex];\n        const targetIndex = WebGLState._getTextureTargetIndex(target);\n        if (current) {\n            if (current[targetIndex] === texture) {\n                return false;\n            }\n            current[targetIndex] = texture;\n            return true;\n        } else {\n            if (texture) {\n                this._textures[activeIndex] = [];\n                this._textures[activeIndex][targetIndex] = texture;\n                return true\n            } else {\n                return false\n            }\n        }\n    }\n\n    setPixelStorei(pname, param) {\n        const i = WebGLState._getPixelStoreiIndex(pname);\n        const change = !Utils.equalValues(this._pixelStorei[i], param);\n        this._pixelStorei[i] = param;\n        return change;\n    }\n\n    migrate(s) {\n        const t = this;\n\n        // Warning: migrate should call the original prototype methods directly.\n\n        this._migrateFlags(t, s);\n\n        // useProgram\n        if (s._program !== t._program) {\n            this._gl._useProgram(s._program);\n        }\n\n        this._migrateFramebuffers(t, s);\n        this._migrateRenderbuffers(t, s);\n\n        const buffersChanged = this._migrateBuffers(t, s);\n        this._migrateAttributes(t, s, buffersChanged);\n\n        this._migrateFlags(t, s);\n\n        this._migrateSettings(t, s);\n\n        this._migratePixelStorei(t, s);\n        \n        this._migrateTextures(t, s);\n        \n    }\n\n    _migratePixelStorei(t, s) {\n        for (let i = 0, n = t._pixelStorei.length; i < n; i++) {\n            if (t._pixelStorei[i] !== s._pixelStorei[i]) {\n                const value = s._pixelStorei[i] !== undefined ? s._pixelStorei[i] : WebGLState._getDefaultPixelStoreiByIndex(i);\n                this._gl._pixelStorei(WebGLState._getPixelStoreiByIndex(i), value);\n            }\n        }\n    }\n\n    _migrateTextures(t, s) {\n        const max = Math.max(t._maxTexture, s._maxTexture);\n\n        let activeTexture = t._activeTexture;\n\n        for (let i = 0; i < max; i++) {\n            const sTargets = s._textures[i];\n            const tTargets = t._textures[i];\n            const textureNumb = WebGLState._getTextureByIndex(i);\n\n            const targetMax = Math.max(tTargets ? tTargets.length : 0, sTargets ? sTargets.length : 0);\n            for (let j = 0, n = targetMax; j < n; j++) {\n                const target = WebGLState._getTextureTargetByIndex(j);\n                if (activeTexture !== textureNumb) {\n                    this._gl._activeTexture(textureNumb);\n                    activeTexture = textureNumb;\n                }\n\n                const texture = (sTargets && sTargets[j]) || null;\n                this._gl._bindTexture(target, texture);\n            }\n        }\n\n        if (s._activeTexture !== activeTexture) {\n            this._gl._activeTexture(s._activeTexture);\n        }\n    }\n\n    _migrateBuffers(t, s) {\n        s._buffers.forEach((framebuffer, target) => {\n            if (t._buffers.get(target) !== framebuffer) {\n                this._gl._bindBuffer(target, framebuffer);\n            }\n        });\n\n        t._buffers.forEach((buffer, target) => {\n            const b = s._buffers.get(target);\n            if (b === undefined) {\n                this._gl._bindBuffer(target, null);\n            }\n        });\n        return (s._buffers.get(this._gl.ARRAY_BUFFER) !== t._buffers.get(this._gl.ARRAY_BUFFER))\n    }\n\n    _migrateFramebuffers(t, s) {\n        s._framebuffers.forEach((framebuffer, target) => {\n            if (t._framebuffers.get(target) !== framebuffer) {\n                this._gl._bindFramebuffer(target, framebuffer);\n            }\n        });\n\n        t._framebuffers.forEach((framebuffer, target) => {\n            const fb = s._framebuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindFramebuffer(target, null);\n            }\n        });\n    }\n\n    _migrateRenderbuffers(t, s) {\n        s._renderbuffers.forEach((renderbuffer, target) => {\n            if (t._renderbuffers.get(target) !== renderbuffer) {\n                this._gl._bindRenderbuffer(target, renderbuffer);\n            }\n        });\n\n        t._renderbuffers.forEach((renderbuffer, target) => {\n            const fb = s._renderbuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindRenderbuffer(target, null);\n            }\n        });\n    }\n\n    _migrateAttributes(t, s, buffersChanged) {\n\n        if (!buffersChanged) {\n            t._vertexAttribs.forEach((attrib, index) => {\n                if (!s._vertexAttribs[index]) {\n                    // We can't 'delete' a vertex attrib so we'll disable it.\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n\n            s._vertexAttribs.forEach((attrib, index) => {\n                this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[4]);\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                } else {\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n        } else {\n            // When buffers are changed, previous attributes were reset automatically.\n            s._vertexAttribs.forEach((attrib, index) => {\n                if (attrib[0]) {\n                    // Do not set vertex attrib pointer when it was just the default value.\n                    this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[3], attrib[4]);\n                }\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                }\n            });\n        }\n    }\n\n    _migrateSettings(t, s) {\n        const defaults = this.constructor.getDefaultSettings();\n        t._settings.forEach((value, func) => {\n            const name = func.name || func.xname;\n            if (!s._settings.has(func)) {\n                let args = defaults.get(name);\n                if (Utils.isFunction(args)) {\n                    args = args(this._gl);\n                }\n                // We are actually setting the setting for optimization purposes.\n                s._settings.set(func, args);\n                func.apply(this._gl, args);\n            }\n        });\n        s._settings.forEach((value, func) => {\n            const tValue = t._settings.get(func);\n            if (!tValue || !Utils.equalValues(tValue, value)) {\n                func.apply(this._gl, value);\n            }\n        });\n    }\n\n    _migrateFlags(t, s) {\n        t._nonDefaultFlags.forEach(setting => {\n            if (!s._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._enable(setting);\n                } else {\n                    this._gl._disable(setting);\n                }\n            }\n        });\n        s._nonDefaultFlags.forEach(setting => {\n            if (!t._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._disable(setting);\n                } else {\n                    this._gl._enable(setting);\n                }\n            }\n        });\n    }\n\n    static getDefaultSettings() {\n        if (!this._defaultSettings) {\n            this._defaultSettings = new Map();\n            const d = this._defaultSettings;\n            const g = WebGLRenderingContext.prototype;\n            d.set(\"viewport\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"scissor\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"blendColor\", [0, 0, 0, 0]);\n            d.set(\"blendEquation\", [g.FUNC_ADD]);\n            d.set(\"blendEquationSeparate\", [g.FUNC_ADD, g.FUNC_ADD]);\n            d.set(\"blendFunc\", [g.ONE, g.ZERO]);\n            d.set(\"blendFuncSeparate\", [g.ONE, g.ZERO, g.ONE, g.ZERO]);\n            d.set(\"clearColor\", [0, 0, 0, 0]);\n            d.set(\"clearDepth\", [1]);\n            d.set(\"clearStencil\", [0]);\n            d.set(\"colorMask\", [true, true, true, true]);\n            d.set(\"cullFace\", [g.BACK]);\n            d.set(\"depthFunc\", [g.LESS]);\n            d.set(\"depthMask\", [true]);\n            d.set(\"depthRange\", [0, 1]);\n            d.set(\"frontFace\", [g.CCW]);\n            d.set(\"lineWidth\", [1]);\n            d.set(\"polygonOffset\", [0, 0]);\n            d.set(\"sampleCoverage\", [1, false]);\n            d.set(\"stencilFunc\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFront\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFrontAndBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"stencilMask\", [1]);\n            d.set(\"_stencilMaskSeparateFront\", [1]);\n            d.set(\"_stencilMaskSeparateBack\", [1]);\n            d.set(\"_stencilMaskSeparateFrontAndBack\", [1]);\n            d.set(\"stencilOp\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFront\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFrontAndBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"vertexAttrib1f\", []);\n            d.set(\"vertexAttrib1fv\", []);\n            d.set(\"vertexAttrib2f\", []);\n            d.set(\"vertexAttrib2fv\", []);\n            d.set(\"vertexAttrib3f\", []);\n            d.set(\"vertexAttrib3fv\", []);\n            d.set(\"vertexAttrib4f\", []);\n            d.set(\"vertexAttrib4fv\", []);\n        }\n        return this._defaultSettings\n    }\n\n    static _getTextureTargetIndex(target) {\n        switch(target) {\n            case 0x0DE1:\n                /* TEXTURE_2D */\n                return 0;\n            case 0x8513:\n                /* TEXTURE_CUBE_MAP */\n                return 1;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown texture target: ' + target);\n        }\n    }\n\n    static _getTextureTargetByIndex(index) {\n        if (!this._textureTargetIndices) {\n            this._textureTargetIndices = [0x0DE1, 0x8513];\n        }\n        return this._textureTargetIndices[index]\n    }\n\n    static _getTextureIndex(index) {\n        return index - 0x84C0 /* GL_TEXTURE0 */;\n    }\n\n    static _getTextureByIndex(index) {\n        return index + 0x84C0;\n    }\n\n    static _getPixelStoreiIndex(pname) {\n        switch(pname) {\n            case 0x0D05:\n                /* PACK_ALIGNMENT */\n                return 0;\n            case 0x0CF5:\n                /* UNPACK_ALIGNMENT */\n                return 1;\n            case 0x9240:\n                /* UNPACK_FLIP_Y_WEBGL */\n                return 2;\n            case 0x9241:\n                /* UNPACK_PREMULTIPLY_ALPHA_WEBGL */\n                return 3;\n            case 0x9243:\n                /* UNPACK_COLORSPACE_CONVERSION_WEBGL */\n                return 4;\n                //@todo: support WebGL2 properties, see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei\n            case 0x9245:\n                /* UNPACK_FLIP_BLUE_RED */\n                return 5;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown pixelstorei: ' + pname);\n        }\n    }\n\n    static _getPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiIndices) {\n            this._pixelStoreiIndices = [0x0D05, 0x0CF5, 0x9240, 0x9241, 0x9243];\n        }\n        return this._pixelStoreiIndices[index]\n    }\n\n    static _getDefaultPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiDefaults) {\n            this._pixelStoreiDefaults = [4, 4, false, false, WebGLRenderingContext.prototype.BROWSER_DEFAULT_WEBGL];\n        }\n        return this._pixelStoreiDefaults[index]\n    }\n}\n\nclass WebGLStateManager {\n\n    _initStateManager(id = \"default\") {\n        this._states = {};\n        this._state = this._getState(id);\n    }\n\n    _getState(id) {\n        if (!this._states[id]) {\n            this._states[id] = new WebGLState(id, this);\n        }\n        return this._states[id];\n    }\n\n    switchState(id = \"default\") {\n        if (this._state._id !== id) {\n            const newState = this._getState(id);\n            this._state.migrate(newState);\n            this._state = newState;\n        }\n    }\n\n    $useProgram(program) {\n        if (this._state.setProgram(program))\n            this._useProgram(program);\n    }\n\n    $bindBuffer(target, fb) {\n        if (this._state.setBuffer(target, fb))\n            this._bindBuffer(target, fb);\n    }\n\n    $bindFramebuffer(target, fb) {\n        if (this._state.setFramebuffer(target, fb))\n            this._bindFramebuffer(target, fb);\n    }\n\n    $bindRenderbuffer(target, fb) {\n        if (this._state.setRenderbuffer(target, fb))\n            this._bindRenderbuffer(target, fb);\n    }\n\n    $enable(cap) {\n        if (this._state.setFlag(cap, true))\n            this._enable(cap);\n    }\n\n    $disable(cap) {\n        if (this._state.setFlag(cap, false))\n            this._disable(cap);\n    }\n\n    $viewport(x, y, w, h) {\n        if (this._state.setSetting(this._viewport, [x, y, w, h]))\n            this._viewport(x, y, w, h);\n    }\n\n    $scissor(x, y, w, h) {\n        if (this._state.setSetting(this._scissor, [x, y, w, h]))\n            this._scissor(x, y, w, h);\n    }\n\n    $disableVertexAttribArray(index) {\n        if (this._state.disableVertexAttribArray(index))\n            this._disableVertexAttribArray(index);\n    }\n\n    $enableVertexAttribArray(index) {\n        if (this._state.enableVertexAttribArray(index))\n            this._enableVertexAttribArray(index);\n    }\n\n    $vertexAttribPointer(index, size, type, normalized, stride, offset) {\n        if (this._state.vertexAttribPointer(index, [size, type, normalized, stride, offset]))\n            this._vertexAttribPointer(index, size, type, normalized, stride, offset);\n    }\n\n    $activeTexture(texture) {\n        if (this._state.setActiveTexture(texture))\n            this._activeTexture(texture);\n    }\n\n    $bindTexture(target, texture) {\n        if (this._state.bindTexture(target, texture))\n            this._bindTexture(target, texture);\n    }\n\n    $pixelStorei(pname, param) {\n        if (this._state.setPixelStorei(pname, param)) {\n            this._pixelStorei(pname, param);\n        }\n    }\n\n    $stencilFuncSeparate(face, func, ref, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilFuncSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilFuncSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilFuncSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [func, ref, mask]))\n            f.apply(this, [func, ref, mask]);\n    }\n\n    _stencilFuncSeparateFront(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT, func, ref, mask);\n    }\n\n    _stencilFuncSeparateBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.BACK, func, ref, mask);\n    }\n\n    _stencilFuncSeparateFrontAndBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT_AND_BACK, func, ref, mask);\n    }\n\n    $stencilMaskSeparate(face, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilMaskSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilMaskSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilMaskSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [mask]))\n            f.apply(this, [mask]);\n    }\n\n    _stencilMaskSeparateFront(mask) {\n        this._stencilMaskSeparate(this.FRONT, mask);\n    }\n\n    _stencilMaskSeparateBack(mask) {\n        this._stencilMaskSeparate(this.BACK, mask);\n    }\n\n    _stencilMaskSeparateFrontAndBack(mask) {\n        this._stencilMaskSeparate(this.FRONT_AND_BACK, mask);\n    }\n\n    $stencilOpSeparate(face, fail, zfail, zpass) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilOpSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilOpSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilOpSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [fail, zfail, zpass]))\n            f.apply(this, [fail, zfail, zpass]);\n    }\n\n    _stencilOpSeparateFront(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.BACK, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateFrontAndBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT_AND_BACK, fail, zfail, zpass);\n    }\n\n    $blendColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._blendColor, [red, green, blue, alpha]))\n            this._blendColor(red, green, blue, alpha);\n    }\n\n    $blendEquation(mode) {\n        if (this._state.setSetting(this._blendEquation, [mode]))\n            this._blendEquation(mode);\n    }\n\n    $blendEquationSeparate(modeRGB, modeAlpha) {\n        if (this._state.setSetting(this._blendEquationSeparate, [modeRGB, modeAlpha]))\n            this._blendEquationSeparate(modeRGB, modeAlpha);\n    }\n\n    $blendFunc(sfactor, dfactor) {\n        if (this._state.setSetting(this._blendFunc, [sfactor, dfactor]))\n            this._blendFunc(sfactor, dfactor);\n    }\n\n    $blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha) {\n        if (this._state.setSetting(this._blendFuncSeparate, [srcRGB, dstRGB, srcAlpha, dstAlpha]))\n            this._blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n    }\n\n    $clearColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._clearColor, [red, green, blue, alpha]))\n            this._clearColor(red, green, blue, alpha);\n    }\n\n    $clearDepth(depth) {\n        if (this._state.setSetting(this._clearDepth, [depth]))\n            this._clearDepth(depth);\n    }\n\n    $clearStencil(s) {\n        if (this._state.setSetting(this._clearStencil, [s]))\n            this._clearStencil(s);\n    }\n\n    $colorMask(red, green, blue, alpha) {\n        if (this._state.setSetting(this._colorMask, [red, green, blue, alpha]))\n            this._colorMask(red, green, blue, alpha);\n    }\n\n    $cullFace(mode) {\n        if (this._state.setSetting(this._cullFace, [mode]))\n            this._cullFace(mode);\n    }\n\n    $depthFunc(func) {\n        if (this._state.setSetting(this._depthFunc, [func]))\n            this._depthFunc(func);\n    }\n\n    $depthMask(flag) {\n        if (this._state.setSetting(this._depthMask, [flag]))\n            this._depthMask(flag);\n    }\n\n    $depthRange(zNear, zFar) {\n        if (this._state.setSetting(this._depthRange, [zNear, zFar]))\n            this._depthRange(zNear, zFar);\n    }\n\n    $frontFace(mode) {\n        if (this._state.setSetting(this._frontFace, [mode]))\n            this._frontFace(mode);\n    }\n\n    $lineWidth(width) {\n        if (this._state.setSetting(this._lineWidth, [width]))\n            this._lineWidth(width);\n    }\n\n    $polygonOffset(factor, units) {\n        if (this._state.setSetting(this._polygonOffset, [factor, units]))\n            this._polygonOffset(factor, units);\n    }\n\n    $sampleCoverage(value, invert) {\n        if (this._state.setSetting(this._sampleCoverage, [value, invert]))\n            this._sampleCoverage(value, invert);\n    }\n\n    $stencilFunc(func, ref, mask) {\n        if (this._state.setSetting(this._stencilFunc, [func, ref, mask]))\n            this._stencilFunc(func, ref, mask);\n    }\n\n    $stencilMask(mask) {\n        if (this._state.setSetting(this._stencilMask, [mask]))\n            this._stencilMask(mask);\n    }\n\n    $stencilOp(fail, zfail, zpass) {\n        if (this._state.setSetting(this._stencilOp, [fail, zfail, zpass]))\n            this._stencilOp(fail, zfail, zpass);\n    }\n\n    $vertexAttrib1f(indx, x) {\n        if (this._state.setSetting(this._vertexAttrib1f, [indx, x]))\n            this._vertexAttrib1f(indx, x);\n    }\n\n    $vertexAttrib1fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib1fv, [indx, values]))\n            this._vertexAttrib1fv(indx, values);\n    }\n\n    $vertexAttrib2f(indx, x, y) {\n        if (this._state.setSetting(this._vertexAttrib2f, [indx, x, y]))\n            this._vertexAttrib2f(indx, x, y);\n    }\n\n    $vertexAttrib2fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib2fv, [indx, values]))\n            this._vertexAttrib2fv(indx, values);\n    }\n\n    $vertexAttrib3f(indx, x, y, z) {\n        if (this._state.setSetting(this._vertexAttrib3f, [indx, x, y, z]))\n            this._vertexAttrib3f(indx, x, y, z);\n    }\n\n    $vertexAttrib3fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib3fv, [indx, values]))\n            this._vertexAttrib3fv(indx, values);\n    }\n\n    $vertexAttrib4f(indx, x, y, z, w) {\n        if (this._state.setSetting(this._vertexAttrib4f, [indx, x, y, z, w]))\n            this._vertexAttrib4f(indx, x, y, z, w);\n    }\n\n    $vertexAttrib4fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib4fv, [indx, values]))\n            this._vertexAttrib4fv(indx, values);\n    }\n\n    /**\n     * Sets up the rendering context for context sharing.\n     * @param {WebGLRenderingContext} gl\n     * @param {string} id\n     */\n    static enable(gl, id = \"default\") {\n        const names = Object.getOwnPropertyNames(WebGLStateManager.prototype);\n        const WebGLRenderingContextProto = gl.__proto__;\n        names.forEach(name => {\n            if (name !== \"constructor\") {\n                const method = WebGLStateManager.prototype[name];\n                if (name.charAt(0) === \"$\") {\n                    name = name.substr(1);\n                }\n                if (gl[name] !== method) {\n                    if (gl[name]) {\n                        if (!gl[name].name) {\n                            // We do this for compatibility with the Chrome WebGL Inspector plugin.\n                            gl[name].xname = name;\n                        }\n                        gl['_' + name] = gl[name];\n                    }\n                    gl[name] = method;\n                }\n            }\n        });\n\n        WebGLStateManager.prototype._initStateManager.call(gl, id);\n\n        return gl;\n    }\n\n}\n\nexport default WebGLStateManager;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from \"./TextureSource.mjs\";\nimport Stage from './Stage.mjs';\n\nexport default class TextureManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        /**\n         * The currently used amount of texture memory.\n         * @type {number}\n         */\n        this._usedMemory = 0;\n\n        /**\n         * All uploaded texture sources.\n         * @type {TextureSource[]}\n         */\n        this._uploadedTextureSources = [];\n\n        /**\n         * The texture source lookup id to texture source hashmap.\n         * @type {Map<String, TextureSource>}\n         */\n        this.textureSourceHashmap = new Map();\n\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            this._nativeFreeTextureSource(this._uploadedTextureSources[i]);\n        }\n        \n        this.textureSourceHashmap.clear();\n        this._usedMemory = 0;\n    }\n\n    getReusableTextureSource(id) {\n        return this.textureSourceHashmap.get(id);\n    }\n\n    getTextureSource(func, id) {\n        // Check if texture source is already known.\n        let textureSource = id ? this.textureSourceHashmap.get(id) : null;\n        if (!textureSource) {\n            // Create new texture source.\n            textureSource = new TextureSource(this, func);\n\n            if (id) {\n                textureSource.lookupId = id;\n                this.textureSourceHashmap.set(id, textureSource);\n            }\n        }\n\n        return textureSource;\n    }\n\n    uploadTextureSource(textureSource, options) {\n        if (textureSource.isLoaded()) return;\n\n        this._addMemoryUsage(textureSource.w * textureSource.h);\n\n        // Load texture.\n        const nativeTexture = this._nativeUploadTextureSource(textureSource, options);\n\n        textureSource._nativeTexture = nativeTexture;\n\n        // We attach w and h to native texture (we need it in CoreRenderState._isRenderTextureReusable).\n        nativeTexture.w = textureSource.w;\n        nativeTexture.h = textureSource.h;\n\n        nativeTexture.update = this.stage.frameCounter;\n\n        this._uploadedTextureSources.push(textureSource);\n        \n        this.addToLookupMap(textureSource);\n\n        // add VRAM tracking if using the webgl renderer\n        this._updateVramUsage(textureSource, 1);\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n\n    _updateVramUsage(textureSource, sign) {\n        const nativeTexture = textureSource.nativeTexture;\n        var usage;\n\n        // do nothing if webgl isn't even supported\n        if (!Stage.isWebglSupported())\n            return;\n\n        // or if there is no native texture\n        if (!textureSource.isLoaded())\n            return;\n\n        // or, finally, if there is no bytes per pixel specified\n        if (!nativeTexture.hasOwnProperty('bytesPerPixel') || isNaN(nativeTexture.bytesPerPixel))\n            return;\n\n        usage = sign * (textureSource.w * textureSource.h * nativeTexture.bytesPerPixel);\n\n        this.stage.addVramUsage(usage, textureSource.hasAlpha);\n    }\n\n    addToLookupMap(textureSource) {\n        const lookupId = textureSource.lookupId;\n        if (lookupId) {\n            if (!this.textureSourceHashmap.has(lookupId)) {\n                this.textureSourceHashmap.set(lookupId, textureSource);\n            }\n        }\n    }\n\n    gc() {\n        this.freeUnusedTextureSources();\n    }\n    \n    freeUnusedTextureSources() {\n        let remainingTextureSources = [];\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            let ts = this._uploadedTextureSources[i];\n            if (ts.allowCleanup()) {\n                this._freeManagedTextureSource(ts);\n            } else {\n                remainingTextureSources.push(ts);\n            }\n        }\n\n        this._uploadedTextureSources = remainingTextureSources;\n\n        this._cleanupLookupMap();\n    }\n\n    _freeManagedTextureSource(textureSource) {\n        if (textureSource.isLoaded()) {\n            this._nativeFreeTextureSource(textureSource);\n            this._addMemoryUsage(-textureSource.w * textureSource.h);\n\n            // add VRAM tracking if using the webgl renderer\n            this._updateVramUsage(textureSource, -1);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _cleanupLookupMap() {\n        // We keep those that still have value (are being loaded or already loaded, or are likely to be reused).\n        this.textureSourceHashmap.forEach((textureSource, lookupId) => {\n            if (!(textureSource.isLoaded() || textureSource.isLoading()) && !textureSource.isUsed()) {\n                this.textureSourceHashmap.delete(lookupId);\n            }\n        });\n    }\n\n    /**\n     * Externally free texture source.\n     * @param textureSource\n     */\n    freeTextureSource(textureSource) {\n        const index = this._uploadedTextureSources.indexOf(textureSource);\n        const managed = (index !== -1);\n\n        if (textureSource.isLoaded()) {\n            if (managed) {\n                this._addMemoryUsage(-textureSource.w * textureSource.h);\n                this._uploadedTextureSources.splice(index, 1);\n            }\n            this._nativeFreeTextureSource(textureSource);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _nativeUploadTextureSource(textureSource, options) {\n        return this.stage.renderer.uploadTextureSource(textureSource, options);\n    }\n\n    _nativeFreeTextureSource(textureSource) {\n        this.stage.renderer.freeTextureSource(textureSource);\n        textureSource.clearNativeTexture();\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows throttling of loading texture sources, keeping the app responsive.\n */\nexport default class TextureThrottler {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.genericCancelCb = (textureSource) => {\n            this._remove(textureSource);\n        };\n\n        this._sources = [];\n        this._data = [];\n    }\n\n    destroy() {\n        this._sources = [];\n        this._data = [];\n        this.stage = null;\n\n        delete this._sources;\n        delete this._data;\n        delete this.stage;\n    }\n\n    processSome() {\n        if (this._sources.length) {\n            const start = Date.now();\n            do {\n                this._processItem();\n            } while(this._sources.length && (Date.now() - start < TextureThrottler.MAX_UPLOAD_TIME_PER_FRAME));\n        }\n    }\n\n    _processItem() {\n        const source = this._sources.pop();\n        const data = this._data.pop();\n        if (source.isLoading()) {\n            source.processLoadedSource(data);\n        }\n    }\n\n    add(textureSource, data) {\n        this._sources.push(textureSource);\n        this._data.push(data);\n    }\n\n    _remove(textureSource) {\n        const index = this._sources.indexOf(textureSource);\n        if (index >= 0) {\n            this._sources.splice(index, 1);\n            this._data.splice(index, 1);\n        }\n    }\n\n}\n\nTextureThrottler.MAX_UPLOAD_TIME_PER_FRAME = 10;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreContext {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.root = null;\n\n        this.updateTreeOrder = 0;\n\n        this.renderState = this.stage.renderer.createCoreRenderState(this);\n\n        this.renderExec = this.stage.renderer.createCoreRenderExecutor(this);\n        this.renderExec.init();\n\n        this._usedMemory = 0;\n        this._renderTexturePool = [];\n\n        this._renderTextureId = 1;\n\n        this._zSorts = [];\n\n        this.renderToTextureCount = 0;\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        this._renderTexturePool.forEach(texture => this._freeRenderTexture(texture));\n        this._usedMemory = 0;\n\n        this.stage = null;\n        this.root = null;\n\n        this.renderState = null;\n        this.renderExec = null;\n        this._renderTexturePool = null;\n        this._zSorts = null;\n\n        delete this.stage;\n        delete this.root;\n        delete this.renderState;\n        delete this.renderExec;\n        delete this._renderTexturePool;\n        delete this._zSorts;\n    }\n\n    hasRenderUpdates() {\n        return !!this.root._parent._hasRenderUpdates;\n    }\n\n    render() {\n        // Clear flag to identify if anything changes before the next frame.\n        this.root._parent._hasRenderUpdates = 0;\n\n        this._render();\n    }\n\n    update() {\n        this._update();\n\n        // Due to the boundsVisibility flag feature (and onAfterUpdate hook), it is possible that other elements were\n        // changed during the update loop (for example due to the txLoaded event). We process these changes immediately\n        // (but not recursively to prevent infinite loops).\n        if (this.root._hasUpdates) {\n            this._update();\n        }\n\n        this._performForcedZSorts();\n    }\n\n    /**\n     * Certain ElementCore items may be forced to zSort to strip out references to prevent memleaks..\n     */\n    _performForcedZSorts() {\n        const n = this._zSorts.length;\n        if (n) {\n            // Forced z-sorts (ElementCore may force a z-sort in order to free memory/prevent memory leaks).\n            for (let i = 0, n = this._zSorts.length; i < n; i++) {\n                if (this._zSorts[i].zSort) {\n                    this._zSorts[i].sortZIndexedChildren();\n                }\n            }\n            this._zSorts = [];\n        }\n    }\n\n    _update() {\n        this.updateTreeOrder = 0;\n\n        this.root.update();\n    }\n\n    _render() {\n        const debugFrame = this.stage.getOption('debugFrame');\n        // Obtain a sequence of the quad operations.\n        this._fillRenderState();\n\n        if (this.stage.getOption('readPixelsBeforeDraw')) {\n            this._readPixels();\n        }\n\n        // Now run them with the render executor.\n        this._performRender();\n\n        if (debugFrame) {\n            console.log(`[Lightning] RTT Renders in frame: ${this.renderToTextureCount}`)\n        }\n\n        // Block OpenGL pipeline to prevent framebuffer flickering\n        // on certain devices\n        if (this.stage.getOption('readPixelsAfterDraw') &&\n            this.renderToTextureCount >= this.stage.getOption('readPixelsAfterDrawThreshold')\n        ) {\n            if (debugFrame) {\n                console.log(`[Lightning] readPixelsAfterDraw behavior triggered`)\n            }\n            this._readPixels();\n        }\n\n        this.renderToTextureCount = 0;\n    }\n\n    _readPixels() {\n        const pixels = new Uint8Array(4);\n        const gl = this.stage.gl;\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    }\n\n    _fillRenderState() {\n        this.renderState.reset();\n        this.root.render();\n        this.renderState.finish();\n    }\n\n    _performRender() {\n        this.renderExec.execute();\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n\n    allocateRenderTexture(w, h) {\n        let prec = this.stage.getRenderPrecision();\n        let pw = Math.max(1, Math.round(w * prec));\n        let ph = Math.max(1, Math.round(h * prec));\n\n        // Search last item first, so that last released render texture is preferred (may cause memory cache benefits).\n        const n = this._renderTexturePool.length;\n        for (let i = n - 1; i >= 0; i--) {\n            const texture = this._renderTexturePool[i];\n            // We don't want to reuse the same render textures within the same frame because that will create gpu stalls.\n            if (texture.w === pw && texture.h === ph && (texture.update !== this.stage.frameCounter)) {\n                texture.f = this.stage.frameCounter;\n                this._renderTexturePool.splice(i, 1);\n                return texture;\n            }\n        }\n\n        const texture = this._createRenderTexture(w, h, pw, ph);\n        texture.precision = prec;\n        return texture;\n    }\n\n    releaseRenderTexture(texture) {\n        this._renderTexturePool.push(texture);\n    }\n\n    freeUnusedRenderTextures(maxAge = 60) {\n        // Clean up all textures that are no longer used.\n        // This cache is short-lived because it is really just meant to supply running shaders that are\n        // updated during a number of frames.\n        let limit = this.stage.frameCounter - maxAge;\n\n        this._renderTexturePool = this._renderTexturePool.filter(texture => {\n            if (texture.f <= limit) {\n                this._freeRenderTexture(texture);\n                return false;\n            }\n            return true;\n        });\n    }\n\n    _createRenderTexture(w, h, pw, ph) {\n        this._addMemoryUsage(pw * ph);\n\n        const texture = this.stage.renderer.createRenderTexture(w, h, pw, ph);\n        texture.id = this._renderTextureId++;\n        texture.f = this.stage.frameCounter;\n        texture.ow = w;\n        texture.oh = h;\n        texture.w = pw;\n        texture.h = ph;\n\n        return texture;\n    }\n\n    _freeRenderTexture(nativeTexture) {\n        this.stage.renderer.freeRenderTexture(nativeTexture);\n        this._addMemoryUsage(-nativeTexture.w * nativeTexture.h);\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        this.stage.renderer.copyRenderTexture(renderTexture, nativeTexture, options);\n    }\n\n    forceZSort(elementCore) {\n        this._zSorts.push(elementCore);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class TransitionSettings {\n    constructor(stage) {\n        this.stage = stage;\n        this._timingFunction = 'ease';\n        this._timingFunctionImpl = StageUtils.getTimingFunction(this._timingFunction);\n        this.delay = 0;\n        this.duration = 0.2;\n        this.merger = null;\n    }\n\n    get timingFunction() {\n        return this._timingFunction;\n    }\n\n    set timingFunction(v) {\n        this._timingFunction = v;\n        this._timingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get timingFunctionImpl() {\n        return this._timingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n}\n\nTransitionSettings.prototype.isTransitionSettings = true;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TransitionManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All transitions that are running and attached.\n         * (we don't support transitions on un-attached elements to prevent memory leaks)\n         * @type {Set<Transition>}\n         */\n        this.active = new Set();\n\n        this.defaultTransitionSettings = new TransitionSettings(this.stage);\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                a.progress(dt);\n                if (!a.isRunning()) {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => (t.isRunning())));\n            }\n        }\n    }\n\n    createSettings(settings) {\n        const transitionSettings = new TransitionSettings();\n        Base.patchObject(transitionSettings, settings);\n        return transitionSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n\n    removeActive(transition) {\n        this.active.delete(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport TransitionSettings from \"./TransitionSettings.mjs\";\nimport Transition from \"./Transition.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class MultiSpline {\n\n    constructor() {\n        this._clear();\n    }\n\n    _clear() {\n        this._p = [];\n        this._pe = [];\n        this._idp = [];\n        this._f = [];\n        this._v = [];\n        this._lv = [];\n        this._sm = [];\n        this._s = [];\n        this._ve = [];\n        this._sme = [];\n        this._se = [];\n\n        this._length = 0;\n    }\n\n    parse(rgba, def) {\n        let i, n;\n        if (!Utils.isObjectLiteral(def)) {\n            def = {0: def}\n        }\n\n        let defaultSmoothness = 0.5;\n\n        let items = [];\n        for (let key in def) {\n            if (def.hasOwnProperty(key)) {\n                let obj = def[key];\n                if (!Utils.isObjectLiteral(obj)) {\n                    obj = {v: obj}\n                }\n\n                let p = parseFloat(key);\n\n                if (key === \"sm\") {\n                    defaultSmoothness = obj.v;\n                } else if (!isNaN(p) && p >= 0 && p <= 2) {\n                    obj.p = p;\n\n                    obj.f = Utils.isFunction(obj.v);\n                    obj.lv = obj.f ? obj.v(0, 0) : obj.v;\n\n                    items.push(obj);\n                }\n            }\n        }\n\n        // Sort by progress value.\n        items = items.sort(function(a, b) {return a.p - b.p});\n\n        n = items.length;\n\n        for (i = 0; i < n; i++) {\n            let last = (i === n - 1);\n            if (!items[i].hasOwnProperty('pe')) {\n                // Progress.\n                items[i].pe = last ? (items[i].p <= 1 ? 1 : 2 /* support onetotwo stop */) : items[i + 1].p;\n            } else {\n                // Prevent multiple items at the same time.\n                const max = i < n - 1 ? items[i + 1].p : 1;\n                if (items[i].pe > max) {\n                    items[i].pe = max;\n                }\n            }\n            if (items[i].pe === items[i].p) {\n                items[i].idp = 0;\n            } else {\n                items[i].idp = 1 / (items[i].pe - items[i].p);\n            }\n        }\n\n        // Color merger: we need to split/combine RGBA components.\n\n        // Calculate bezier helper values.;\n        for (i = 0; i < n; i++) {\n            if (!items[i].hasOwnProperty('sm')) {\n                // Smoothness.;\n                items[i].sm = defaultSmoothness;\n            }\n            if (!items[i].hasOwnProperty('s')) {\n                // Slope.;\n                if (i === 0 || i === n - 1 || (items[i].p === 1 /* for onetotwo */)) {\n                    // Horizontal slope at start and end.;\n                    items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                } else {\n                    const pi = items[i - 1];\n                    const ni = items[i + 1];\n                    if (pi.p === ni.p) {\n                        items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                    } else {\n                        if (rgba) {\n                            const nc = MultiSpline.getRgbaComponents(ni.lv);\n                            const pc = MultiSpline.getRgbaComponents(pi.lv);\n                            const d = 1 / (ni.p - pi.p);\n                            items[i].s = [\n                                d * (nc[0] - pc[0]),\n                                d * (nc[1] - pc[1]),\n                                d * (nc[2] - pc[2]),\n                                d * (nc[3] - pc[3])\n                            ];\n                        } else {\n                            items[i].s = (ni.lv - pi.lv) / (ni.p - pi.p);\n                        }\n                    }\n                }\n            }\n        }\n\n        for (i = 0; i < n - 1; i++) {\n            // Calculate value function.;\n            if (!items[i].f) {\n\n                let last = (i === n - 1);\n                if (!items[i].hasOwnProperty('ve')) {\n                    items[i].ve = last ? items[i].lv : items[i + 1].lv;\n                }\n\n                // We can only interpolate on numeric values. Non-numeric values are set literally when reached time.\n                if (Utils.isNumber(items[i].v) && Utils.isNumber(items[i].lv)) {\n                    if (!items[i].hasOwnProperty('sme')) {\n                        items[i].sme = last ? defaultSmoothness : items[i + 1].sm;\n                    }\n                    if (!items[i].hasOwnProperty('se')) {\n                        items[i].se = last ? (rgba ? [0, 0, 0, 0] : 0) : items[i + 1].s;\n                    }\n\n                    // Generate spline.;\n                    if (rgba) {\n                        items[i].v = MultiSpline.getSplineRgbaValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    } else {\n                        items[i].v = MultiSpline.getSplineValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    }\n\n                    items[i].f = true;\n                }\n            }\n        }\n\n        if (this.length) {\n            this._clear();\n        }\n\n        for (i = 0, n = items.length; i < n; i++) {\n            this._add(items[i]);\n        }\n    }\n\n    _add(item) {\n        this._p.push(item.p || 0);\n        this._pe.push(item.pe || 0);\n        this._idp.push(item.idp || 0);\n        this._f.push(item.f || false);\n        this._v.push(item.hasOwnProperty('v') ? item.v : 0 /* v might be false or null */ );\n        this._lv.push(item.lv || 0);\n        this._sm.push(item.sm || 0);\n        this._s.push(item.s || 0);\n        this._ve.push(item.ve || 0);\n        this._sme.push(item.sme || 0);\n        this._se.push(item.se || 0);\n        this._length++;\n    }\n\n    _getItem(p) {\n        const n = this._length;\n        if (!n) {\n            return -1;\n        }\n\n        if (p < this._p[0]) {\n            return 0;\n        }\n\n        for (let i = 0; i < n; i++) {\n            if (this._p[i] <= p && p < this._pe[i]) {\n                return i;\n            }\n        }\n\n        return n - 1;\n    }\n\n    getValue(p) {\n        const i = this._getItem(p);\n        if (i === -1) {\n            return undefined;\n        } else {\n            if (this._f[i]) {\n                const o = Math.min(1, Math.max(0, (p - this._p[i]) * this._idp[i]));\n                return this._v[i](o);\n            } else {\n                return this._v[i];\n            }\n        }\n    }\n\n    get length() {\n        return this._length;\n    }\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getSplineValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1 *= dp;\n        s2 *= dp;\n\n        let helpers = MultiSpline.getSplineHelpers(v1, v2, o1, i2, s1, s2);\n        if (!helpers) {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return v2 * p + v1 * (1 - p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n                return MultiSpline.calculateSpline(helpers, p);\n            };\n        }\n    };\n\n    static getSplineRgbaValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1[0] *= dp;\n        s1[1] *= dp;\n        s1[2] *= dp;\n        s1[3] *= dp;\n        s2[0] *= dp;\n        s2[1] *= dp;\n        s2[2] *= dp;\n        s2[3] *= dp;\n\n        let cv1 = MultiSpline.getRgbaComponents(v1);\n        let cv2 = MultiSpline.getRgbaComponents(v2);\n\n        let helpers = [\n            MultiSpline.getSplineHelpers(cv1[0], cv2[0], o1, i2, s1[0], s2[0]),\n            MultiSpline.getSplineHelpers(cv1[1], cv2[1], o1, i2, s1[1], s2[1]),\n            MultiSpline.getSplineHelpers(cv1[2], cv2[2], o1, i2, s1[2], s2[2]),\n            MultiSpline.getSplineHelpers(cv1[3], cv2[3], o1, i2, s1[3], s2[3])\n        ];\n\n        if (!helpers[0]) {\n            return function (p) {\n                // Linear.\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.mergeColors(v2, v1, p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.getArgbNumber([\n                    Math.min(255, MultiSpline.calculateSpline(helpers[0], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[1], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[2], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[3], p))\n                ]);\n            };\n        }\n\n    };\n\n    /**\n     * Creates helpers to be used in the spline function.\n     * @param {number} v1\n     *   From value.\n     * @param {number} v2\n     *   To value.\n     * @param {number} o1\n     *   From smoothness (0 = linear, 1 = smooth).\n     * @param {number} s1\n     *   From slope (0 = horizontal, infinite = vertical).\n     * @param {number} i2\n     *   To smoothness.\n     * @param {number} s2\n     *   To slope.\n     * @returns {Number[]}\n     *   The helper values to be supplied to the spline function.\n     *   If the configuration is actually linear, null is returned.\n     */\n    static getSplineHelpers(v1, v2, o1, i2, s1, s2) {\n        if (!o1 && !i2) {\n            // Linear.\n            return null;\n        }\n\n        // Cubic bezier points.\n        // http://cubic-bezier.com/\n        let csx = o1;\n        let csy = v1 + s1 * o1;\n        let cex = 1 - i2;\n        let cey = v2 - s2 * i2;\n\n        let xa = 3 * csx - 3 * cex + 1;\n        let xb = -6 * csx + 3 * cex;\n        let xc = 3 * csx;\n\n        let ya = 3 * csy - 3 * cey + v2 - v1;\n        let yb = 3 * (cey + v1) - 6 * csy;\n        let yc = 3 * (csy - v1);\n        let yd = v1;\n\n        return [xa, xb, xc, ya, yb, yc, yd];\n    };\n\n    /**\n     * Calculates the intermediate spline value based on the specified helpers.\n     * @param {number[]} helpers\n     *   Obtained from getSplineHelpers.\n     * @param {number} p\n     * @return {number}\n     */\n    static calculateSpline(helpers, p) {\n        let xa = helpers[0];\n        let xb = helpers[1];\n        let xc = helpers[2];\n        let ya = helpers[3];\n        let yb = helpers[4];\n        let yc = helpers[5];\n        let yd = helpers[6];\n\n        if (xa === -2 && ya === -2 && xc === 0 && yc === 0) {\n            // Linear.\n            return p;\n        }\n\n        // Find t for p.\n        let t = 0.5, cbx, dx;\n\n        for (let it = 0; it < 20; it++) {\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c).\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            // Cubic bezier derivative function: f'(t)=t*(t*(3*a)+2*b)+c\n            let cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n            if (cbxd > 1e-10 && cbxd < 1e-10) {\n                // Problematic. Fall back to binary search method.\n                break;\n            }\n\n            t += dx / cbxd;\n        }\n\n        // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n        let minT = 0;\n        let maxT = 1;\n        for (let it = 0; it < 20; it++) {\n            t = 0.5 * (minT + maxT);\n\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c)+d.\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            if (dx < 0) {\n                maxT = t;\n            } else {\n                minT = t;\n            }\n        }\n\n        return t;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationActionSettings {\n\n    constructor(animationSettings) {\n\n        this.animationSettings = animationSettings;\n\n        /**\n         * The selector that selects the elements.\n         * @type {string}\n         */\n        this._selector = \"\";\n\n        /**\n         * The value items, ordered by progress offset.\n         * @type {MultiSpline}\n         * @private;\n         */\n        this._items = new MultiSpline();\n\n        /**\n         * The affected properties (paths).\n         * @private;\n         */\n        this._props = [];\n\n        /**\n         * Property setters, indexed according to props.\n         * @private;\n         */\n        this._propSetters = [];\n\n        this._resetValue = undefined;\n        this._hasResetValue = false;\n\n        this._hasColorProperty = undefined;\n    }\n\n    getResetValue() {\n        if (this._hasResetValue) {\n            return this._resetValue;\n        } else {\n            return this._items.getValue(0);\n        }\n    }\n\n    apply(element, p, factor) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this._items.getValue(p);\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        if (factor !== 1) {\n            // Stop factor.;\n            let sv = this.getResetValue();\n\n            if (Utils.isNumber(v) && Utils.isNumber(sv)) {\n                if (this.hasColorProperty()) {\n                    v = StageUtils.mergeColors(v, sv, factor);\n                } else {\n                    v = StageUtils.mergeNumbers(v, sv, factor);\n                }\n            }\n        }\n\n        // Apply transformation to all components.;\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    getAnimatedElements(element) {\n        return element.select(this._selector);\n    }\n\n    reset(element) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this.getResetValue();\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        // Apply transformation to all components.\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    set selector(v) {\n        this._selector = v;\n    }\n\n    set t(v) {\n        this.selector = v;\n    }\n\n    get resetValue() {\n        return this._resetValue;\n    }\n    \n    set resetValue(v) {\n        this._resetValue = v;\n        this._hasResetValue = (v !== undefined);\n    }\n\n    set rv(v) {\n        this.resetValue = v;\n    }\n\n    set value(v) {\n        this._items.parse(this.hasColorProperty(), v);\n    }\n\n    set v(v) {\n        this.value = v;\n    }\n\n    set properties(v) {\n        if (!Array.isArray(v)) {\n            v = [v];\n        }\n\n        this._props = [];\n\n        v.forEach((prop) => {\n            this._props.push(prop);\n            this._propSetters.push(Element.getSetter(prop));\n        });\n    }\n\n    set property(v) {\n        this._hasColorProperty = undefined;\n        this.properties = v;\n    }\n\n    set p(v) {\n        this.properties = v;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    hasColorProperty() {\n        if (this._hasColorProperty === undefined) {\n            this._hasColorProperty = this._props.length ? Element.isColorProperty(this._props[0]) : false;\n        }\n        return this._hasColorProperty;\n    }\n}\n\nAnimationActionSettings.prototype.isAnimationActionSettings = true;\n\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\nimport Element from \"../tree/Element.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport AnimationActionSettings from \"./AnimationActionSettings.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class AnimationSettings {\n    constructor() {\n        /**\n         * @type {AnimationActionSettings[]}\n         */\n        this._actions = [];\n\n        this.delay = 0;\n        this.duration = 1;\n\n        this.repeat = 0;\n        this.repeatOffset = 0;\n        this.repeatDelay = 0;\n\n        this.autostop = false;\n\n        this.stopMethod = AnimationSettings.STOP_METHODS.FADE;\n        this._stopTimingFunction = 'ease';\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(this._stopTimingFunction);\n        this.stopDuration = 0;\n        this.stopDelay = 0;\n    }\n\n    get actions() {\n        return this._actions;\n    }\n\n    set actions(v) {\n        this._actions = [];\n        for (let i = 0, n = v.length; i < n; i++) {\n            const e = v[i];\n            if (!e.isAnimationActionSettings) {\n                const aas = new AnimationActionSettings(this);\n                aas.patch(e);\n                this._actions.push(aas);\n            } else {\n                this._actions.push(e);\n            }\n        }\n    }\n\n    /**\n     * Applies the animation to the specified element, for the specified progress between 0 and 1.\n     * @param {Element} element;\n     * @param {number} p;\n     * @param {number} factor;\n     */\n    apply(element, p, factor = 1) {\n        this._actions.forEach(function(action) {\n            action.apply(element, p, factor);\n        });\n    }\n\n    /**\n     * Resets the animation to the reset values.\n     * @param {Element} element;\n     */\n    reset(element) {\n        this._actions.forEach(function(action) {\n            action.reset(element);\n        });\n    }\n\n    get stopTimingFunction() {\n        return this._stopTimingFunction;\n    }\n\n    set stopTimingFunction(v) {\n        this._stopTimingFunction = v;\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get stopTimingFunctionImpl() {\n        return this._stopTimingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nAnimationSettings.STOP_METHODS = {\n    FADE: 'fade',\n    REVERSE: 'reverse',\n    FORWARD: 'forward',\n    IMMEDIATE: 'immediate',\n    ONETOTWO: 'onetotwo'\n};\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\n\nexport default class Animation extends EventEmitter {\n\n    constructor(manager, settings, element) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._state = Animation.STATES.IDLE;\n\n        this._p = 0;\n        this._delayLeft = 0;\n        this._repeatsLeft = 0;\n\n        this._stopDelayLeft = 0;\n        this._stopP = 0;\n    }\n\n    start() {\n        if (this._element && this._element.attached) {\n            this._p = 0;\n            this._delayLeft = this.settings.delay;\n            this._repeatsLeft = this.settings.repeat;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('start');\n            this.checkActive();\n        } else {\n            console.warn(\"[Lightning] Element must be attached before starting animation\");\n        }\n    }\n\n    play() {\n        if (this._state === Animation.STATES.PAUSED) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.checkActive();\n            this.emit('resume');\n        } else if (this._state == Animation.STATES.STOPPING && this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('stopContinue');\n        } else if (this._state != Animation.STATES.PLAYING && this._state != Animation.STATES.FINISHED) {\n            // Restart.;\n            this.start();\n        }\n    }\n\n    pause() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._state = Animation.STATES.PAUSED;\n            this.emit('pause');\n        }\n    }\n\n    replay() {\n        if (this._state == Animation.STATES.FINISHED) {\n            this.start();\n        } else {\n            this.play();\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n        this._stopDelayLeft = 0;\n    }\n\n    finish() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._delayLeft = 0;\n            this._p = 1;\n        } else if (this._state === Animation.STATES.STOPPING) {\n            this._stopDelayLeft = 0;\n            this._p = 0;\n        }\n    }\n\n    stop() {\n        if (this._state === Animation.STATES.STOPPED || this._state === Animation.STATES.IDLE) return;\n\n        this._stopDelayLeft = this.settings.stopDelay || 0;\n\n        if (((this.settings.stopMethod === AnimationSettings.STOP_METHODS.IMMEDIATE) && !this._stopDelayLeft) || this._delayLeft > 0) {\n            // Stop upon next progress.;\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        } else {\n            if (this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                this._stopP = 0;\n            }\n\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        }\n\n        this.checkActive();\n    }\n\n    stopNow() {\n        if (this._state !== Animation.STATES.STOPPED || this._state !== Animation.STATES.IDLE) {\n            this._state = Animation.STATES.STOPPING;\n            this._p = 0;\n            this.emit('stop');\n            this.reset();\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        }\n    }\n\n    isPaused() {\n        return this._state === Animation.STATES.PAUSED;\n    }\n\n    isPlaying() {\n        return this._state === Animation.STATES.PLAYING;\n    }\n\n    isStopping() {\n        return this._state === Animation.STATES.STOPPING;\n    }\n\n    isFinished() {\n        return this._state === Animation.STATES.FINISHED;\n    }\n\n    checkActive() {\n        if (this.isActive()) {\n            this.manager.addActive(this);\n        }\n    }\n\n    isActive() {\n        return (this._state == Animation.STATES.PLAYING || this._state == Animation.STATES.STOPPING) && this._element && this._element.attached;\n    }\n\n    progress(dt) {\n        if (!this._element) return;\n        this._progress(dt);\n        this.apply();\n    }\n\n    _progress(dt) {\n        if (this._state == Animation.STATES.STOPPING) {\n            this._stopProgress(dt);\n            return;\n        }\n\n        if (this._state != Animation.STATES.PLAYING) {\n            return;\n        }\n\n        if (this._delayLeft > 0) {\n            this._delayLeft -= dt;\n\n            if (this._delayLeft < 0) {\n                dt = -this._delayLeft;\n                this._delayLeft = 0;\n\n                this.emit('delayEnd');\n            } else {\n                return;\n            }\n        }\n\n        if (this.settings.duration === 0) {\n            this._p = 1;\n        } else if (this.settings.duration > 0) {\n            this._p += dt / this.settings.duration;\n        }\n        if (this._p >= 1) {\n            // Finished!;\n            if (this.settings.repeat == -1 || this._repeatsLeft > 0) {\n                if (this._repeatsLeft > 0) {\n                    this._repeatsLeft--;\n                }\n                this._p = this.settings.repeatOffset;\n                this.emit('progress', this._p);\n                \n                if (this.settings.repeatDelay) {\n                    this._delayLeft = this.settings.repeatDelay;\n                }\n\n                this.emit('repeat', this._repeatsLeft);\n            } else {\n                this._p = 1;\n                this.emit('progress', this._p);\n                \n                this._state = Animation.STATES.FINISHED;\n                this.emit('finish');\n                if (this.settings.autostop) {\n                    this.stop();\n                }\n            }\n        } else {\n            this.emit('progress', this._p);\n        }\n    }\n    \n    _stopProgress(dt) {\n        let duration = this._getStopDuration();\n\n        if (this._stopDelayLeft > 0) {\n            this._stopDelayLeft -= dt;\n\n            if (this._stopDelayLeft < 0) {\n                dt = -this._stopDelayLeft;\n                this._stopDelayLeft = 0;\n\n                this.emit('stopDelayEnd');\n            } else {\n                return;\n            }\n        }\n        if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.IMMEDIATE) {\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            if (duration === 0) {\n                this._p = 0;\n            } else if (duration > 0) {\n                this._p -= dt / duration;\n            }\n\n            if (this._p <= 0) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FADE) {\n            this._progressStopTransition(dt);\n            if (this._stopP >= 1) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.ONETOTWO) {\n            if (this._p < 2) {\n                if (duration === 0) {\n                    this._p = 2;\n                } else if (duration > 0) {\n                    if (this._p < 1) {\n                        this._p += dt / this.settings.duration;\n                    } else {\n                        this._p += dt / duration;\n                    }\n                }\n                if (this._p >= 2) {\n                    this._p = 2;\n                    this._state = Animation.STATES.STOPPED;\n                    this.emit('stopFinish');\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n            if (this._p < 1) {\n                if (this.settings.duration == 0) {\n                    this._p = 1;\n                } else {\n                    this._p += dt / this.settings.duration;\n                }\n                if (this._p >= 1) {\n                    if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n                        this._p = 1;\n                        this._state = Animation.STATES.STOPPED;\n                        this.emit('stopFinish');\n                    } else {\n                        if (this._repeatsLeft > 0) {\n                            this._repeatsLeft--;\n                            this._p = 0;\n                            this.emit('repeat', this._repeatsLeft);\n                        } else {\n                            this._p = 1;\n                            this._state = Animation.STATES.STOPPED;\n                            this.emit('stopFinish');\n                        }\n                    }\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        }\n        \n    }\n    \n    _progressStopTransition(dt) {\n        if (this._stopP < 1) {\n            if (this._stopDelayLeft > 0) {\n                this._stopDelayLeft -= dt;\n\n                if (this._stopDelayLeft < 0) {\n                    dt = -this._stopDelayLeft;\n                    this._stopDelayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n            \n            const duration = this._getStopDuration();\n\n            if (duration == 0) {\n                this._stopP = 1;\n            } else {\n                this._stopP += dt / duration;\n            }\n            if (this._stopP >= 1) {\n                // Finished!;\n                this._stopP = 1;\n            }\n        }\n    }\n\n    _getStopDuration() {\n        return this.settings.stopDuration || this.settings.duration;\n    }\n\n    apply() {\n        if (this._state === Animation.STATES.STOPPED) {\n            this.reset();\n        } else {\n            let factor = 1;\n            if (this._state === Animation.STATES.STOPPING && this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                factor = (1 - this.settings.stopTimingFunctionImpl(this._stopP));\n            }\n            this._settings.apply(this._element, this._p, factor);\n        }\n    }\n\n    reset() {\n        this._settings.reset(this._element);\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get frame() {\n        return Math.round(this._p * this._settings.duration * 60);\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n}\n\nAnimation.STATES = {\n    IDLE: 0,\n    PLAYING: 1,\n    STOPPING: 2,\n    STOPPED: 3,\n    FINISHED: 4,\n    PAUSED: 5\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All running animations on attached subjects.\n         * @type {Set<Animation>}\n         */\n        this.active = new Set();\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                if (a.isActive()) {\n                    a.progress(dt);\n                } else {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => t.isActive()));\n            }\n        }\n    }\n\n    createAnimation(element, settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            // Convert plain object to proper settings object.\n            settings = this.createSettings(settings);\n        }\n\n        return new Animation(\n            this,\n            settings,\n            element\n        );\n    }\n\n    createSettings(settings) {\n        const animationSettings = new AnimationSettings();\n        Base.patchObject(animationSettings, settings);\n        return animationSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\nimport Animation from \"./Animation.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class RectangleTexture extends Texture {\n\n    _getLookupId() {\n        return '__whitepix';\n    }\n\n    _getSourceLoader() {\n        return function(cb) {\n            var whitePixel = new Uint8Array([255, 255, 255, 255]);\n            cb(null, {source: whitePixel, w: 1, h: 1, permanent: true});\n        }\n    }\n\n    isAutosizeTexture() {\n        return false;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Application render tree.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Utils from \"./Utils.mjs\";\nimport WebGLRenderer from \"../renderer/webgl/WebGLRenderer.mjs\";\nimport C2dRenderer from \"../renderer/c2d/C2dRenderer.mjs\";\nimport SparkRenderer from \"../renderer/spark/SparkRenderer.mjs\";\nimport PlatformLoader from \"../platforms/PlatformLoader.mjs\";\nimport WebGLStateManager from \"../tools/WebGLStateManager.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Stage extends EventEmitter {\n\n    constructor(options = {}) {\n        super();\n        this._setOptions(options);\n\n        this._usedMemory = 0;\n        this._lastGcFrame = 0;\n\n        // attempt to track VRAM usage more accurately by accounting for different color channels\n        this._usedVramAlpha = 0;\n        this._usedVramNonAlpha = 0;\n\n        const platformType = Stage.platform ? Stage.platform : PlatformLoader.load(options);\n        this.platform = new platformType();\n\n        if (this.platform.init) {\n            this.platform.init(this);\n        }\n\n        this.gl = null;\n        this.c2d = null;\n\n        const context = this.getOption('context');\n        if (context) {\n            if (context.useProgram) {\n                this.gl = context;\n            } else {\n                this.c2d = context;\n            }\n        } else {\n            if (Utils.isWeb && (!Stage.isWebglSupported() || this.getOption('canvas2d'))) {\n                this.c2d = this.platform.createCanvasContext(this.getOption('w'), this.getOption('h'));\n            } else {\n                this.gl = this.platform.createWebGLContext(this.getOption('w'), this.getOption('h'));\n            }\n        }\n\n        if (this.gl) {\n            // Wrap in WebGLStateManager.\n            // This prevents unnecessary double WebGL commands from being executed, and allows context switching.\n            // Context switching is necessary when reusing the same context for Three.js.\n            // Note that the user must make sure that the WebGL context is untouched before creating the application,\n            //  when manually passing over a canvas or context in the options.\n            WebGLStateManager.enable(this.gl, \"lightning\")\n        }\n\n        this._mode = this.gl ? 0 : 1;\n\n        // Override width and height.\n        if (this.getCanvas()) {\n            if (this.getOption('devicePixelRatio') !== 1) {\n                const ratio = this.getOption('devicePixelRatio');\n                // set correct display sie\n                this.getCanvas().style.width = this._options['w'] / ratio  + 'px';\n                this.getCanvas().style.height = this._options['h'] / ratio + 'px';\n            }\n\n            // set display buffer size\n            this._options.w = this.getCanvas().width;\n            this._options.h = this.getCanvas().height;\n        }\n\n        if (this._mode === 0) {\n            if (Utils.isSpark) {\n                this._renderer = new SparkRenderer(this);\n            } else {\n                this._renderer = new WebGLRenderer(this);\n            }\n        } else {\n            this._renderer = new C2dRenderer(this);\n        }\n\n        this.setClearColor(this.getOption('clearColor'));\n\n        this.frameCounter = 0;\n\n        this.transitions = new TransitionManager(this);\n        this.animations = new AnimationManager(this);\n\n        this.textureManager = new TextureManager(this);\n        this.textureThrottler = new TextureThrottler(this);\n\n        this.startTime = 0;\n        this.currentTime = 0;\n        this.dt = 0;\n\n        // Preload rectangle texture, so that we can skip some border checks for loading textures.\n        this.rectangleTexture = new RectangleTexture(this);\n        this.rectangleTexture.load();\n\n        // Never clean up because we use it all the time.\n        this.rectangleTexture.source.permanent = true;\n\n        this.ctx = new CoreContext(this);\n\n        this._updateSourceTextures = new Set();\n    }\n\n    get renderer() {\n        return this._renderer;\n    }\n\n    static isWebglSupported() {\n        if (Utils.isNode) {\n            return true;\n        }\n\n        try {\n            return !!window.WebGLRenderingContext;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns the rendering mode.\n     * @returns {number}\n     *  0: WebGL\n     *  1: Canvas2d\n     */\n    get mode() {\n        return this._mode;\n    }\n\n    isWebgl() {\n        return this.mode === 0;\n    }\n\n    isC2d() {\n        return this.mode === 1;\n    }\n\n    getOption(name) {\n        return this._options[name];\n    }\n\n    _setOptions(o) {\n        this._options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this._options[name] = def;\n            } else {\n                this._options[name] = value;\n            }\n        }\n\n        opt('canvas', null);\n        opt('context', null);\n        opt('w', 1920);\n        opt('h', 1080);\n        opt('srcBasePath', null);\n        opt('memoryPressure', 24e6);\n        opt('bufferMemory', 2e6);\n        opt('textRenderIssueMargin', 0);\n        opt('fontSharp', { precision: 0.6666666667, fontSize: 24 })\n        opt('clearColor', [0, 0, 0, 0]);\n        opt('defaultFontFace', 'sans-serif');\n        opt('fixedDt', 0);\n        opt('useImageWorker', true);\n        opt('autostart', true);\n        opt('precision', 1);\n        opt('canvas2d', false);\n        opt('platform', null);\n        opt('readPixelsBeforeDraw', false);\n        opt('devicePixelRatio', 1)       \n        opt('readPixelsAfterDraw', false);\n        opt('readPixelsAfterDrawThreshold', 0);\n        opt('debugFrame', false);\n        opt('forceTxCanvasSource', false);\n        opt('pauseRafLoopOnIdle', false);\n\n        if (o['devicePixelRatio'] != null && o['devicePixelRatio'] !== 1) {\n            this._options['precision'] *= o['devicePixelRatio']\n            this._options['w'] *= o['devicePixelRatio']\n            this._options['h'] *= o['devicePixelRatio']\n        }\n    }\n\n    setApplication(app) {\n        this.application = app;\n    }\n\n    init() {\n\n        if (this.application.getOption('debug') && this.platform._imageWorker) {\n            console.log('[Lightning] Using image worker!');\n        }\n\n        if (this.application.getOption('debug') && this.c2d) {\n            console.log('[Lightning] Using canvas2d renderer');\n        }\n\n        this.application.setAsRoot();\n        if (this.getOption('autostart')) {\n            this.platform.startLoop();\n        }\n    }\n\n    destroy() {\n        this.platform.stopLoop();\n        this.platform.destroy();\n        this.ctx.destroy();\n        this.textureManager.destroy();\n        this._renderer.destroy();\n\n        // clear last rendered frame\n        if (this.gl) {\n            this.gl.clearColor(0.0, 0.0, 0.0, 0.0);\n            this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n        } else if (this.c2d) {\n            this.c2d.clearRect(\n                0, 0, this.c2d.canvas.width, this.c2d.canvas.height\n            );\n        }\n\n        this.gl = null;\n        this.c2d = null;\n        this.ctx = null;\n        this._options = null;\n        this.platform = null;\n        this.textureManager = null;\n        this._renderer = null;\n\n        delete this.gl;\n        delete this.c2d;\n        delete this.ctx;\n        delete this._options;\n        delete this.platform;\n        delete this.textureManager;\n        delete this._renderer;\n    }\n\n    stop() {\n        this.platform.stopLoop();\n    }\n\n    resume() {\n        this.platform.startLoop();\n    }\n\n    get root() {\n        return this.application;\n    }\n\n    getCanvas() {\n        return this._mode ? this.c2d.canvas : this.gl.canvas;\n    }\n\n    getRenderPrecision() {\n        return this._options.precision;\n    }\n\n    /**\n     * Marks a texture for updating it's source upon the next drawFrame.\n     * @param texture\n     */\n    addUpdateSourceTexture(texture) {\n        if (this._updatingFrame) {\n            // When called from the upload loop, we must immediately load the texture in order to avoid a 'flash'.\n            texture._performUpdateSource();\n        } else {\n            this._updateSourceTextures.add(texture);\n        }\n    }\n\n    removeUpdateSourceTexture(texture) {\n        if (this._updateSourceTextures) {\n            this._updateSourceTextures.delete(texture);\n        }\n    }\n\n    hasUpdateSourceTexture(texture) {\n        return (this._updateSourceTextures && this._updateSourceTextures.has(texture));\n    }\n\n\n    _performUpdateSource() {\n        if (this._updateSourceTextures.size) {\n            this._updateSourceTextures.forEach(texture => {\n                texture._performUpdateSource();\n            });\n            this._updateSourceTextures = new Set();\n        }\n    }\n\n    _calculateDt() {\n        this.startTime = this.currentTime;\n        this.currentTime = this.platform.getHrTime();\n\n        if (this._options.fixedDt) {\n            this.dt = this._options.fixedDt;\n        } else {\n            this.dt = (!this.startTime) ? .02 : .001 * (this.currentTime - this.startTime);\n        }\n    }\n\n    updateFrame() {\n        this._calculateDt();\n        this.emit('frameStart');\n        this._performUpdateSource();\n        this.emit('update');\n    }\n\n    idleFrame() {\n        this.textureThrottler.processSome();\n        this.emit('frameEnd');\n        this.frameCounter++;\n    }\n\n    onIdle() {\n        this.emit('idle');\n    }\n\n    renderFrame() {\n        const changes = this.ctx.hasRenderUpdates();\n\n        // Update may cause textures to be loaded in sync, so by processing them here we may be able to show them\n        // during the current frame already.\n        this.textureThrottler.processSome();\n\n        if (changes) {\n            this._updatingFrame = true;\n            this.ctx.update();\n            this.ctx.render();\n            this._updatingFrame = false;\n        }\n\n        this.platform.nextFrame(changes);\n\n        this.emit('frameEnd');\n\n        this.frameCounter++;\n    }\n\n    isUpdatingFrame() {\n        return this._updatingFrame;\n    }\n\n    drawFrame() {\n        // Maintain original functionality of `drawFrame()` while retaining the\n        // RAF mitigration feature from: https://github.com/rdkcentral/Lightning/pull/402\n        // The full functionality of this method is relied directly by our own unit tests and\n        // the unit tests of third party users\n        this.updateFrame();\n        this.renderFrame();\n    }\n\n    forceRenderUpdate() {\n        // Enforce re-rendering.\n        if (this.root) {\n            this.root.core._parent.setHasRenderUpdates(1);\n        }\n    }\n\n    setClearColor(clearColor) {\n        this.forceRenderUpdate();\n        if (clearColor === null) {\n            // Do not clear.\n            this._clearColor = null;\n        } else if (Array.isArray(clearColor)) {\n            this._clearColor = clearColor;\n        } else {\n            this._clearColor = StageUtils.getRgbaComponentsNormalized(clearColor);\n        }\n    }\n\n    getClearColor() {\n        return this._clearColor;\n    }\n\n    createElement(settings) {\n        if (settings) {\n            return this.element(settings);\n        } else {\n            return new Element(this);\n        }\n    }\n\n    createShader(settings) {\n        return Shader.create(this, settings);\n    }\n\n    element(settings) {\n        if (settings.isElement) return settings;\n\n        let element;\n        if (settings.type) {\n            element = new settings.type(this);\n        } else {\n            element = new Element(this);\n        }\n\n        element.patch(settings);\n\n        return element;\n    }\n\n    c(settings) {\n        return this.element(settings);\n    }\n\n    get w() {\n        return this._options.w;\n    }\n\n    get h() {\n        return this._options.h;\n    }\n\n    get coordsWidth() {\n        return this.w / this._options.precision;\n    }\n\n    get coordsHeight() {\n        return this.h / this._options.precision;\n    }\n\n    addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        if (delta > 0 && this._lastGcFrame !== this.frameCounter) {\n            if (this._usedMemory > this.getOption('memoryPressure')) {\n                this.gc(false);\n                if (this._usedMemory > this.getOption('memoryPressure') - 2e6) {\n                    // Too few released. Aggressive cleanup.\n                    this.gc(true);\n                }\n            }\n        }\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    addVramUsage(delta, alpha) {\n        if (alpha) {\n            this._usedVramAlpha += delta;\n        }\n        else {\n            this._usedVramNonAlpha += delta;\n        }\n    }\n\n    get usedVramAlpha() {\n        return this._usedVramAlpha;\n    }\n\n    get usedVramNonAlpha() {\n        return this._usedVramNonAlpha;\n    }\n\n    get usedVram() {\n        return this._usedVramAlpha + this._usedVramNonAlpha;\n    }\n\n    gc(aggressive) {\n        if (this._lastGcFrame !== this.frameCounter) {\n            this._lastGcFrame = this.frameCounter;\n            const memoryUsageBefore = this._usedMemory;\n            this.gcTextureMemory(aggressive);\n            this.gcRenderTextureMemory(aggressive);\n            this.renderer.gc(aggressive);\n\n            if (this.application.getOption('debug')) {\n                console.log(`[Lightning] GC${aggressive ? \"[aggressive]\" : \"\"}! Frame ${this._lastGcFrame} Freed ${((memoryUsageBefore - this._usedMemory) / 1e6).toFixed(2)}MP from GPU memory. Remaining: ${(this._usedMemory / 1e6).toFixed(2)}MP`);\n                const other = this._usedMemory - this.textureManager.usedMemory - this.ctx.usedMemory;\n                console.log(`[Lightning] Textures: ${(this.textureManager.usedMemory / 1e6).toFixed(2)}MP, Render Textures: ${(this.ctx.usedMemory / 1e6).toFixed(2)}MP, Renderer caches: ${(other / 1e6).toFixed(2)}MP`);\n            }\n        }\n    }\n\n    gcTextureMemory(aggressive = false) {\n        if (aggressive && this.ctx.root.visible) {\n            // Make sure that ALL textures are cleaned;\n            this.ctx.root.visible = false;\n            this.textureManager.gc();\n            this.ctx.root.visible = true;\n        } else {\n            this.textureManager.gc();\n        }\n    }\n\n    gcRenderTextureMemory(aggressive = false) {\n        if (aggressive && this.root.visible) {\n            // Make sure that ALL render textures are cleaned;\n            this.root.visible = false;\n            this.ctx.freeUnusedRenderTextures(0);\n            this.root.visible = true;\n        } else {\n            this.ctx.freeUnusedRenderTextures(0);\n        }\n    }\n\n    getDrawingCanvas() {\n        return this.platform.getDrawingCanvas();\n    }\n\n    update() {\n        this.ctx.update()\n    }\n\n    addServiceProvider(serviceprovider) {\n        if (Utils.isSpark) {\n            this.platform.addServiceProvider(serviceprovider);\n        }\n    }\n\n    getChildrenByPosition(x, y) {\n        const children = [];\n        this.root.core.update();\n        this.root.core.collectAtCoord(x, y, children);\n\n        return children;\n    }\n}\n\nimport Element from \"./Element.mjs\";\nimport StageUtils from \"./StageUtils.mjs\";\nimport TextureManager from \"./TextureManager.mjs\";\nimport TextureThrottler from \"./TextureThrottler.mjs\";\nimport CoreContext from \"./core/CoreContext.mjs\";\nimport TransitionManager from \"../animation/TransitionManager.mjs\";\nimport AnimationManager from \"../animation/AnimationManager.mjs\";\nimport RectangleTexture from \"../textures/RectangleTexture.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"./Component.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class Application extends Component {\n\n    constructor(options = {}, properties) {\n        // Save options temporarily to avoid having to pass it through the constructor.\n        Application._temp_options = options;\n\n        // Booting flag is used to postpone updateFocusSettings;\n        Application.booting = true;\n        const stage = new Stage(options.stage);\n        super(stage, properties);\n        Application.booting = false;\n\n        this.__updateFocusCounter = 0;\n        this.__keypressTimers = new Map();\n        this.__hoveredChild = null;\n\n        // We must construct while the application is not yet attached.\n        // That's why we 'init' the stage later (which actually emits the attach event).\n        this.stage.init();\n\n        // Initially, the focus settings are updated after both the stage and application are constructed.\n        this.updateFocusSettings();\n\n        this.__keymap = this.getOption('keys');\n\n        if (this.__keymap) {\n            this.stage.platform.registerKeydownHandler((e) => {\n                this._receiveKeydown(e);\n            });\n\n            this.stage.platform.registerKeyupHandler((e) => {\n                this._receiveKeyup(e);\n            });\n        }\n\n        if (this.getOption(\"enablePointer\")) {\n            this.stage.platform.registerClickHandler((e) => {\n                this._receiveClick(e);\n            });\n\n            this.stage.platform.registerHoverHandler((e) => {\n                this._receiveHover(e);\n            });\n\n            this.stage.platform.registerScrollWheelHandler((e) => {\n                this._recieveScrollWheel(e);\n            });\n\n            this.cursor = 'default';\n        }\n    }\n\n    getOption(name) {\n        return this.__options[name];\n    }\n\n    _setOptions(o) {\n        this.__options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this.__options[name] = def;\n            } else {\n                this.__options[name] = value;\n            }\n        }\n\n        opt('debug', false);\n        opt('keys', {\n            38: \"Up\",\n            40: \"Down\",\n            37: \"Left\",\n            39: \"Right\",\n            13: \"Enter\",\n            8: \"Back\",\n            27: \"Exit\"\n        });\n        opt('enablePointer', false);\n    }\n\n    __construct() {\n        this.stage.setApplication(this);\n\n        this._setOptions(Application._temp_options);\n        delete Application._temp_options;\n\n        super.__construct();\n    }\n\n    __init() {\n        super.__init();\n        this.__updateFocus();\n    }\n\n    updateFocusPath() {\n        this.__updateFocus();\n    }\n\n    __updateFocus() {\n        const notOverridden = this.__updateFocusRec();\n\n        if (!Application.booting && notOverridden) {\n            this.updateFocusSettings();\n        }\n    }\n\n    __updateFocusRec() {\n        const updateFocusId = ++this.__updateFocusCounter;\n        this.__updateFocusId = updateFocusId;\n\n        const newFocusPath = this.__getFocusPath();\n        const newFocusedComponent = newFocusPath[newFocusPath.length - 1];\n        const prevFocusedComponent = this._focusPath ? this._focusPath[this._focusPath.length - 1] : undefined;\n\n        if (!prevFocusedComponent) {\n            // Focus events.\n            this._focusPath = [];\n            for (let i = 0, n = newFocusPath.length; i < n; i++) {\n                this._focusPath.push(newFocusPath[i]);\n                this._focusPath[i]._focus(newFocusedComponent, undefined);\n                const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                if (focusOverridden) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            let m = Math.min(this._focusPath.length, newFocusPath.length);\n            let index;\n            for (index = 0; index < m; index++) {\n                if (this._focusPath[index] !== newFocusPath[index]) {\n                    break;\n                }\n            }\n\n            if (this._focusPath.length !== newFocusPath.length || index !== newFocusPath.length) {\n\n                if (this.getOption('debug')) {\n                    console.log('[Lightning] Focus changed: ' + newFocusedComponent.getLocationString());\n                }\n\n                // Unfocus events.\n                for (let i = this._focusPath.length - 1; i >= index; i--) {\n                    const unfocusedElement = this._focusPath.pop();\n                    unfocusedElement._unfocus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus events.\n                for (let i = index, n = newFocusPath.length; i < n; i++) {\n                    this._focusPath.push(newFocusPath[i]);\n                    this._focusPath[i]._focus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus changed events.\n                for (let i = 0; i < index; i++) {\n                    this._focusPath[i]._focusChange(newFocusedComponent, prevFocusedComponent);\n                }\n            }\n        }\n\n        return true;\n    }\n\n    updateFocusSettings() {\n        const focusedComponent = this._focusPath[this._focusPath.length - 1];\n\n        // Get focus settings. These can be used for dynamic application-wide settings that depend on the\n        // focus directly (such as the application background).\n        const focusSettings = {};\n        const defaultSetFocusSettings = Component.prototype._setFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._setFocusSettings !== defaultSetFocusSettings) {\n                this._focusPath[i]._setFocusSettings(focusSettings);\n            }\n        }\n\n        const defaultHandleFocusSettings = Component.prototype._handleFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._handleFocusSettings !== defaultHandleFocusSettings) {\n                this._focusPath[i]._handleFocusSettings(focusSettings, this.__prevFocusSettings, focusedComponent);\n            }\n        }\n\n        this.__prevFocusSettings = focusSettings;\n    }\n\n    _handleFocusSettings(settings, prevSettings, focused, prevFocused) {\n        // Override to handle focus-based settings.\n    }\n\n    __getFocusPath() {\n        const path = [this];\n        let current = this;\n        do {\n            const nextFocus = current._getFocused();\n            if (!nextFocus || (nextFocus === current)) {\n                // Found!;\n                break;\n            }\n\n\n            let ptr = nextFocus.cparent;\n            if (ptr === current) {\n                path.push(nextFocus);\n            } else {\n                // Not an immediate child: include full path to descendant.\n                const newParts = [nextFocus];\n                do {\n                    if (!ptr) {\n                        current._throwError(\"Return value for _getFocused must be an attached descendant component but its '\" + nextFocus.getLocationString() + \"'\");\n                    }\n                    newParts.push(ptr);\n                    ptr = ptr.cparent;\n                } while (ptr !== current);\n\n                // Add them reversed.\n                for (let i = 0, n = newParts.length; i < n; i++) {\n                    path.push(newParts[n - i - 1]);\n                }\n            }\n\n            current = nextFocus;\n        } while (true);\n\n        return path;\n    }\n\n    get focusPath() {\n        return this._focusPath;\n    }\n\n    /**\n     * Injects an event in the state machines, top-down from application to focused component.\n     */\n    focusTopDownEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = 0; i < n; i++) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Injects an event in the state machines, bottom-up from focused component to application.\n     */\n    focusBottomUpEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = n - 1; i >= 0; i--) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    _receiveKeydown(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n        const path = this.focusPath;\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                const hasTimer = this.__keypressTimers.has(keys[i]);\n                // prevent event from getting fired when the timeout is still active\n                if (path[path.length - 1].longpress && hasTimer) {\n                    return;\n                }\n\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}`, \"_captureKey\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}`, \"_handleKey\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKey\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKey\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        const consumer = path[path.length - 1];\n\n        if (keys && consumer.longpress) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                this._startLongpressTimer(keys[i], consumer);\n            }\n        }\n    }\n\n    /**\n     * Keyup listener\n     * To take away some confusion we add `Release` to the event to prevent ending up with method names like:\n     *  _handleLeftUp / _handleUpUp / _handleEnterUp etc\n     *\n     * @param e\n     * @private\n     */\n    _receiveKeyup(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}Release`, \"_captureKeyRelease\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}Release`, \"_handleKeyRelease\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKeyRelease\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKeyRelease\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (this.__keypressTimers.has(keys[i])) {\n                    // keyup has fired before end of timeout so we clear it\n                    clearTimeout(this.__keypressTimers.get(keys[i]));\n                    // delete so we can register it again\n                    this.__keypressTimers.delete(keys[i]);\n                }\n            }\n        }\n    }\n\n    /**\n     * Registers and starts a timer for the pressed key. Timer will be cleared when the key is released\n     * before the timer goes off.\n     *\n     * If key is not release (keyup) the longpress handler will be fired.\n     * Configuration can be via the Components template:\n     *\n     * static _template() {\n     *     return {\n     *         w:100, h:100,\n     *         longpress:{up:700, down:500}\n     *     }\n     * }     *\n     * // this will get called when up has been pressed for 700ms\n     * _handleUpLong() {\n     *\n     * }\n     *\n     * @param key\n     * @param element\n     * @private\n     */\n    _startLongpressTimer(key, element) {\n        const config = element.longpress;\n        const lookup = key.toLowerCase();\n\n        if (config[lookup]) {\n            const timeout = config[lookup];\n            if (!Utils.isNumber(timeout)) {\n                element._throwError(\"config value for longpress must be a number\");\n            } else {\n                this.__keypressTimers.set(key, setTimeout(() => {\n                    if (!this.stage.application.focusTopDownEvent([`_capture${key}Long`, \"_captureKey\"], {})) {\n                        this.stage.application.focusBottomUpEvent([`_handle${key}Long`, \"_handleKey\"], {});\n                    }\n\n                    this.__keypressTimers.delete(key);\n                }, timeout || 500 /* prevent 0ms */));\n            }\n        }\n        return;\n    }\n\n    _recieveScrollWheel(e) {\n        const obj = e;\n        const { clientX, clientY } = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            if (!this.fireTopDownScrollWheelHandler(\"_captureScroll\", obj)) {\n                this.fireBottomUpScrollWheelHandler(\"_handleScroll\", obj);\n            }\n        }\n    }\n\n    fireTopDownScrollWheelHandler(event, obj) {\n        let children = this.stage.application.children;\n        let affected = this._findChildren([], children).reverse();\n        let n = affected.length;\n\n        while (n--) {\n            const child = affected[n];\n            if (child && child[event]) {\n                child._captureScroll(obj);\n                return true;\n            }\n        }\n        return false;\n    }\n\n    fireBottomUpScrollWheelHandler(event, obj) {\n        const { clientX, clientY } = obj;\n        const target = this._getTargetChild(clientX, clientY);\n        let child = target;\n\n        // Search tree bottom up for a handler\n        while (child !== null) {\n            if (child && child[event]) {\n                child._handleScroll(obj);\n                return true;\n            }\n            child = child.parent;\n        }\n        return false;\n    }\n\n    _receiveClick(e) {\n        const obj = e;\n        const { clientX, clientY } = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            this.stage.application.fireBottomUpClickHandler(obj);\n        }\n    }\n\n    fireBottomUpClickHandler(obj) {\n        const { clientX, clientY } = obj;\n        const target = this._getTargetChild(clientX, clientY);\n        const precision = this.stage.getRenderPrecision() / this.stage.getOption('devicePixelRatio');\n        let child = target;\n\n        // Search tree bottom up for a handler\n        while (child !== null) {\n            if (child && child[\"_handleClick\"]) {\n                const { px, py } = child.core._worldContext;\n                const cx = px * precision;\n                const cy = py * precision;\n\n                const localCoords = {\n                    x: clientX - cx,\n                    y: clientY - cy\n                }\n\n                const returnValue = child._handleClick(target, localCoords);\n                if (returnValue !== false) {\n                    break;\n                }\n            }\n            child = child.parent;\n        }\n    }\n\n    _receiveHover(e) {\n        const obj = e;\n        const { clientX, clientY } = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            this.stage.application.fireBottomUpHoverHandler(obj);\n        }\n    }\n\n    fireBottomUpHoverHandler(obj) {\n        const { clientX, clientY } = obj;\n        const target = this._getTargetChild(clientX, clientY);\n\n        // Only fire handlers when pointer target changes\n        if (target !== this.__hoveredChild) {\n\n            let hoveredBranch = new Set();\n            let newHoveredBranch = new Set();\n\n            if (target) {\n                newHoveredBranch = new Set(target.getAncestors());\n            }\n\n            if (this.__hoveredChild) {\n                hoveredBranch = new Set(this.__hoveredChild.getAncestors());\n                for (const elem of [...hoveredBranch].filter((e) => !newHoveredBranch.has(e))) {\n                    const c = Component.getComponent(elem);\n                    if (c[\"_handleUnhover\"]) {\n                        c._handleUnhover(elem);\n                    }\n                    if (elem.parent && elem.parent.cursor) {\n                        this.stage.getCanvas().style.cursor = elem.parent.cursor;\n                    }\n                }\n            }\n\n            this.__hoveredChild = target;\n\n            const diffBranch = [...newHoveredBranch].filter((e) => !hoveredBranch.has(e))\n            for (const elem of diffBranch) {\n                const c = Component.getComponent(elem);\n                if (c[\"_handleHover\"]) {\n                    c._handleHover(elem);\n                }\n            }\n\n            // New element hover cursor\n            const lastElement = diffBranch[0];\n            if (lastElement && lastElement.cursor) {\n                this.stage.getCanvas().style.cursor = lastElement.cursor;\n            }\n\n            // Rerun _handleHover for target element in case it's been hovered\n            // back from its child\n            if (diffBranch.length === 0 && target) {\n                const c = Component.getComponent(target);\n                if (c[\"_handleHover\"]) {\n                    c._handleHover(target);\n                }\n            }\n        }\n    }\n\n    _getTargetChild(clientX, clientY) {\n        let children = this.stage.application.children;\n        let affected = this._findChildren([], children);\n        let hoverableChildren = this._withinClickableRange(affected, clientX, clientY);\n\n        hoverableChildren.sort((a, b) => {\n            // Sort by zIndex and then id\n            if (a.zIndex > b.zIndex) {\n                return 1;\n            } else if (a.zIndex < b.zIndex) {\n                return -1;\n            } else {\n                return a.id > b.id ? 1 : -1;\n            }\n        });\n\n        if (hoverableChildren.length) {\n            // Assume target has highest zIndex (id when zIndex equal)\n            return hoverableChildren.slice(-1)[0];\n        } else {\n            return null;\n        }\n    }\n\n    _findChildren(bucket, children) {\n        let n = children.length;\n        while (n--) {\n            const child = children[n];\n            // only add active children\n            if (child.__active && child.collision) {\n                if (child.collision === true) {\n                    bucket.push(child);\n                }\n                if (child.hasChildren()) {\n                    this._findChildren(bucket, child.children);\n                }\n            }\n        }\n        return bucket;\n    }\n\n    _withinClickableRange(affectedChildren, cursorX, cursorY) {\n        let n = affectedChildren.length;\n        const candidates = [];\n\n        // loop through affected children\n        // and perform collision detection\n        while (n--) {\n            const child = affectedChildren[n];\n            const precision = this.stage.getRenderPrecision() / this.stage.getOption('devicePixelRatio');\n            const ctx = child.core._worldContext;\n\n            const cx = ctx.px * precision;\n            const cy = ctx.py * precision;\n            const cw = child.finalW * ctx.ta * precision;\n            const ch = child.finalH * ctx.td * precision;\n\n            if (cx > this.stage.w || cy > this.stage.h) {\n                continue;\n            }\n\n            if (child.parent.core._scissor) {\n                const scissor = child.parent.core._scissor.map((v) => v * precision);\n                if (!this._testCollision(cursorX, cursorY, ...scissor))\n                    continue\n            }\n\n            if (this._testCollision(cursorX, cursorY, cx, cy, cw, ch)) {\n                candidates.push(child);\n            }\n        }\n        return candidates;\n    }\n\n    _testCollision(px, py, cx, cy, cw, ch) {\n        if (px >= cx &&\n            px <= cx + cw &&\n            py >= cy &&\n            py <= cy + ch) {\n            return true;\n        }\n        return false;\n    }\n\n    destroy() {\n        if (!this._destroyed) {\n            this._destroy();\n            this.stage.destroy();\n            this._destroyed = true;\n        }\n    }\n\n    _destroy() {\n        // This forces the _detach, _disabled and _active events to be called.\n        this.stage.setApplication(undefined);\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n\n        if (this.__keypressTimers.size) {\n            for (const timer of this.__keypressTimers.values()) {\n                clearTimeout(timer);\n            }\n\n            this.__keypressTimers.clear();\n        }\n    }\n\n    getCanvas() {\n        return this.stage.getCanvas();\n    }\n\n}\n\nimport Stage from \"../tree/Stage.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticCanvasTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._factory = undefined;\n        this._lookupId = undefined;\n    }\n\n    set content({factory, lookupId = undefined}) {\n        this._factory = factory;\n        this._lookupId = lookupId;\n        this._changed();\n    }\n\n    _getIsValid() {\n        return !!this._factory;\n    }\n\n    _getLookupId() {\n        return this._lookupId;\n    }\n\n    _getSourceLoader() {\n        const f = this._factory;\n        return (cb) => {\n            return f((err, canvas) => {\n                if (err) {\n                    return cb(err);\n                }\n                cb(null, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas));\n            }, this.stage);\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport StaticCanvasTexture from \"../textures/StaticCanvasTexture.mjs\"\n\nexport default class Tools {\n\n    static getCanvasTexture(canvasFactory, lookupId) {\n        return {type: StaticCanvasTexture, content: {factory: canvasFactory, lookupId: lookupId}}\n    }\n\n    static getRoundRect(w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createRoundRect(cb, stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor);\n            } else {\n                cb(null, this.createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor));\n            }\n        };\n        let id = 'rect' + [w, h, strokeWidth, strokeColor, fill ? 1 : 0, fillColor].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (fill === undefined) fill = true;\n        if (strokeWidth === undefined) strokeWidth = 0;\n\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + strokeWidth + 2;\n        canvas.height = h + strokeWidth + 2;\n\n        ctx.beginPath();\n        let x = 0.5 * strokeWidth + 1, y = 0.5 * strokeWidth + 1;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n\n        if (fill) {\n            if (Utils.isNumber(fillColor)) {\n                ctx.fillStyle = StageUtils.getRgbaString(fillColor);\n            } else {\n                ctx.fillStyle = \"white\";\n            }\n            ctx.fill();\n        }\n\n        if (strokeWidth) {\n            if (Utils.isNumber(strokeColor)) {\n                ctx.strokeStyle = StageUtils.getRgbaString(strokeColor);\n            } else {\n                ctx.strokeStyle = \"white\";\n            }\n            ctx.lineWidth = strokeWidth;\n            ctx.stroke();\n        }\n\n        return canvas;\n    }\n\n    static getShadowRect(w, h, radius = 0, blur = 5, margin = blur * 2) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createShadowRect(cb, stage, w, h, radius, blur, margin);\n            } else {\n                cb(null, this.createShadowRect(stage, w, h, radius, blur, margin));\n            }\n        };\n        let id = 'shadow' + [w, h, blur, margin].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createShadowRect(stage, w, h, radius, blur, margin) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + margin * 2;\n        canvas.height = h + margin * 2;\n\n        // WpeWebKit bug: we experienced problems without this with shadows in noncompositedwebgl mode.\n        ctx.globalAlpha = 0.01;\n        ctx.fillRect(0, 0, 0.01, 0.01);\n        ctx.globalAlpha = 1.0;\n\n        ctx.shadowColor = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.fillStyle = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.shadowBlur = blur;\n        ctx.shadowOffsetX = (w + 10) + margin;\n        ctx.shadowOffsetY = margin;\n\n        ctx.beginPath();\n        const x = -(w + 10);\n        const y = 0;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n        ctx.fill();\n\n        return canvas;\n    }\n\n    static getSvgTexture(url, w, h) {\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createSvg(cb, stage, url, w, h);\n            } else {\n                this.createSvg(cb, stage, url, w, h);\n            }\n        };\n        let id = 'svg' + [w, h, url].join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createSvg(cb, stage, url, w, h) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        let img = new Image();\n        img.onload = () => {\n            canvas.width = w;\n            canvas.height = h;\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n            cb(null, canvas);\n        }\n        img.onerror = (err) => {\n            cb(err);\n        }\n\n        // On the PS4 platform setting the `crossOrigin` attribute on images\n        // can cause CORS failures.\n        if (!Utils.isPS4) {\n            img.crossOrigin = \"Anonymous\";\n        }\n\n        img.src = url;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class ObjMerger {\n\n    static isMf(f) {\n        return Utils.isFunction(f) && f.__mf;\n    }\n\n    static mf(f) {\n        // Set as merge function.\n        f.__mf = true;\n        return f;\n    }\n\n    static merge(a, b) {\n        const aks = Object.keys(a);\n        const bks = Object.keys(b);\n\n        if (!bks.length) {\n            return a;\n        }\n\n        // Create index array for all elements.\n        const ai = {};\n        const bi = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n            ai[key] = -1;\n            bi[key] = i;\n        }\n        for (let i = 0, n = aks.length; i < n; i++) {\n            const key = aks[i];\n            ai[key] = i;\n            if (bi[key] === undefined) {\n                bi[key] = -1;\n            }\n        }\n\n        const aksl = aks.length;\n\n        const result = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n\n            // Prepend all items in a that are not in b - before the now added b attribute.\n            const aIndex = ai[key];\n            let curIndex = aIndex;\n            while(--curIndex >= 0) {\n                const akey = aks[curIndex];\n                if (bi[akey] !== -1) {\n                    // Already found? Stop processing.\n                    // Not yet found but exists in b? Also stop processing: wait until we find it in b.\n                    break;\n                }\n            }\n            while(++curIndex < aIndex) {\n                const akey = aks[curIndex];\n                result[akey] = a[akey];\n            }\n\n            const bv = b[key];\n            const av = a[key];\n            let r;\n            if (this.isMf(bv)) {\n                r = bv(av);\n            } else {\n                if (!Utils.isObjectLiteral(av) || !Utils.isObjectLiteral(bv)) {\n                    r = bv;\n                } else {\n                    r = ObjMerger.merge(av, bv);\n                }\n            }\n\n            // When marked as undefined, property is deleted.\n            if (r !== undefined) {\n                result[key] = r;\n            }\n        }\n\n        // Append remaining final items in a.\n        let curIndex = aksl;\n        while(--curIndex >= 0) {\n            const akey = aks[curIndex];\n            if (bi[akey] !== -1) {\n                break;\n            }\n        }\n        while(++curIndex < aksl) {\n            const akey = aks[curIndex];\n            result[akey] = a[akey];\n        }\n\n        return result;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"../tree/ObjectList.mjs\";\n\nexport default class ObjectListProxy extends ObjectList {\n\n    constructor(target) {\n        super();\n        this._target = target;\n    }\n\n    onAdd(item, index) {\n        this._target.addAt(item, index);\n    }\n\n    onRemove(item, index) {\n        this._target.removeAt(index);\n    }\n\n    onSync(removed, added, order) {\n        this._target._setByArray(order);\n    }\n\n    onSet(item, index) {\n        this._target.setAt(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._target.setAt(item, toIndex);\n    }\n\n    createItem(object) {\n        return this._target.createItem(object);\n    }\n\n    isItem(object) {\n        return this._target.isItem(object);\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectListProxy from \"./ObjectListProxy.mjs\";\n\nexport default class ObjectListWrapper extends ObjectListProxy {\n\n    constructor(target, wrap) {\n        super(target);\n        this._wrap = wrap;\n    }\n\n    wrap(item) {\n        let wrapper = this._wrap(item);\n        item._wrapper = wrapper;\n        return wrapper;\n    }\n\n    onAdd(item, index) {\n        item = this.wrap(item);\n        super.onAdd(item, index);\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n    }\n\n    onSync(removed, added, order) {\n        added.forEach(a => this.wrap(a));\n        order = order.map(a => a._wrapper);\n        super.onSync(removed, added, order);\n    }\n\n    onSet(item, index) {\n        item = this.wrap(item);\n        super.onSet(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        super.onMove(item, fromIndex, toIndex);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class NoiseTexture extends Texture {\n\n    _getLookupId() {\n        return '__noise';\n    }\n\n    _getSourceLoader() {\n        const gl = this.stage.gl;\n        return function(cb) {\n            const noise = new Uint8Array(128 * 128 * 4);\n            for (let i = 0; i < 128 * 128 * 4; i+=4) {\n                const v = Math.floor(Math.random() * 256);\n                noise[i] = v;\n                noise[i+1] = v;\n                noise[i+2] = v;\n                noise[i+3] = 255;\n            }\n            const texParams = {}\n\n            if (gl) {\n                texParams[gl.TEXTURE_WRAP_S] = gl.REPEAT;\n                texParams[gl.TEXTURE_WRAP_T] = gl.REPEAT;\n                texParams[gl.TEXTURE_MIN_FILTER] = gl.NEAREST;\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            cb(null, {source: noise, w: 128, h: 128, texParams: texParams});\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class HtmlTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._htmlElement = undefined;\n        this._scale = 1;\n    }\n\n    set htmlElement(v) {\n        this._htmlElement = v;\n        this._changed();\n    }\n\n    get htmlElement() {\n        return this._htmlElement;\n    }\n\n    set scale(v) {\n        this._scale = v;\n        this._changed();\n    }\n\n    get scale() {\n        return this._scale;\n    }\n\n    set html(v) {\n        if (!v) {\n            this.htmlElement = undefined;\n        } else {\n            const d = document.createElement('div');\n            d.innerHTML = \"<div>\" + v + \"</div>\";\n            this.htmlElement = d.firstElementChild;\n        }\n    }\n\n    get html() {\n        return this._htmlElement.innerHTML;\n    }\n\n    _getIsValid() {\n        return this.htmlElement;\n    }\n\n    _getLookupId() {\n        return this._scale + \":\" + this._htmlElement.innerHTML;\n    }\n\n    _getSourceLoader() {\n        const htmlElement = this._htmlElement;\n        const scale = this._scale;\n        return function(cb) {\n            if (!window.html2canvas) {\n                return cb(new Error(\"Please include html2canvas (https://html2canvas.hertzen.com/)\"));\n            }\n\n            const area = HtmlTexture.getPreloadArea();\n            area.appendChild(htmlElement);\n\n            html2canvas(htmlElement, {backgroundColor: null, scale: scale}).then(function(canvas) {\n                area.removeChild(htmlElement);\n                if (canvas.height === 0) {\n                    return cb(new Error(\"Canvas height is 0\"));\n                }\n                cb(null, {source: canvas, width: canvas.width, height: canvas.height});\n            }).catch(e => {\n                console.error('[Lightning]', e);\n            });\n        }\n    }\n\n    static getPreloadArea() {\n        if (!this._preloadArea) {\n            // Preload area must be included in document body and must be visible to trigger html element rendering.\n            this._preloadArea = document.createElement('div');\n            if (this._preloadArea.attachShadow) {\n                // Use a shadow DOM if possible to prevent styling from interfering.\n                this._preloadArea.attachShadow({mode: 'closed'});\n            }\n            this._preloadArea.style.opacity = 0;\n            this._preloadArea.style.pointerEvents = 'none';\n            this._preloadArea.style.position = 'fixed';\n            this._preloadArea.style.display = 'block';\n            this._preloadArea.style.top = '100vh';\n            this._preloadArea.style.overflow = 'hidden';\n            document.body.appendChild(this._preloadArea);\n        }\n        return this._preloadArea;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticTexture extends Texture {\n\n    constructor(stage, options) {\n        super(stage);\n\n        this._options = options;\n    }\n\n    set options(v) {\n        if (this._options !== v) {\n            this._options = v;\n            this._changed();\n        }\n    }\n\n    get options() {\n        return this._options;\n    }\n\n    _getIsValid() {\n        return !!this._options;\n    }\n\n    _getSourceLoader() {\n        return (cb) => {\n            cb(null, this._options);\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class ListComponent extends Component {\n\n    constructor(stage) {\n        super(stage);\n\n        this._wrapper = super._children.a({});\n\n        this._reloadVisibleElements = false;\n\n        this._visibleItems = new Set();\n\n        this._index = 0;\n\n        this._started = false;\n\n        /**\n         * The transition definition that is being used when scrolling the items.\n         * @type TransitionSettings\n         */\n        this._scrollTransitionSettings = this.stage.transitions.createSettings({});\n\n        /**\n         * The scroll area size in pixels per item.\n         */\n        this._itemSize = 100;\n\n        this._viewportScrollOffset = 0;\n\n        this._itemScrollOffset = 0;\n\n        /**\n         * Should the list jump when scrolling between end to start, or should it be continuous, like a carrousel?\n         */\n        this._roll = false;\n\n        /**\n         * Allows restricting the start scroll position.\n         */\n        this._rollMin = 0;\n\n        /**\n         * Allows restricting the end scroll position.\n         */\n        this._rollMax = 0;\n\n        /**\n         * Definition for a custom animation that is applied when an item is (partially) selected.\n         * @type AnimationSettings\n         */\n        this._progressAnimation = null;\n\n        /**\n         * Inverts the scrolling direction.\n         * @type {boolean}\n         * @private\n         */\n        this._invertDirection = false;\n\n        /**\n         * Layout the items horizontally or vertically?\n         * @type {boolean}\n         * @private\n         */\n        this._horizontal = true;\n\n        this.itemList = new ListItems(this);\n    }\n\n    _allowChildrenAccess() {\n        return false;\n    }\n\n    get items() {\n        return this.itemList.get();\n    }\n\n    set items(children) {\n        this.itemList.patch(children);\n    }\n\n    start() {\n        this._wrapper.transition(this.property, this._scrollTransitionSettings);\n        this._scrollTransition = this._wrapper.transition(this.property);\n        this._scrollTransition.on('progress', p => this.update());\n\n        this.setIndex(0, true, true);\n\n        this._started = true;\n\n        this.update();\n    }\n\n    setIndex(index, immediate = false, closest = false) {\n        let nElements = this.length;\n        if (!nElements) return;\n\n        this.emit('unfocus', this.getElement(this.realIndex), this._index, this.realIndex);\n\n        if (closest) {\n            // Scroll to same offset closest to the index.\n            let offset = Utils.getModuloIndex(index, nElements);\n            let o = Utils.getModuloIndex(this.index, nElements);\n            let diff = offset - o;\n            if (diff > 0.5 * nElements) {\n                diff -= nElements;\n            } else if (diff < -0.5 * nElements) {\n                diff += nElements;\n            }\n            this._index += diff;\n        } else {\n            this._index = index;\n        }\n\n        if (this._roll || (this.viewportSize > this._itemSize * nElements)) {\n            this._index = Utils.getModuloIndex(this._index, nElements);\n        }\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = direction * this._index * this._itemSize;\n\n        if (this._roll) {\n            let min, max, scrollDelta;\n            if (direction == 1) {\n                max = (nElements - 1) * this._itemSize;\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max -= scrollDelta;\n\n                min = this.viewportSize - (this._itemSize + scrollDelta);\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.max(Math.min(value, max), min);\n            } else {\n                max = (nElements * this._itemSize - this.viewportSize);\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max += scrollDelta;\n\n                let min = scrollDelta;\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.min(Math.max(-max, value), -min);\n            }\n        }\n\n        this._scrollTransition.start(value);\n\n        if (immediate) {\n            this._scrollTransition.finish();\n        }\n\n        this.emit('focus', this.getElement(this.realIndex), this._index, this.realIndex);\n    }\n\n    getAxisPosition() {\n        let target = -this._scrollTransition._targetValue;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = -direction * this._index * this._itemSize;\n\n        return this._viewportScrollOffset * this.viewportSize + (value - target);\n    }\n\n    update() {\n        if (!this._started) return;\n\n        let nElements = this.length;\n        if (!nElements) return;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n\n        // Map position to index value.\n        let v = (this._horizontal ? this._wrapper.x : this._wrapper.y);\n\n        let viewportSize = this.viewportSize;\n        let scrollDelta = this._viewportScrollOffset * viewportSize - this._itemScrollOffset * this._itemSize;\n        v += scrollDelta;\n\n        let s, e, ps, pe;\n        if (direction == -1) {\n            s = Math.floor(-v / this._itemSize);\n            ps = 1 - ((-v / this._itemSize) - s);\n            e = Math.floor((viewportSize - v) / this._itemSize);\n            pe = (((viewportSize - v) / this._itemSize) - e);\n        } else {\n            s = Math.ceil(v / this._itemSize);\n            ps = 1 + (v / this._itemSize) - s;\n            e = Math.ceil((v - viewportSize) / this._itemSize);\n            pe = e - ((v - viewportSize) / this._itemSize);\n        }\n        if (this._roll || (viewportSize > this._itemSize * nElements)) {\n            // Don't show additional items.\n            if (e >= nElements) {\n                e = nElements - 1;\n                pe = 1;\n            }\n            if (s >= nElements) {\n                s = nElements - 1;\n                ps = 1;\n            }\n            if (e <= -1) {\n                e = 0;\n                pe = 1;\n            }\n            if (s <= -1) {\n                s = 0;\n                ps = 1;\n            }\n        }\n\n        let offset = -direction * s * this._itemSize;\n\n        let item;\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n\n            let element = this.getElement(realIndex);\n            item = element.parent;\n            this._visibleItems.delete(item);\n            if (this._horizontal) {\n                item.x = offset + scrollDelta;\n            } else {\n                item.y = offset + scrollDelta;\n            }\n\n            let wasVisible = item.visible;\n            item.visible = true;\n\n            if (!wasVisible || this._reloadVisibleElements) {\n                // Turned visible.\n                this.emit('visible', index, realIndex);\n            }\n\n\n\n            if (this._progressAnimation) {\n                let p = 1;\n                if (index == s) {\n                    p = ps;\n                } else if (index == e) {\n                    p = pe;\n                }\n\n                // Use animation to progress.\n                this._progressAnimation.apply(element, p);\n            }\n\n            offset += this._itemSize;\n        }\n\n        // Handle item visibility.\n        let self = this;\n        this._visibleItems.forEach(function(invisibleItem) {\n            invisibleItem.visible = false;\n            self._visibleItems.delete(invisibleItem);\n        });\n\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n            this._visibleItems.add(this.getWrapper(realIndex));\n        }\n\n        this._reloadVisibleElements = false;\n    }\n\n    setPrevious() {\n        this.setIndex(this._index - 1);\n    }\n\n    setNext() {\n        this.setIndex(this._index + 1);\n    }\n\n    getWrapper(index) {\n        return this._wrapper.children[index];\n    }\n\n    getElement(index) {\n        let e = this._wrapper.children[index];\n        return e ? e.children[0] : null;\n    }\n\n    reload() {\n        this._reloadVisibleElements = true;\n        this.update();\n    }\n\n    get element() {\n        let e = this._wrapper.children[this.realIndex];\n        return e ? e.children[0] : null;\n    }\n\n    get length() {\n        return this._wrapper.children.length;\n    }\n\n    get property() {\n        return this._horizontal ? 'x' : 'y';\n    }\n\n    get viewportSize() {\n        return this._horizontal ? this.w : this.h;\n    }\n\n    get index() {\n        return this._index;\n    }\n\n    get realIndex() {\n        return Utils.getModuloIndex(this._index, this.length);\n    }\n\n    get itemSize() {\n        return this._itemSize;\n    }\n\n    set itemSize(v) {\n        this._itemSize = v;\n        this.update();\n    }\n\n    get viewportScrollOffset() {\n        return this._viewportScrollOffset;\n    }\n\n    set viewportScrollOffset(v) {\n        this._viewportScrollOffset = v;\n        this.update();\n    }\n\n    get itemScrollOffset() {\n        return this._itemScrollOffset;\n    }\n\n    set itemScrollOffset(v) {\n        this._itemScrollOffset = v;\n        this.update();\n    }\n\n    get scrollTransitionSettings() {\n        return this._scrollTransitionSettings;\n    }\n\n    set scrollTransitionSettings(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    set scrollTransition(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    get scrollTransition() {\n        return this._scrollTransition;\n    }\n\n    get progressAnimation() {\n        return this._progressAnimation;\n    }\n\n    set progressAnimation(v) {\n        if (Utils.isObjectLiteral(v)) {\n            this._progressAnimation = this.stage.animations.createSettings(v);\n        } else {\n            this._progressAnimation = v;\n        }\n        this.update();\n    }\n\n    get roll() {\n        return this._roll;\n    }\n\n    set roll(v) {\n        this._roll = v;\n        this.update();\n    }\n\n    get rollMin() {\n        return this._rollMin;\n    }\n\n    set rollMin(v) {\n        this._rollMin = v;\n        this.update();\n    }\n\n    get rollMax() {\n        return this._rollMax;\n    }\n\n    set rollMax(v) {\n        this._rollMax = v;\n        this.update();\n    }\n\n    get invertDirection() {\n        return this._invertDirection;\n    }\n\n    set invertDirection(v) {\n        if (!this._started) {\n            this._invertDirection = v;\n        }\n    }\n\n    get horizontal() {\n        return this._horizontal;\n    }\n\n    set horizontal(v) {\n        if (v !== this._horizontal) {\n            if (!this._started) {\n                this._horizontal = v;\n            }\n        }\n    }\n\n}\n\nimport ObjectListWrapper from \"../tools/ObjectListWrapper.mjs\";\nclass ListItems extends ObjectListWrapper {\n    constructor(list) {\n        let wrap = (item => {\n            let parent = item.stage.createElement();\n            parent.add(item);\n            parent.visible = false;\n            return parent;\n        })\n\n        super(list._wrapper._children, wrap);\n        this.list = list;\n    }\n\n    onAdd(item, index) {\n        super.onAdd(item, index);\n        this.checkStarted(index);\n    }\n\n    checkStarted(index) {\n        this.list._reloadVisibleElements = true;\n        if (!this.list._started) {\n            this.list.start();\n        } else {\n            if (this.list.length === 1) {\n                this.list.setIndex(0, true, true);\n            } else {\n                if (this.list._index >= this.list.length) {\n                    this.list.setIndex(0);\n                }\n            }\n            this.list.update();\n        }\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n        let ri = this.list.realIndex;\n        if (ri === index) {\n            if (ri === this.list.length) {\n                ri--;\n            }\n            if (ri >= 0) {\n                this.list.setIndex(ri);\n            }\n        } else if (ri > index) {\n            this.list.setIndex(ri - 1);\n        }\n\n        this.list._reloadVisibleElements = true;\n    }\n\n    onSet(item, index) {\n        super.onSet(item, index);\n        this.checkStarted(index);\n    }\n\n    onSync(removed, added, order) {\n        super.onSync(removed, added, order);\n        this.checkStarted(0);\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nimport Utils from \"../tree/Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class LinearBlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n\n        this._direction = new Float32Array([1, 0]);\n        this._kernelRadius = 1;\n    }\n\n    get x() {\n        return this._direction[0];\n    }\n\n    set x(v) {\n        this._direction[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._direction[1];\n    }\n\n    set y(v) {\n        this._direction[1] = v;\n        this.redraw();\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n\n    useDefault() {\n        return (this._kernelRadius === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"direction\", this._direction, this.gl.uniform2fv);\n        this._setUniform(\"kernelRadius\", this._kernelRadius, this.gl.uniform1i);\n\n        const w = operation.getRenderWidth();\n        const h = operation.getRenderHeight();\n        this._setUniform(\"resolution\", new Float32Array([w, h]), this.gl.uniform2fv);\n    }\n}\n\nLinearBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    uniform vec2 resolution;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 direction;\n    uniform int kernelRadius;\n    \n    vec4 blur1(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3333333333333333) * direction;\n        color += texture2D(image, uv) * 0.29411764705882354;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.35294117647058826;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.35294117647058826;\n        return color; \n    }\n    \n    vec4 blur2(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3846153846) * direction;\n        vec2 off2 = vec2(3.2307692308) * direction;\n        color += texture2D(image, uv) * 0.2270270270;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\n        return color;\n    }\n    \n    vec4 blur3(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.411764705882353) * direction;\n        vec2 off2 = vec2(3.2941176470588234) * direction;\n        vec2 off3 = vec2(5.176470588235294) * direction;\n        color += texture2D(image, uv) * 0.1964825501511404;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv + (off3 / resolution)) * 0.010381362401148057;\n        color += texture2D(image, uv - (off3 / resolution)) * 0.010381362401148057;\n        return color;\n    }    \n\n    void main(void){\n        if (kernelRadius == 1) {\n            gl_FragColor = blur1(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else if (kernelRadius == 2) {\n            gl_FragColor = blur2(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else {\n            gl_FragColor = blur3(uSampler, vTextureCoord, resolution, direction) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * 4x4 box blur shader which works in conjunction with a 50% rescale.\n */\nexport default class BoxBlurShader extends DefaultShader {\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const dx = 1.0 / operation.getTextureWidth(0);\n        const dy = 1.0 / operation.getTextureHeight(0);\n        this._setUniform(\"stepTextureCoord\", new Float32Array([dx, dy]), this.gl.uniform2fv);\n    }\n\n}\n\nBoxBlurShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    uniform vec2 stepTextureCoord;\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec4 vColor;\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoordUl = aTextureCoord - stepTextureCoord;\n        vTextureCoordBr = aTextureCoord + stepTextureCoord;\n        vTextureCoordUr = vec2(vTextureCoordBr.x, vTextureCoordUl.y);\n        vTextureCoordBl = vec2(vTextureCoordUl.x, vTextureCoordBr.y);\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nBoxBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = 0.25 * (texture2D(uSampler, vTextureCoordUl) + texture2D(uSampler, vTextureCoordUr) + texture2D(uSampler, vTextureCoordBl) + texture2D(uSampler, vTextureCoordBr));\n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class BlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._kernelRadius = 1;\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"blur(\" + this._kernelRadius + \"px)\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\nimport C2dBlurShader from \"../renderer/c2d/shaders/BlurShader.mjs\";\nimport Shader from \"../tree/Shader.mjs\";\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\n\nexport default class FastBlurComponent extends Component {\n    static _template() {\n        return {}\n    }\n\n    get wrap() {\n        return this.tag(\"Wrap\");\n    }\n\n    set content(v) {\n        return this.wrap.content = v;\n    }\n\n    get content() {\n        return this.wrap.content;\n    }\n\n    set padding(v) {\n        this.wrap._paddingX = v;\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this.wrap._paddingX = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set amount(v) {\n        return this.wrap.amount = v;\n    }\n\n    get amount() {\n        return this.wrap.amount;\n    }\n\n    _onResize() {\n        this.wrap.w = this.renderWidth;\n        this.wrap.h = this.renderHeight;\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    _build() {\n        this.patch({\n            Wrap: {type: this.stage.gl ? WebGLFastBlurComponent : C2dFastBlurComponent}\n        });\n    }\n\n}\n\n\nclass C2dFastBlurComponent extends Component {\n\n    static _template() {\n        return {\n            forceZIndexContext: true,\n            rtt: true,\n            Textwrap: {shader: {type: C2dBlurShader}, Content: {}}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n\n    }\n\n    static getSpline() {\n        if (!this._multiSpline) {\n            this._multiSpline = new MultiSpline();\n            this._multiSpline.parse(false, {0: 0, 0.25: 1.5, 0.5: 5.5, 0.75: 18, 1: 39});\n        }\n        return this._multiSpline;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        this._wrapper.x = paddingX;\n        this._textwrap.x = -paddingX;\n\n        this._wrapper.y = paddingY;\n        this._textwrap.y = -paddingY;\n\n        this._textwrap.w = w + paddingX * 2;\n        this._textwrap.h = h + paddingY * 2;\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._textwrap.shader.kernelRadius = C2dFastBlurComponent._amountToKernelRadius(v);\n    }\n\n    static _amountToKernelRadius(v) {\n        return C2dFastBlurComponent.getSpline().getValue(Math.min(1, v * 0.25));\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nclass WebGLFastBlurComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true, Content: {}},\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            },\n            Result: {shader: {type: FastBlurOutputShader}, visible: false}\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n        this._layers = this.sel(\"Layers\");\n        this._output = this.sel(\"Result\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _buildLayers() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:1},{x:0,y:1,kernelRadius:1},{x:1.5,y:0,kernelRadius:1},{x:0,y:1.5,kernelRadius:1}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = Shader.create(this.stage, Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._output.x = -paddingX;\n        this._textwrap.x = -paddingX;\n        this._output.w = fw;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._output.y = -paddingY;\n        this._textwrap.y = -paddingY;\n        this._output.h = fh;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v === 0) {\n            this._textwrap.renderToTexture = false;\n            this._output.shader.otherTextureSource = null;\n            this._output.visible = false;\n        } else {\n            this._textwrap.renderToTexture = true;\n            this._output.visible = true;\n\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n\n            if (v <= 1) {\n                this._output.texture = this._textwrap.getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(0).getTexture();\n                this._output.shader.a = v;\n            } else if (v <= 2) {\n                this._output.texture = this.getLayer(0).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(1).getTexture();\n                this._output.shader.a = v - 1;\n            } else if (v <= 3) {\n                this._output.texture = this.getLayer(1).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(2).getTexture();\n                this._output.shader.a = v - 2;\n            } else if (v <= 4) {\n                this._output.texture = this.getLayer(2).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(3).getTexture();\n                this._output.shader.a = v - 3;\n            }\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._buildLayers();\n    }\n\n}\n\n/**\n * Shader that combines two textures into one output.\n */\nclass FastBlurOutputShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._a = 0;\n        this._otherTextureSource = null;\n    }\n\n    get a() {\n        return this._a;\n    }\n\n    set a(v) {\n        this._a = v;\n        this.redraw();\n    }\n\n    set otherTextureSource(v) {\n        this._otherTextureSource = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"a\", this._a, this.gl.uniform1f);\n        this._setUniform(\"uSampler2\", 1, this.gl.uniform1i);\n    }\n\n    beforeDraw(operation) {\n        let glTexture = this._otherTextureSource ? this._otherTextureSource.nativeTexture : null;\n\n        let gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n}\n\nFastBlurOutputShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uSampler2;\n    uniform float a;\n    void main(void){\n        if (a == 1.0) {\n            gl_FragColor = texture2D(uSampler2, vTextureCoord) * vColor;\n        } else {\n            gl_FragColor = ((1.0 - a) * texture2D(uSampler, vTextureCoord) + (a * texture2D(uSampler2, vTextureCoord))) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\n\nexport default class BloomComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true,\n                BloomBase: {shader: {type: BloomBaseShader},\n                    Content: {}\n                }\n            },\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, scale: 2, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, scale: 4, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, scale: 8, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, scale: 16, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap.Content\");\n        this._layers = this.sel(\"Layers\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _build() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:3},{x:0,y:1,kernelRadius:3},{x:1.5,y:0,kernelRadius:3},{x:0,y:1.5,kernelRadius:3}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = this.stage.createShader(Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap.Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap.Content').patch(v);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._textwrap.x = -paddingX;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._textwrap.y = -paddingY;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v > 0) {\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._build();\n    }\n\n}\n\nclass BloomBaseShader extends DefaultShader {\n}\n\nBloomBaseShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float m = max(max(color.r, color.g), color.b);\n        float c = max(0.0, (m - 0.80)) * 5.0;\n        color = color * c;\n        gl_FragColor = color;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class SmoothScaleComponent extends Component {\n\n    static _template() {\n        return {\n            ContentWrap: {renderOffscreen: true, forceZIndexContext: true, onAfterUpdate: SmoothScaleComponent._updateDimensions,\n                Content: {}\n            },\n            Scale: {visible: false}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._smoothScale = 1;\n        this._iterations = 0;\n    }\n\n    get content() {\n        return this.tag('Content');\n    }\n\n    set content(v) {\n        this.tag('Content').patch(v, true);\n    }\n\n    get smoothScale() {\n        return this._smoothScale;\n    }\n\n    set smoothScale(v) {\n        if (this._smoothScale !== v) {\n            let its = 0;\n            while(v < 0.5 && its < 12) {\n                its++;\n                v = v * 2;\n            }\n\n            this.scale = v;\n            this._setIterations(its);\n\n            this._smoothScale = v;\n        }\n    }\n\n    _setIterations(its) {\n        if (this._iterations !== its) {\n            const scalers = this.sel(\"Scale\").childList;\n            const content = this.sel(\"ContentWrap\");\n            while (scalers.length < its) {\n                const first = scalers.length === 0;\n                const texture = (first ? content.getTexture() : scalers.last.getTexture());\n                scalers.a({rtt: true, renderOffscreen: true, texture: texture});\n            }\n\n            SmoothScaleComponent._updateDimensions(this.tag(\"ContentWrap\"), true);\n\n            const useScalers = (its > 0);\n            this.patch({\n                ContentWrap: {renderToTexture: useScalers},\n                Scale: {visible: useScalers}\n            });\n\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                scalers.getAt(i).patch({\n                    visible: i < its,\n                    renderOffscreen: i !== its - 1\n                });\n            }\n            this._iterations = its;\n        }\n    }\n\n    static _updateDimensions(contentWrap, force) {\n        const content = contentWrap.children[0];\n        let w = content.renderWidth;\n        let h = content.renderHeight;\n        if (w !== contentWrap.w || h !== contentWrap.h || force) {\n            contentWrap.w = w;\n            contentWrap.h = h;\n\n            const scalers = contentWrap.parent.tag(\"Scale\").children;\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                w = w * 0.5;\n                h = h * 0.5;\n                scalers[i].w = w;\n                scalers[i].h = h;\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class BorderComponent extends Component {\n\n    static _template() {\n        return {\n            Content: {},\n            Borders: {\n                Top: {rect: true, visible: false, mountY: 1},\n                Right: {rect: true, visible: false},\n                Bottom: {rect: true, visible: false},\n                Left: {rect: true, visible: false, mountX: 1}\n            }\n        };\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._borderTop = this.tag(\"Top\");\n        this._borderRight = this.tag(\"Right\");\n        this._borderBottom = this.tag(\"Bottom\");\n        this._borderLeft = this.tag(\"Left\");\n\n        this.onAfterUpdate = function (element) {\n            const content = element.childList.first;\n            let w = element.core.w || content.renderWidth;\n            let h = element.core.h || content.renderHeight;\n            element._borderTop.w = w;\n            element._borderBottom.y = h;\n            element._borderBottom.w = w;\n            element._borderLeft.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderLeft.y = -element._borderTop.h;\n            element._borderRight.x = w;\n            element._borderRight.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderRight.y = -element._borderTop.h;\n        };\n\n        this.borderWidth = 1;\n    }\n\n    get content() {\n        return this.sel('Content');\n    }\n\n    set content(v) {\n        this.sel('Content').patch(v, true);\n    }\n\n    get borderWidth() {\n        return this.borderWidthTop;\n    }\n\n    get borderWidthTop() {\n        return this._borderTop.h;\n    }\n\n    get borderWidthRight() {\n        return this._borderRight.w;\n    }\n\n    get borderWidthBottom() {\n        return this._borderBottom.h;\n    }\n\n    get borderWidthLeft() {\n        return this._borderLeft.w;\n    }\n\n    set borderWidth(v) {\n        this.borderWidthTop = v;\n        this.borderWidthRight = v;\n        this.borderWidthBottom = v;\n        this.borderWidthLeft = v;\n    }\n\n    set borderWidthTop(v) {\n        this._borderTop.h = v;\n        this._borderTop.visible = (v > 0);\n    }\n\n    set borderWidthRight(v) {\n        this._borderRight.w = v;\n        this._borderRight.visible = (v > 0);\n    }\n\n    set borderWidthBottom(v) {\n        this._borderBottom.h = v;\n        this._borderBottom.visible = (v > 0);\n    }\n\n    set borderWidthLeft(v) {\n        this._borderLeft.w = v;\n        this._borderLeft.visible = (v > 0);\n    }\n\n    get colorBorder() {\n        return this.colorBorderTop;\n    }\n\n    get colorBorderTop() {\n        return this._borderTop.color;\n    }\n\n    get colorBorderRight() {\n        return this._borderRight.color;\n    }\n\n    get colorBorderBottom() {\n        return this._borderBottom.color;\n    }\n\n    get colorBorderLeft() {\n        return this._borderLeft.color;\n    }\n\n    set colorBorder(v) {\n        this.colorBorderTop = v;\n        this.colorBorderRight = v;\n        this.colorBorderBottom = v;\n        this.colorBorderLeft = v;\n    }\n\n    set colorBorderTop(v) {\n        this._borderTop.color = v;\n    }\n\n    set colorBorderRight(v) {\n        this._borderRight.color = v;\n    }\n\n    set colorBorderBottom(v) {\n        this._borderBottom.color = v;\n    }\n\n    set colorBorderLeft(v) {\n        this._borderLeft.color = v;\n    }\n\n    get borderTop() {\n        return this._borderTop;\n    }\n\n    set borderTop(settings) {\n        this.borderTop.patch(settings);\n    }\n\n    get borderRight() {\n        return this._borderRight;\n    }\n\n    set borderRight(settings) {\n        this.borderRight.patch(settings);\n    }\n\n    get borderBottom() {\n        return this._borderBottom;\n    }\n\n    set borderBottom(settings) {\n        this.borderBottom.patch(settings);\n    }\n\n    get borderLeft() {\n        return this._borderLeft;\n    }\n\n    set borderLeft(settings) {\n        this.borderLeft.patch(settings);\n    }\n\n    set borders(settings) {\n        this.borderTop = settings;\n        this.borderLeft = settings;\n        this.borderBottom = settings;\n        this.borderRight = settings;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dDefaultShader from \"../../c2d/shaders/DefaultShader.mjs\";\nimport WebGLDefaultShader from \"../../webgl/shaders/DefaultShader.mjs\";\n\nexport class WebGLGrayscaleShader extends WebGLDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getC2d() {\n        return C2dGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nWebGLGrayscaleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float grayness = 0.2 * color.r + 0.6 * color.g + 0.2 * color.b;\n        gl_FragColor = vec4(amount * vec3(grayness, grayness, grayness) + (1.0 - amount) * color.rgb, color.a);\n    }\n`;\n\nexport class C2dGrayscaleShader extends C2dDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getWebGL() {\n        return WebGLGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"grayscale(\" + this._amount + \")\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport NoiseTexture from \"../../../textures/NoiseTexture.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * This shader can be used to fix a problem that is known as 'gradient banding'.\n */\nexport default class DitheringShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._noiseTexture = new NoiseTexture(ctx.stage);\n\n        this._graining = 1/256;\n\n        this._random = false;\n    }\n\n    set graining(v) {\n        this._graining = v;\n        this.redraw();\n    }\n\n    set random(v) {\n        this._random = v;\n        this.redraw();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Make sure that the noise texture is uploaded to the GPU.\n        this._noiseTexture.load();\n\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            // Calculate noise texture coordinates so that it spans the full element.\n            let brx = operation.getElementWidth(i) / this._noiseTexture.getRenderWidth();\n            let bry = operation.getElementHeight(i) / this._noiseTexture.getRenderHeight();\n\n            let ulx = 0;\n            let uly = 0;\n            if (this._random) {\n                ulx = Math.random();\n                uly = Math.random();\n\n                brx += ulx;\n                bry += uly;\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = ulx;\n                    ulx = brx;\n                    brx = t;\n                }\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = uly;\n                    uly = bry;\n                    bry = t;\n                }\n            }\n\n            // Specify all corner points.\n            floats[offset] = ulx;\n            floats[offset + 1] = uly;\n\n            floats[offset + 2] = brx;\n            floats[offset + 3] = uly;\n\n            floats[offset + 4] = brx;\n            floats[offset + 5] = bry;\n\n            floats[offset + 6] = ulx;\n            floats[offset + 7] = bry;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aNoiseTextureCoord\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n\n        let glTexture = this._noiseTexture.source.nativeTexture;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"uNoiseSampler\", 1, this.gl.uniform1i);\n        this._setUniform(\"graining\", 2 * this._graining, this.gl.uniform1f);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        let gl = this.gl;\n        gl.enableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    useDefault() {\n        return this._graining === 0;\n    }\n\n    afterDraw(operation) {\n        if (this._random) {\n            this.redraw();\n        }\n    }\n\n}\n\nDitheringShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec2 aNoiseTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vNoiseTextureCoord = aNoiseTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDitheringShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uNoiseSampler;\n    uniform float graining;\n    void main(void){\n        vec4 noise = texture2D(uNoiseSampler, vNoiseTextureCoord);\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        gl_FragColor = (color * vColor) + graining * (noise.r - 0.5);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../../tree/Utils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class CircularPushShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._inputValue = 0;\n\n        this._maxDerivative = 0.01;\n\n        this._normalizedValue = 0;\n\n        // The offset between buckets. A value between 0 and 1.\n        this._offset = 0;\n\n        this._amount = 0.1;\n\n        this._aspectRatio = 1;\n\n        this._offsetX = 0;\n\n        this._offsetY = 0;\n\n        this.buckets = 100;\n    }\n\n    get aspectRatio() {\n        return this._aspectRatio;\n    }\n\n    set aspectRatio(v) {\n        this._aspectRatio = v;\n        this.redraw();\n    }\n\n    get offsetX() {\n        return this._offsetX;\n    }\n\n    set offsetX(v) {\n        this._offsetX = v;\n        this.redraw();\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        this._offsetY = v;\n        this.redraw();\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    set inputValue(v) {\n        this._inputValue = v;\n    }\n\n    get inputValue() {\n        return this._inputValue;\n    }\n\n    set maxDerivative(v) {\n        this._maxDerivative = v;\n    }\n\n    get maxDerivative() {\n        return this._maxDerivative;\n    }\n\n    set buckets(v) {\n        if (v > 100) {\n            console.warn(\"[Lightning] CircularPushShader: supports max 100 buckets\");\n            v = 100;\n        }\n\n        // This should be set before starting.\n        this._buckets = v;\n\n        // Init values array in the correct length.\n        this._values = new Uint8Array(this._getValues(v));\n\n        this.redraw();\n    }\n\n    get buckets() {\n        return this._buckets;\n    }\n\n    _getValues(n) {\n        const v = [];\n        for (let i = 0; i < n; i++) {\n            v.push(this._inputValue);\n        }\n        return v;\n    }\n\n    /**\n     * Progresses the shader with the specified (fractional) number of buckets.\n     * @param {number} o;\n     *   A number from 0 to 1 (1 = all buckets).\n     */\n    progress(o) {\n        this._offset += o * this._buckets;\n        const full = Math.floor(this._offset);\n        this._offset -= full;\n        this._shiftBuckets(full);\n        this.redraw();\n    }\n\n    _shiftBuckets(n) {\n        for (let i = this._buckets - 1; i >= 0; i--) {\n            const targetIndex = i - n;\n            if (targetIndex < 0) {\n                this._normalizedValue = Math.min(this._normalizedValue + this._maxDerivative, Math.max(this._normalizedValue - this._maxDerivative, this._inputValue));\n                this._values[i] = 255 * this._normalizedValue;\n            } else {\n                this._values[i] = this._values[targetIndex];\n            }\n        }\n    }\n\n    set offset(v) {\n        this._offset = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"aspectRatio\", this._aspectRatio, this.gl.uniform1f);\n        this._setUniform(\"offsetX\", this._offsetX, this.gl.uniform1f);\n        this._setUniform(\"offsetY\", this._offsetY, this.gl.uniform1f);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n        this._setUniform(\"offset\", this._offset, this.gl.uniform1f);\n        this._setUniform(\"buckets\", this._buckets, this.gl.uniform1f);\n        this._setUniform(\"uValueSampler\", 1, this.gl.uniform1i);\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    beforeDraw(operation) {\n        const gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        if (!this._valuesTexture) {\n            this._valuesTexture = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            if (Utils.isNode) {\n                gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, false);\n            }\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        } else {\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n        }\n\n        // Upload new values.\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.ALPHA, this._buckets, 1, 0, gl.ALPHA, gl.UNSIGNED_BYTE, this._values);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    cleanup() {\n        if (this._valuesTexture) {\n            this.gl.deleteTexture(this._valuesTexture);\n        }\n    }\n\n\n}\n\nCircularPushShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    uniform float offsetX;\n    uniform float offsetY;\n    uniform float aspectRatio;\n    varying vec2 vTextureCoord;\n    varying vec2 vPos;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vPos = vTextureCoord * 2.0 - 1.0;\n        vPos.y = vPos.y * aspectRatio;\n        vPos.y = vPos.y + offsetY;\n        vPos.x = vPos.x + offsetX;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nCircularPushShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vPos;\n    uniform float amount;\n    uniform float offset;\n    uniform float values[100];\n    uniform float buckets;\n    uniform sampler2D uSampler;\n    uniform sampler2D uValueSampler;\n    void main(void){\n        float l = length(vPos);\n        float m = (l * buckets * 0.678 - offset) / buckets;\n        float f = texture2D(uValueSampler, vec2(m, 0.0)).a * amount;\n        vec2 unit = vPos / l;\n        gl_FragColor = texture2D(uSampler, vTextureCoord - f * unit) * vColor;\n    }\n`;\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class InversionShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nInversionShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        color.rgb = color.rgb * (1.0 - amount) + amount * (1.0 * color.a - color.rgb); \n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class OutlineShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._width = 5;\n        this._col = 0xFFFFFFFF;\n        this._color = [1,1,1,1];\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    get color() {\n        return this._col;\n    }\n\n    set color(v) {\n        if (this._col !== v) {\n            const col = StageUtils.getRgbaComponentsNormalized(v);\n            col[0] = col[0] * col[3];\n            col[1] = col[1] * col[3];\n            col[2] = col[2] * col[3];\n\n            this._color = col;\n\n            this.redraw();\n\n            this._col = v;\n        }\n    }\n\n    useDefault() {\n        return (this._width === 0 || this._col[3] === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"color\", new Float32Array(this._color), gl.uniform4fv);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            const elementCore = operation.getElementCore(i);\n\n            // We are setting attributes such that if the value is < 0 or > 1, a border should be drawn.\n            const ddw = this._width / elementCore.w;\n            const dw = ddw / (1 - 2 * ddw);\n            const ddh = this._width / elementCore.h;\n            const dh = ddh / (1 - 2 * ddh);\n\n            // Specify all corner points.\n            floats[offset] = -dw;\n            floats[offset + 1] = -dh;\n\n            floats[offset + 2] = 1 + dw;\n            floats[offset + 3] = -dh;\n\n            floats[offset + 4] = 1 + dw;\n            floats[offset + 5] = 1 + dh;\n\n            floats[offset + 6] = -dw;\n            floats[offset + 7] = 1 + dh;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aCorner\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n}\n\nOutlineShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aCorner;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vCorner;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vCorner = aCorner;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nOutlineShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vCorner;\n    uniform vec4 color;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec2 m = min(vCorner, 1.0 - vCorner);\n        float value = step(0.0, min(m.x, m.y));\n        gl_FragColor = mix(color, texture2D(uSampler, vTextureCoord) * vColor, value);\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * @see https://github.com/pixijs/pixi-filters/tree/master/filters/pixelate/src\n */\nexport default class PixelateShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._size = new Float32Array([4, 4]);\n    }\n\n    get x() {\n        return this._size[0];\n    }\n\n    set x(v) {\n        this._size[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._size[1];\n    }\n\n    set y(v) {\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    get size() {\n        return this._size[0];\n    }\n\n    set size(v) {\n        this._size[0] = v;\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return ((this._size[0] === 0) && (this._size[1] === 0));\n    }\n\n    static getWebGLImpl() {\n        return WebGLPixelateShaderImpl;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"size\", new Float32Array(this._size), gl.uniform2fv);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            let w = operation.quads.getTextureWidth(operation.index + i);\n            let h = operation.quads.getTextureHeight(operation.index + i);\n\n            floats[offset] = w;\n            floats[offset + 1] = h;\n            floats[offset + 2] = w;\n            floats[offset + 3] = h;\n            floats[offset + 4] = w;\n            floats[offset + 5] = h;\n            floats[offset + 6] = w;\n            floats[offset + 7] = h;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aTextureRes\"), 2, gl.FLOAT, false, this.getExtraAttribBytesPerVertex(), this.getVertexAttribPointerOffset(operation));\n    }\n}\n\nPixelateShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aTextureRes;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        vTextureRes = aTextureRes;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPixelateShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n\n    uniform vec2 size;\n    uniform sampler2D uSampler;\n    \n    vec2 mapCoord( vec2 coord )\n    {\n        coord *= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 unmapCoord( vec2 coord )\n    {\n        coord /= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 pixelate(vec2 coord, vec2 size)\n    {\n        return floor( coord / size ) * size;\n    }\n    \n    void main(void)\n    {\n        vec2 coord = mapCoord(vTextureCoord);\n        coord = pixelate(coord, size);\n        coord = unmapCoord(coord);\n        gl_FragColor = texture2D(uSampler, coord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class RadialFilterShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._radius = 0;\n        this._cutoff = 1;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set cutoff(v) {\n        this._cutoff = v;\n        this.redraw();\n    }\n\n    get cutoff() {\n        return this._cutoff;\n    }\n    \n    useDefault() {\n        return this._radius === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        // We substract half a pixel to get a better cutoff effect.\n        this._setUniform(\"radius\", 2 * (this._radius - 0.5) / operation.getRenderWidth(), this.gl.uniform1f);\n        this._setUniform(\"cutoff\", 0.5 * operation.getRenderWidth() / this._cutoff, this.gl.uniform1f);\n    }\n\n}\n\nRadialFilterShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 pos;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n        pos = gl_Position.xy;\n    }\n`;\n\nRadialFilterShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 pos;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float radius;\n    uniform float cutoff;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        float f = max(0.0, min(1.0, 1.0 - (length(pos) - radius) * cutoff));\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor * f;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RoundedRectangleShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._blend = 0;\n        this._radius = [1, 1, 1, 1];\n        this._stroke = 0;\n        this._fc = 0x00ffffff;\n        this._fillColor = this._getNormalizedColor(0xffffffff);\n        this._strokeColor = this._getNormalizedColor(0x00ffffff);\n    }\n\n    set blend(p) {\n        this._blend = Math.min(Math.max(p, 0), 1);\n    }\n\n    get blend() {\n        return this._blend;\n    }\n\n    set radius(v) {\n        if(Array.isArray(v)) {\n            if(v.length === 2) {\n                this._radius = [v[0], v[1], v[0], v[1]];\n            }\n            else if(v.length === 3) {\n                this._radius = [v[0], v[1], v[2], this._radius[3]];\n            }\n            else if (v.length === 4) {\n                this._radius = v;\n            }\n            else {\n                this._radius = [v[0], v[0], v[0], v[0]];\n            }\n        }\n        else {\n            this._radius = [v, v, v, v];\n        }\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set topLeft(num) {\n        this._radius[0] = num;\n        this.redraw();\n    }\n\n    get topLeft() {\n        return this._radius[0];\n    }\n\n    set topRight(num) {\n        this._radius[1] = num;\n        this.redraw();\n    }\n\n    get topRight() {\n        return this._radius[1];\n    }\n\n    set bottomRight(num) {\n        this._radius[2] = num;\n        this.redraw();\n    }\n\n    get bottomRight() {\n        return this._radius[2];\n    }\n\n    set bottomLeft(num) {\n        this._radius[3] = num;\n        this.redraw();\n    }\n\n    get bottomLeft() {\n        return this._radius[3];\n    }\n\n    set strokeColor(argb) {\n        this._sc = argb;\n        this._strokeColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get strokeColor() {\n        return this._sc;\n    }\n\n    set fillColor(argb) {\n        this._fc = argb;\n        this._fillColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get fillColor() {\n        return this._fc;\n    }\n\n    set stroke(num) {\n        this._stroke = num;\n        this.redraw();\n    }\n\n    get stroke() {\n        return this._stroke;\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        const _radius = this._radius.map((r) => (r + 0.5) * renderPrecision)\n        this._setUniform('radius', new Float32Array(_radius), this.gl.uniform4fv);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n        this._setUniform('blend', this._blend, this.gl.uniform1f);\n        this._setUniform('strokeColor', this._strokeColor, this.gl.uniform4fv);\n        this._setUniform('fillColor', this._fillColor, this.gl.uniform4fv);\n        this._setUniform('stroke',  this._stroke * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nRoundedRectangleShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nRoundedRectangleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n\n    #define PI 3.14159265359\n\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 radius;\n    uniform float stroke;\n    uniform vec4 strokeColor;\n    uniform vec4 fillColor;\n    uniform float alpha;\n    uniform float fill;\n    uniform float blend;\n    \n    float boxDist(vec2 p, vec2 size, float radius){\n        size -= vec2(radius);\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n    }\n    \n    float fillMask(float dist){\n        return clamp(-dist, 0.0, 1.0);\n    }\n    \n    float innerBorderMask(float dist, float width){\n        float alpha1 = clamp(dist + width, 0.0, 1.0);\n        float alpha2 = clamp(dist, 0.0, 1.0);\n        return alpha1 - alpha2;\n    }\n\n    void main() {\n        vec2 halfRes = 0.5 * resolution.xy;\n        float r = 0.0;\n        if (vTextureCoord.x < 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[0];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[1];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y >= 0.5) {\n            r = radius[2];\n        } else {\n            r = radius[3];\n        }\n        \n        float b = boxDist(vTextureCoord.xy * resolution - halfRes, halfRes - 0.005, r);\n        vec4 tex = texture2D(uSampler, vTextureCoord) * vColor;\n        vec4 blend = mix(vec4(1.0) * alpha, tex, blend);     \n        vec4 layer1 = mix(vec4(0.0), tex * fillColor, fillMask(b));\n        gl_FragColor = mix(layer1, blend * strokeColor, innerBorderMask(b + 1.0, stroke));\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from './DefaultShader.mjs';\n\nexport default class FadeOutShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._fade = [0, 0, 0, 0];\n    }\n\n    set top(num) {\n        this._fade[0] = num;\n        this.redraw();\n    }\n\n    get top() {\n        return this._fade[0];\n    }\n\n    set right(num) {\n        this._fade[1] = num;\n        this.redraw();\n    }\n\n    get right() {\n        return this._fade[1];\n    }\n\n    set bottom(num) {\n        this._fade[2] = num;\n        this.redraw();\n    }\n\n    get bottom() {\n        return this._fade[2];\n    }\n\n    set left(num) {\n        this._fade[3] = num;\n        this.redraw();\n    }\n\n    get left() {\n        return this._fade[3];\n    }\n\n    set fade(v) {\n        if(Array.isArray(v)) {\n            if(v.length === 2) {\n                this._fade = [v[0], v[1], v[0], v[1]];\n            }\n            else if(v.length === 3) {\n                this._fade = [v[0], v[1], v[2], this._fade[3]];\n            }\n            else if (v.length === 4) {\n                this._fade = v;\n            }\n            else {\n                this._fade = [v[0], v[0], v[0], v[0]];\n            }\n        }\n        else {\n            this._fade = [v, v, v, v];\n        }\n        this.redraw();\n    }\n\n    get fade() {\n        return this._fade;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        const fade = this._fade.map((f) => f * renderPrecision);\n        this._setUniform('fade',  new Float32Array(fade), this.gl.uniform4fv);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nFadeOutShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 fade;\n    \n    void main() {\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        vec2 halfRes = 0.5 * resolution.xy;\n        vec2 point = vTextureCoord.xy * resolution.xy;\n        \n        vec2 pos1;\n        vec2 pos2;\n        vec2 d;\n        float c;\n        float t = 0.0;\n             \n        if(fade[0] > 0.0) {\n            pos1 = vec2(point.x, point.y);\n            pos2 = vec2(point.x, point.y + fade[0]);\n            d = pos2 - pos1;\n            c = dot(pos1, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[1] > 0.0) {\n            vec2 pos1 = vec2(point.x - resolution.x - fade[1], vTextureCoord.y);\n            vec2 pos2 = vec2(point.x - resolution.x, vTextureCoord.y);\n            d = pos1 - pos2;\n            c = dot(pos2, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[2] > 0.0) {\n            vec2 pos1 = vec2(vTextureCoord.x, point.y - resolution.y - fade[2]);\n            vec2 pos2 = vec2(vTextureCoord.x, point.y - resolution.y);\n            d = pos1 - pos2;\n            c = dot(pos2, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[3] > 0.0) {\n            pos1 = vec2(point.x, point.y);\n            pos2 = vec2(point.x + fade[3], point.y);\n            d = pos2 - pos1;\n            c = dot(pos1, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        gl_FragColor = color;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class VignetteShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._magnitude = 1.3;\n        this._intensity = 0.7;\n        this._pivot = [0.5, 0.5];\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        this._setUniform(\"magnitude\", this._magnitude , this.gl.uniform1f);\n        this._setUniform(\"intensity\", this._intensity, this.gl.uniform1f);\n        this._setUniform('pivot', new Float32Array(this._pivot), this.gl.uniform2fv);\n        this.redraw()\n    }\n\n    set pivot(v) {\n        if(Array.isArray(v)) {\n            this._pivot = v;\n        }\n        else {\n            this._pivot = [v, v];\n        }\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivot[0];\n    }\n\n    set pivotX(v) {\n        this._pivot[0] = v;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivot[1];\n    }\n\n    set pivotY(v) {\n        this._pivot[1] = v;\n        this.redraw();\n    }\n\n    get intensity() {\n        return this._intensity;\n    }\n\n    set intensity(v) {\n        this._intensity = v;\n        this.redraw();\n    }\n\n    get magnitude() {\n        return this._magnitude;\n\n    }\n\n    set magnitude(v) {\n        this._magnitude = v;\n        this.redraw();\n    }\n}\n\nVignetteShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nVignetteShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float magnitude;\n    uniform float intensity;\n    uniform vec2 pivot;\n\n    void main() {\n        vec2 uv = vTextureCoord.xy - pivot + vec2(0.5);\n        uv.x = clamp(uv.x, 0.0, 1.0);\n        uv.y = clamp(uv.y, 0.0, 1.0);\n   \n        uv *=  1.00 - uv.yx;\n        float vig = uv.x * uv.y * 25.0 * intensity;\n        vig = pow(vig, 0.45 * magnitude);\n        vec4 fragColor = vec4(vig) * vColor;\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * fragColor;\n\n    }\n`\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from '../../../tree/StageUtils.mjs'\n\nexport default class SpinnerShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._radius = 100;\n        this._width = 50;\n        this._period = 1;\n        this._angle = 0.5;\n        this._smooth = 0.005;\n        this._color = 0xffffffff;\n        this._backgroundColor = 0xff000000;\n        this._time = Date.now();\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    set period(v) {\n        this._period = v;\n        this.redraw();\n    }\n\n    set angle(v) {\n        this._angle = v\n        this.redraw();\n    }\n\n    set smooth(v) {\n        this._smooth = v;\n        this.redraw();\n    }\n\n    set color(v) {\n        this._color = v;\n        this.redraw();\n    }\n\n    set backgroundColor(v) {\n        this._backgroundColor = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner\n\n        this._setUniform(\"iTime\", Date.now() - this._time, this.gl.uniform1f);\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        this._setUniform('radius', this._radius * renderPrecision, this.gl.uniform1f);\n        this._setUniform('width', this._width * renderPrecision, this.gl.uniform1f);\n        this._setUniform('period', this._period, this.gl.uniform1f);\n        this._setUniform('angle', this._angle, this.gl.uniform1f);\n        this._setUniform('smooth', this._smooth, this.gl.uniform1f);\n        this._setUniform('color', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._color)), this.gl.uniform4fv);\n        this._setUniform('backgroundColor', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._backgroundColor)), this.gl.uniform4fv);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv)\n\n        this.redraw()\n    }\n}\n\nSpinnerShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nSpinnerShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float iTime;\n    uniform float radius;\n    uniform float width;\n    uniform float period;\n    uniform float angle;\n    uniform float smooth;\n    uniform vec2 resolution;\n\n    uniform vec4 color;\n    uniform vec4 backgroundColor;\n\n    float ratio = resolution.y / resolution.x;\n\n    vec2 transpose_pos(vec2 pos) {\n        if (ratio < 1.) {\n            float diff = 0.5 - pos.x;\n            pos.x = 0.5 - diff / ratio;\n        } else {\n            float diff = 0.5 - pos.y;\n            pos.y = 0.5 - diff * ratio;\n        }\n        return pos;\n    }\n\n    float get_angle(vec2 pos) {\n        pos = transpose_pos(pos);\n        float a = atan(pos.y - 0.5, pos.x - 0.5);\n        a = (1.0+a/3.14159)/2.0;\n        \n        return a;\n    }\n\n    float dist(vec2 pos1, vec2 pos2) {\n        pos1 = transpose_pos(pos1);\n        return distance(pos1, pos2);\n    }\n\n    void main()\n    {\n        vec2 fragCoord = vTextureCoord;\n        vec4 fragColor = vColor;\n        \n        vec2 st = vTextureCoord;\n        float pct = dist(st, vec2(0.5));\n\n        float a = get_angle(st);\n        float t = iTime / 1000.0 / period;\n\n        float inner = max((radius - width) / resolution.x, (radius - width) / resolution.y);\n        float outer = max(radius / resolution.x, radius / resolution.y);\n\n        float x1 = mod(t, 1.0);\n        float x2 = mod(t + angle, 1.0);\n\n        if (x1 < x2) {\n            if (a > x1 && a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        } else {\n            if (a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else if (a > x1) {\n                float val = (1.0 - (1.0 + x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (1.0 + x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        }\n\n        float s = smoothstep(inner, inner + smooth + 0.00001, pct) * (1.0 - smoothstep(outer, outer + smooth + 0.00001, pct));\n        gl_FragColor = texture2D(uSampler, fragCoord) * vColor * (1. - s * fragColor.a) + fragColor * s;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class HoleShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n        this._radius = 0;\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        this._x = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        this._y = v;\n        this.redraw();\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        this._w = v;\n        this.redraw();\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        this._h = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const owner = operation.shaderOwner;\n        const renderPrecision = this.ctx.stage.getRenderPrecision()\n\n        this._setUniform(\"x\", this._x * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"y\", this._y * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"w\", this._w * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"h\", this._h * renderPrecision, this.gl.uniform1f);\n        this._setUniform('radius',  (this._radius + .5) * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n\n    useDefault() {\n        return (this._x === 0 && this._y === 0 && this._w === 0 && this._h === 0)\n    }\n}\n\nHoleShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nHoleShader.fragmentShaderSource = `\n   #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float x;\n    uniform float y;\n    uniform float w;\n    uniform float h;\n    uniform vec2 resolution;\n    uniform float radius;\n\n    float roundBox(vec2 p, vec2 b, float r) {\n        float d = length(max(abs(p)-b+r, 0.1))-r;\n        return smoothstep(1.0, 0.0, d);\n    }\n\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        vec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\n        vec2 size = vec2(w, h) / 2.0;\n        float b = roundBox(pos, size, radius);\n        gl_FragColor = mix(color, vec4(0.0), b) * vColor;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RadialGradientShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._pivot = [0, 0];\n        this._ic = 0xffffffff;\n        this._normalizedIC = this._getNormalizedColor(this._ic);\n        this._oc = 0x00ffffff;\n        this._normalizedOC = this._getNormalizedColor(this._oc);\n        this._radius = 0;\n    }\n\n    set radiusX(v) {\n        this.radius = v;\n    }\n\n    get radiusX() {\n        return this._radius;\n    }\n\n    set radiusY(v) {\n        this._radiusY = v;\n        this.redraw();\n    }\n\n    get radiusY() {\n        return this._radiusY;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    set innerColor(argb) {\n        this._ic = argb;\n        this._normalizedIC = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get innerColor() {\n        return this._ic;\n    }\n\n    set outerColor(argb) {\n        this._oc = argb;\n        this._normalizedOC = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    set color(argb) {\n        this.innerColor = argb;\n    }\n\n    get color() {\n        return this.innerColor;\n    }\n\n    get outerColor() {\n        return this._ic;\n    }\n\n    set x(f) {\n        this._x = f;\n        this.redraw();\n    }\n\n    set y(f) {\n        this._y = f;\n        this.redraw();\n    }\n\n    set pivot(v) {\n        if(Array.isArray(v) && v.length === 2) {\n            this._pivot = v;\n        }\n        else if(Array.isArray(v)) {\n            this._pivot = [v[0], v[1] || v[0]];\n        }\n        else {\n            this._pivot = [v, v];\n        }\n        this.redraw();\n    }\n\n    get pivot() {\n        return this._pivot[0];\n    }\n\n    set pivotY(f) {\n        this._pivot[1] = f;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivot[1];\n    }\n\n    set pivotX(f) {\n        this._pivot[0] = f;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivot[0];\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        if(this._x) {\n            this._pivot[0] = this._x / owner.w;\n        }\n        if(this._y) {\n            this._pivot[1] = this._y / owner.h;\n        }\n\n        if(this._radius === 0) {\n            this._radius = owner.w * 0.5;\n        }\n\n        this._setUniform('innerColor', this._normalizedIC, this.gl.uniform4fv);\n        this._setUniform('fill', StageUtils.getRgbaComponentsNormalized(this._oc)[3], this.gl.uniform1f);\n        this._setUniform('outerColor', this._normalizedOC, this.gl.uniform4fv);\n        this._setUniform('pivot', new Float32Array(this._pivot),  this.gl.uniform2fv);\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n        this._setUniform('radius',  this._radius, this.gl.uniform1f);\n        this._setUniform('radiusY',  (this._radiusY || this._radius), this.gl.uniform1f);\n    }\n}\n\nRadialGradientShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    \n    #define PI 3.14159265359\n    \n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec2 pivot;\n    uniform vec4 innerColor;\n    uniform vec4 outerColor;\n    uniform float radius;\n    uniform float radiusY;\n    uniform float alpha;\n    uniform float fill;\n    uniform float aspectRatio;\n    \n    void main() {\n        vec2 point = vTextureCoord.xy * resolution;\n        vec2 projection = vec2(pivot.x * resolution.x, pivot.y * resolution.y);\n        float d = length((point - projection) / vec2(radius * 2.0, radiusY * 2.0));\n        vec4 color = mix(texture2D(uSampler, vTextureCoord) * vColor, outerColor * alpha, fill);\n        gl_FragColor = mix(innerColor * alpha, color, smoothstep(0.0, 1.0, d));\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class Light3dShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._strength = 0.5;\n        this._ambient = 0.5;\n        this._fudge = 0.4;\n\n        this._rx = 0;\n        this._ry = 0;\n\n        this._z = 0;\n        this._pivotX = NaN;\n        this._pivotY = NaN;\n        this._pivotZ = 0;\n\n        this._lightY = 0;\n        this._lightZ = 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        let vr = operation.shaderOwner;\n        let element = vr.element;\n\n        let pivotX = isNaN(this._pivotX) ? element.pivotX * vr.w : this._pivotX;\n        let pivotY = isNaN(this._pivotY) ? element.pivotY * vr.h : this._pivotY;\n        let coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n\n        let rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        let gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], this._pivotZ]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"lightY\", this.lightY, gl.uniform1f);\n        this._setUniform(\"lightZ\", this.lightZ, gl.uniform1f);\n        this._setUniform(\"strength\", this._strength, gl.uniform1f);\n        this._setUniform(\"ambient\", this._ambient, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set strength(v) {\n        this._strength = v;\n        this.redraw();\n    }\n\n    get strength() {\n        return this._strength;\n    }\n\n    set ambient(v) {\n        this._ambient = v;\n        this.redraw();\n    }\n\n    get ambient() {\n        return this._ambient;\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        this._pivotX = v + 1;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        this._pivotY = v + 1;\n        this.redraw();\n    }\n\n    get lightY() {\n        return this._lightY;\n    }\n\n    set lightY(v) {\n        this._lightY = v;\n        this.redraw();\n    }\n\n    get pivotZ() {\n        return this._pivotZ;\n    }\n\n    set pivotZ(v) {\n        this._pivotZ = v;\n        this.redraw();\n    }\n\n    get lightZ() {\n        return this._lightZ;\n    }\n\n    set lightZ(v) {\n        this._lightZ = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0 && this._strength === 0 && this._ambient === 1);\n    }\n\n}\n\nLight3dShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float fudge;\n    uniform float strength;\n    uniform float ambient;\n    uniform float z;\n    uniform float lightY;\n    uniform float lightZ;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Set depth perspective\n        float perspective = 1.0 + fudge * pos.z;\n\n        pos.z += lightZ * projection.x;\n\n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, perspective);\n\n        // Correct light source position.\n        pos.y += lightY * abs(projection.y);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nLight3dShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec3 pos;\n    uniform sampler2D uSampler;\n    uniform float ambient;\n    uniform float strength;\n    void main(void){\n        vec4 rgba = texture2D(uSampler, vTextureCoord);\n        float d = length(pos);\n        float n = 1.0 / max(0.1, d);\n        rgba.rgb = rgba.rgb * (strength * n + ambient);\n        gl_FragColor = rgba * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class PerspectiveShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._fudge = 0.2;\n        this._rx = 0;\n        this._ry = 0;\n        this._z = 1.0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const vr = operation.shaderOwner;\n        const element = vr.element;\n\n        const pivotX = element.pivotX * vr.w;\n        const pivotY = element.pivotY * vr.h;\n        const coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n        const rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        const gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], 0]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0);\n    }\n\n}\n\nPerspectiveShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float z;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, z);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPerspectiveShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform vec3 rot;\n    uniform float fudge;\n\n    void main(void) {\n        vec2 coords = vTextureCoord;\n\n        coords.xy -= vec2(0.5);\n        coords.y = coords.y + (sign(rot[0]) * 0.5 - coords.x) * sin(rot[0]) * fudge * coords.y;\n        coords.x = coords.x + (sign(rot[1]) * 0.5 - coords.y) * sin(rot[1]) * fudge * coords.x;\n        coords.xy += vec2(0.5);\n\n        if (coords.x < 0.0 || coords.x > 1.0 || coords.y < 0.0 || coords.y > 1.0) {\n            gl_FragColor = vec4(0.0);\n        } else {\n            gl_FragColor = texture2D(uSampler, coords) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class MagnifierShader extends DefaultShader {\n\tconstructor(context) {\n\t  super(context);\n\t  this._x = 0;\n\t  this._y = 0;\n\t  this._w = 0;\n\t  this._h = 0;\n\t  this._radius = 0;\n\t  this._magnification = 0.6;\n\t}\n  \n\tget x() {\n\t  return this._x;\n\t}\n  \n\tset x(v) {\n\t  this._x = v;\n\t  this.redraw();\n\t}\n  \n\tget y() {\n\t  return this._y;\n\t}\n  \n\tset y(v) {\n\t  this._y = v;\n\t  this.redraw();\n\t}\n  \n\tget w() {\n\t  return this._w;\n\t}\n  \n\tset w(v) {\n\t  this._w = v;\n\t  this.redraw();\n\t}\n  \n\tget h() {\n\t  return this._h;\n\t}\n  \n\tset h(v) {\n\t  this._h = v;\n\t  this.redraw();\n\t}\n  \n\tget magnification() {\n\t  return this._magnification;\n\t}\n  \n\tset magnification(v) {\n\t  this._magnification = v;\n\t  this.redraw();\n\t}\n  \n\tget radius() {\n\t  return this._radius;\n\t}\n  \n\tset radius(v) {\n\t  this._radius = v;\n\t  this.redraw();\n\t}\n  \n\tsetupUniforms(operation) {\n\t  super.setupUniforms(operation);\n  \n\t  const owner = operation.shaderOwner;\n\t  const renderPrecision = this.ctx.stage.getRenderPrecision();\n\t  this._setUniform('x', this._x * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('y', this._y * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('w', this._w * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('h', this._h * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('magnification', this._magnification, this.gl.uniform1f);\n\t  this._setUniform(\n\t\t'radius',\n\t\t(this._radius + 0.5) * renderPrecision,\n\t\tthis.gl.uniform1f\n\t  );\n\t  this._setUniform(\n\t\t'resolution',\n\t\tnew Float32Array([\n\t\t  owner._w * renderPrecision,\n\t\t  owner._h * renderPrecision\n\t\t]),\n\t\tthis.gl.uniform2fv\n\t  );\n\t}\n \n\tuseDefault() {\n\t  return this._w === 0 && this._h === 0;\n\t}\n  }\n  \n  MagnifierShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n  \n  MagnifierShader.fragmentShaderSource = `\n\t  #ifdef GL_ES\n\t\t# ifdef GL_FRAGMENT_PRECISION_HIGH\n\t\tprecision highp float;\n\t\t# else\n\t\tprecision lowp float;\n\t\t# endif\n\t  #endif\n\n\t  varying vec2 vTextureCoord;\n\t  varying vec4 vColor;\n\t  uniform sampler2D uSampler;\n\t  uniform float x;\n\t  uniform float y;\n\t  uniform float w;\n\t  uniform float h;\n\t  uniform vec2 resolution;\n\t  uniform float radius;\n\t  uniform float magnification;\n  \n\t  float roundBox(vec2 p, vec2 b, float r) {\n\t\t  float d = length(max(abs(p)-b+r, 0.1))-r;\n\t\t  return smoothstep(1.0, 0.0, d);\n\t  }\n\n\t  float inside(vec2 v) {\n\t\tvec2 s = step(vec2(0.0, 0.0), v) - step(vec2(1.0, 1.0), v);\n\t\treturn s.x * s.y;   \n      }\n  \n\t  void main(void) {\n\t\tvec4 color = texture2D(uSampler, vTextureCoord);\n\t\tvec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\n\t\tvec2 size = vec2(w, h) / 2.0;\n\t\tfloat b = roundBox(pos, size, radius);\n\t\tvec2 pos2 = (vTextureCoord.xy * magnification * resolution + vec2(x, y) * magnification) / resolution;\n\t\tgl_FragColor = mix(color, texture2D(uSampler, pos2) * inside(pos2), b) * vColor;\n\t  }\n  `;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class SpinnerShader2 extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._period = 1;\n        this._stroke = 0;\n        this._showDot = true;\n        this._clockwise = true;\n        this._bc = 0xff000000;\n        this._normalizedBC = this._getNormalizedColor(this._bc);\n        this._c = 0xffffffff;\n        this._normalizedC = this._getNormalizedColor(this._c);\n    }\n\n    set radius(v) {\n        if(v === 0) {\n            v = 1;\n        }\n        this._radius = v;\n    }\n\n    set stroke(value) {\n        this._stroke = Math.abs(value);\n    }\n\n    get stroke() {\n        return this._stroke;\n    }\n\n    set color(argb) {\n        this._c = argb;\n        this._normalizedC = this._getNormalizedColor(argb);\n    }\n\n    get color() {\n        return this._c;\n    }\n\n    set backgroundColor(argb) {\n        this._bc = argb;\n        this._normalizedBC = this._getNormalizedColor(argb);\n    }\n\n    get backgroundColor() {\n        return this._sc;\n    }\n\n    set showDot(bool) {\n        this._showDot = bool;\n    }\n\n    get showDot() {\n        return this._showDot;\n    }\n\n    set clockwise(bool) {\n        this._clockwise = bool;\n    }\n\n    get clockwise() {\n        return this._clockwise;\n    }\n\n    set period(v) {\n        this._period = v;\n    }\n\n    get period() {\n        return this._period;\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n        const radius = this._radius || (owner._w / 2);\n\n        if(this._stroke === 0) {\n            this._stroke = radius * 0.33;\n        }\n\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\n        this._setUniform('color', this._normalizedC, this.gl.uniform4fv);\n        this._setUniform('backgroundColor', this._normalizedBC, this.gl.uniform4fv);\n        this._setUniform('stroke',  this._stroke, this.gl.uniform1f);\n        this._setUniform('radius',  radius, this.gl.uniform1f);\n        this._setUniform('direction',  this._clockwise ? -1 : 1, this.gl.uniform1f);\n        this._setUniform('showDot', !!this._showDot, this.gl.uniform1f);\n        this._setUniform('time', Date.now() - SpinnerShader2.spinSync, this.gl.uniform1f);\n        this._setUniform('period', this._period, this.gl.uniform1f);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n\n        if(this._sc !== this._bc || this._stroke !== radius * 0.5) {\n            this.redraw();\n        }\n    }\n}\n\nSpinnerShader2.spinSync = Date.now();\n\nSpinnerShader2.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    \n    #define PI 3.14159265359\n    \n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    \n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 color;\n    uniform vec4 backgroundColor;\n    uniform float direction;\n    uniform float radius;\n    uniform float time;\n    uniform float stroke;\n    uniform float showDot;\n    uniform float period;\n    uniform float alpha;\n    \n    float circleDist(vec2 p, float radius){\n        return length(p) - radius;\n    }\n    \n    float fillMask(float dist){\n        return clamp(-dist, 0.0, 1.0);\n    }\n    \n    void main() {\n        vec2 halfRes = 0.5 * resolution.xy;\n        vec2 center = vTextureCoord.xy * resolution - halfRes;\n        \n        float c = max(-circleDist(center, radius - stroke), circleDist(center, radius));\n        float rot = -(time / 1000.0 / period) * 6.0 * direction;\n        center *= mat2(cos(rot), sin(rot), -sin(rot), cos(rot));\n        \n        float a = direction * atan(center.x, center.y) * PI * 0.05 + 0.45;\n        \n        float strokeRad = stroke * 0.5;\n        a = mix(a, max(a, fillMask(circleDist(vec2(center.x, center.y + (radius - strokeRad)), strokeRad))), showDot);\n        vec4 base = mix(vec4(0.0), backgroundColor * alpha, fillMask(c));\n        gl_FragColor = mix(base, color * alpha, fillMask(c) * a);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Application from \"./application/Application.mjs\";\nimport Component from \"./application/Component.mjs\";\nimport Base from \"./tree/Base.mjs\";\nimport Utils from \"./tree/Utils.mjs\";\nimport StageUtils from \"./tree/StageUtils.mjs\";\nimport Element from \"./tree/Element.mjs\";\nimport ElementCore from \"./tree/core/ElementCore.mjs\";\nimport ElementTexturizer from \"./tree/core/ElementTexturizer.mjs\";\nimport Texture from \"./tree/Texture.mjs\";\n\nimport Tools from \"./tools/Tools.mjs\";\nimport ObjMerger from \"./tools/ObjMerger.mjs\";\nimport ObjectListProxy from \"./tools/ObjectListProxy.mjs\";\nimport ObjectListWrapper from \"./tools/ObjectListWrapper.mjs\";\n\nimport RectangleTexture from \"./textures/RectangleTexture.mjs\";\nimport NoiseTexture from \"./textures/NoiseTexture.mjs\";\nimport TextTexture from \"./textures/TextTexture.mjs\";\nimport ImageTexture from \"./textures/ImageTexture.mjs\";\nimport HtmlTexture from \"./textures/HtmlTexture.mjs\";\nimport StaticTexture from \"./textures/StaticTexture.mjs\";\nimport StaticCanvasTexture from \"./textures/StaticCanvasTexture.mjs\";\nimport SourceTexture from \"./textures/SourceTexture.mjs\";\n\nimport ListComponent from \"./components/ListComponent.mjs\";\nimport FastBlurComponent from \"./components/FastBlurComponent.mjs\";\nimport BloomComponent from \"./components/BloomComponent.mjs\";\nimport SmoothScaleComponent from \"./components/SmoothScaleComponent.mjs\";\nimport BorderComponent from \"./components/BorderComponent.mjs\";\nimport EventEmitter from \"./EventEmitter.mjs\";\n\nimport WebGLShader from \"./renderer/webgl/WebGLShader.mjs\";\nimport WebGLDefaultShader from \"./renderer/webgl/shaders/DefaultShader.mjs\";\nimport { WebGLGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport BoxBlurShader from \"./renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DitheringShader from \"./renderer/webgl/shaders/DitheringShader.mjs\";\nimport CircularPushShader from \"./renderer/webgl/shaders/CircularPushShader.mjs\";\nimport InversionShader from \"./renderer/webgl/shaders/InversionShader.mjs\";\nimport LinearBlurShader from \"./renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport OutlineShader from \"./renderer/webgl/shaders/OutlineShader.mjs\";\nimport PixelateShader from \"./renderer/webgl/shaders/PixelateShader.mjs\";\nimport RadialFilterShader from \"./renderer/webgl/shaders/RadialFilterShader.mjs\";\nimport RoundedRectangleShader from \"./renderer/webgl/shaders/RoundedRectangleShader.mjs\";\nimport FadeOutShader from \"./renderer/webgl/shaders/FadeOutShader.mjs\";\nimport VignetteShader from \"./renderer/webgl/shaders/VignetteShader.mjs\";\nimport SpinnerShader from \"./renderer/webgl/shaders/SpinnerShader.mjs\";\nimport HoleShader from \"./renderer/webgl/shaders/HoleShader.mjs\";\nimport RadialGradientShader from \"./renderer/webgl/shaders/RadialGradientShader.mjs\";\nimport Light3dShader from \"./renderer/webgl/shaders/Light3dShader.mjs\";\nimport PerspectiveShader from \"./renderer/webgl/shaders/PerspectiveShader.mjs\";\nimport MagnifierShader from \"./renderer/webgl/shaders/MagnifierShader.mjs\";\n\nimport C2dShader from \"./renderer/c2d/C2dShader.mjs\";\nimport C2dDefaultShader from \"./renderer/c2d/shaders/DefaultShader.mjs\";\nimport { C2dGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport C2dBlurShader from \"./renderer/c2d/shaders/BlurShader.mjs\";\n\nimport Stage from \"./tree/Stage.mjs\";\nimport SpinnerShader2 from './renderer/webgl/shaders/SpinnerShader2.mjs';\n\nconst lightning = {\n    Application,\n    Component,\n    Base,\n    Utils,\n    StageUtils,\n    Element,\n    Tools,\n    Stage,\n    ElementCore,\n    ElementTexturizer,\n    Texture,\n    EventEmitter,\n    shaders: {\n        Grayscale: WebGLGrayscaleShader,\n        BoxBlur: BoxBlurShader,\n        Dithering: DitheringShader,\n        CircularPush: CircularPushShader,\n        Inversion: InversionShader,\n        LinearBlur: LinearBlurShader,\n        Outline: OutlineShader,\n        Pixelate: PixelateShader,\n        RadialFilter: RadialFilterShader,\n        RoundedRectangle: RoundedRectangleShader,\n        Spinner2: SpinnerShader2,\n        FadeOut: FadeOutShader,\n        Hole: HoleShader,\n        Vignette: VignetteShader,\n        Spinner: SpinnerShader,\n        RadialGradient: RadialGradientShader,\n        Light3d: Light3dShader,\n        Perspective: PerspectiveShader,\n        Magnifier: MagnifierShader,\n        WebGLShader,\n        WebGLDefaultShader,\n        C2dShader,\n        C2dDefaultShader,\n        c2d: {\n            Grayscale: C2dGrayscaleShader,\n            Blur: C2dBlurShader\n        }\n    },\n    textures: {\n        RectangleTexture,\n        NoiseTexture,\n        TextTexture,\n        ImageTexture,\n        HtmlTexture,\n        StaticTexture,\n        StaticCanvasTexture,\n        SourceTexture\n    },\n    components: {\n        FastBlurComponent,\n        BloomComponent,\n        SmoothScaleComponent,\n        BorderComponent,\n        ListComponent\n    },\n    tools: {\n        ObjMerger,\n        ObjectListProxy,\n        ObjectListWrapper\n    }\n};\n\nif (Utils.isWeb) {\n    window.lng = lightning;\n}\n\nexport default lightning;\n"],"names":["StageUtils","value","mergeNumbers","v1","v2","p","rgb","r","g","b","rgba","a","getRgbString","color","getRgbaString","toFixed","getRgbaStringFromArray","Math","floor","getRgbaComponentsNormalized","argb","getRgbComponentsNormalized","getRgbaComponents","getArgbNumber","max","min","v","mergeColors","c1","c2","r1","round","c","t","n","length","i","g1","b1","a1","mergeMultiColorsEqual","alpha","rad","deg","PI","getTimingBezier","d","xc","xb","xa","yc","yb","ya","time","cbxd","dx","it","minT","maxT","getTimingFunction","str","s","indexOf","parts","substr","split","warn","parseFloat","isNaN","Utils","isFunction","isNumber","isInteger","isBoolean","isString","clone","isObjectLiteral","Array","isArray","getDeepClone","cloneObjShallow","obj","keys","Object","obj1","obj2","isObject","type","isPlainObject","constructor","index","arr","getModuloIndex","len","ceil","equalObjectLiterals","equalArrays","keys1","keys2","k1","k2","equalValues","this","setToArray","result","forEach","push","iteratorToArray","iterator","iteratorResult","next","done","isUcChar","charcode","isWeb","window","sparkscene","isWPE","navigator","userAgent","isSpark","Utils$1","isNode","isPS4","isZiggo","Base","defaultSetter","name","settings","names","patchObjectProperty","console","error","setter","setSetting","charAt","__local","local","func","SpacingCalculator","getSpacing","mode","numberOfItems","remainingSpace","spacePerGap","spacingBefore","spacingBetween","itemGaps","Error","ContentAligner","layout","_classCallCheck","_layout","_totalCrossAxisSize","get","_lines","init","_getTotalCrossAxisSize","align","crossAxisSize","_this$_getSpacing","_getSpacing","lines","growSize","_flexContainer","alignContent","currentPos","crossAxisLayoutOffset","aligner","createItemAligner","finalCrossAxisLayoutSize","crossAxisLayoutSize","setCrossAxisLayoutSize","setCrossAxisLayoutOffset","recursiveResizeOccured","setItemPositions","total","FlexUtils","item","horizontal","parent","target","getParent","flexParent","getAxisLayoutSize","getTotalPadding","w","h","funcW","_allowRelAxisSizeFunction","getParentAxisSizeWithPadding","originalWidth","funcH","originalHeight","_flex","isAxisFitToContents","x","y","setAxisLayoutPos","pos","setAxisLayoutSize","size","minSize","getPlainAxisMinSize","flexItemMinSize","isFlexItemEnabled","_flexItem","_getMinSizeSetting","isFlexEnabled","getAxisMinSize","flexItem","shrink","getRelAxisSize","resizeAxis","_horizontal","resizeMainAxis","resizeCrossAxis","flex","paddingLeft","paddingTop","paddingRight","paddingBottom","marginLeft","marginTop","marginRight","marginBottom","SizeShrinker","line","_line","_amountRemaining","_shrunkSize","amount","totalShrinkAmount","_getTotalShrinkAmount","items","amountPerShrink","startIndex","endIndex","shrinkAmount","_getMainAxisMinSize","_getMainAxisLayoutSize","maxShrink","finalSize","_resizeMainAxis","abs","getShrunkSize","SizeGrower","_grownSize","grow","totalGrowAmount","_getTotalGrowAmount","amountPerGrow","growAmount","maxSize","_getMainAxisMaxSizeSetting","maxGrow","getGrownSize","ItemPositioner","lineLayout","position","_setMainAxisLayoutPos","_getMainAxisLayoutSizeWithPaddingAndMargin","_availableSpace","justifyContent","ItemAligner","_crossAxisLayoutSize","_crossAxisLayoutOffset","_alignItemsSetting","_recursiveResizeOccured","_isCrossAxisFitToContents","offset","alignItems","_alignItem","alignSelf","_preventStretch","_hasRelCrossAxisSize","_resetCrossAxisLayoutSize","_alignItemFlexStart","_alignItemFlexEnd","_alignItemFlexCenter","_alignItemStretch","_setCrossAxisLayoutPos","itemCrossAxisSize","_getCrossAxisLayoutSizeWithPaddingAndMargin","center","mainAxisLayoutSizeBeforeResize","_getCrossAxisMargin","_getCrossAxisPadding","crossAxisMinSizeSetting","_getCrossAxisMinSizeSetting","crossAxisMaxSizeSetting","_getCrossAxisMaxSizeSetting","_resizeCrossAxis","hasFixedCrossAxisSize","_hasFixedCrossAxisSize","forceStretch","LineLayout","availableSpace","performLayout","_setItemSizes","_calcLayoutInfo","_growItemSizes","_shrinkItemSizes","grower","shrinker","_calcCrossAxisMaxLayoutSize","getMainAxisMinSize","mainAxisMinSize","_getMainAxisMinSizeWithPaddingAndMargin","noSpecifiedCrossAxisSize","isCrossAxisFitToContents","resizingCrossAxis","isWrapping","_crossAxisMaxLayoutSize","_getCrossAxisMaxLayoutSize","crossAxisMaxSize","LineLayouter","_mainAxisMinSize","_crossAxisMinSize","_mainAxisContentSize","_getCrossAxisMinSize","layoutLines","_setup","wrap","_layoutFlexItem","itemMainAxisSize","_curMainAxisPos","_mainAxisSize","_layoutLine","_addToMainAxisPos","flexLayout","updateTreeLayout","_resetLayoutSize","mainAxisSize","_maxMainAxisPos","_getAvailableMainAxisLayoutSpace","resizingMainAxis","isMainAxisFitToContents","crossAxisMinSize","itemCrossAxisMinSize","_getCrossAxisMinSizeWithPaddingAndMargin","ItemCoordinatesUpdater","_isReverse","_reverse","_horizontalPaddingOffset","_getHorizontalPaddingOffset","_verticalPaddingOffset","_getVerticalPaddingOffset","finalize","parentFlex","getParentFlexContainer","_finalizeItemAndChildren","_finalizeRoot","_finalizeItems","getAxisLayoutPos","_getHorizontalPadding","_getVerticalPadding","clearRecalcFlag","setLayout","validCache","_validateItemCache","_finalizeItem","_finalizeItemChildren","recalc","performResizeMainAxis","performResizeCrossAxis","_reverseMainAxisLayoutPos","_getHorizontalMarginOffset","_getVerticalMarginOffset","endPos","_getMainAxisLayoutPos","reversedPos","FlexLayout","flexContainer","_lineLayouter","_resizingMainAxis","_resizingCrossAxis","_cachedMainAxisSizeAfterLayout","_cachedCrossAxisSizeAfterLayout","_shrunk","layoutTree","_updateSubTreeLayout","updateItemCoords","_performUpdateLayoutTree","_performUpdateLayoutTreeFromCache","_setInitialAxisSizes","_layoutAxes","_refreshLayoutCache","enableLocalRecalcFlag","_layoutMainAxis","_getMainAxisBasis","_getCrossAxisBasis","_layoutCrossAxis","_layoutLines","_fitMainAxisSizeToContents","mainAxisContentSize","totalCrossAxisSize","_fitCrossAxisSizeToContents","_hasFixedMainAxisBasis","_hasFixedCrossAxisBasis","isZeroAxisSize","_checkValidCacheMainAxisResize","targetMainAxisSize","isShrinking","ctr","getPaddingOffset","set","FlexContainer","_item","Layout","_wrap","_alignItems","_justifyContent","_alignContent","_paddingLeft","_paddingTop","_paddingRight","_paddingBottom","_changedDimensions","changedDimensions","_changedContents","changedContents","f","direction","ALIGN_ITEMS","join","ALIGN_CONTENT","JUSTIFY_CONTENT","patch","patchObject","FlexItem","_ctr","_grow","_shrink","SHRINK_AUTO","_alignSelf","undefined","_minWidth","_minHeight","_maxWidth","_maxHeight","_marginLeft","_marginTop","_marginRight","_marginBottom","parseInt","_changed","_getDefaultShrink","_resetHorizontalAxisLayoutSize","_resetVerticalAxisLayoutSize","_getMaxSizeSetting","_getCrossAxisLayoutSize","_getMainAxisPadding","_getMainAxisMargin","getTotalMargin","getMarginOffset","FlexTarget","_target","_recalc","_enabled","_originalX","_originalY","_originalWidth","_originalHeight","_flexItemDisabled","_items","layoutFlexTree","isChanged","_enableFlex","_disableFlex","_ensureFlexItem","_checkEnabled","_clearFlexItemsCache","_enableChildrenAsFlexItems","_disableChildrenAsFlexItems","children","_children","_enableFlexItem","_disableFlexItem","_parent","_resetOffsets","enabled","isEnabled","_enable","_disable","_setupTargetForFlex","enableFlexLayout","_restoreTargetToNonFlex","disableFlexLayout","setDimensions","_x","_y","_w","_h","from","to","isFlexContainer","_changedChildren","setVisible","_getFlexItems","visible","isFlexItem","originalX","originalY","funcX","funcY","changeWidth","changeHeight","_updateRecalc","forceLayout","changeExternalWidth","changeExternalHeight","newRecalcFlags","getNewRecalcFlags","_updateRecalcBottomUp","triggerLayout","flags","childRecalc","newRecalc","_getRecalcFromChangedChildRecalc","mainAxisRecalcFlag","crossAxisRecalcFlag","isWidthDynamic","isHeightDynamic","combinedRecalc","shrunk","setOriginalXWithoutUpdatingLayout","setOriginalYWithoutUpdatingLayout","TextureSource","manager","loader","id","stage","textures","Set","_activeTextureCount","lookupId","_cancelCb","loadingSince","_nativeTexture","permanent","renderInfo","_isResultTexture","_loadError","_imageRef","_hasAlpha","addTexture","has","add","removeTexture","delete","incActiveTextureCount","becomesUsed","decActiveTextureCount","becomesUnused","forEachEnabledElement","cb","_this","texture","_newArrowCheck","elements","bind","hasEnabledElements","forEachActiveElement","_this2","_this3","element","active","getRenderWidth","getRenderHeight","allowCleanup","isUsed","load","cancel","isLoading","isLoaded","isError","reload","free","_this4","forceSync","isResultTexture","Date","getTime","err","options","destroyed","onError","source","isUpdatingFrame","throttle","processLoadedSource","textureThrottler","genericCancelCb","setSource","hasAlpha","width","height","imageRef","flipTextureY","_flipTextureY","_isNativeTexture","hasOwnProperty","uploadTextureSource","onLoad","_this5","forceRenderUpdate","update","frameCounter","forceUpdateRenderCoords","_updateTextureCoords","clearNativeTexture","replaceNativeTexture","newNativeTexture","_this6","prevNativeTexture","onTextureSourceLoaded","_setDisplayedTexture","_updateDimensions","e","_this7","onTextureSourceLoadError","freeTextureSource","WebGLTexture","prototype","isTextureSource","ElementTexturizer","elementCore","_element","_core","ctx","lazy","_colorize","_renderTexture","_renderTextureReused","_resultTextureSource","_renderOffscreen","empty","updateRenderToTextureEnabled","setHasRenderUpdates","_setRecalc","_getTextureSource","textureManager","updateResultTexture","hasResultTexture","resultTextureInUse","resultTexture","getResultTexture","nativeTexture","core","mustRenderToTexture","_hasRenderUpdates","deactivate","release","releaseRenderTexture","reuseTextureAsRenderTexture","hasRenderTexture","getRenderTexture","allocateRenderTexture","ElementCore","_onUpdate","_pRecalc","_worldContext","ElementCoreContext","_hasUpdates","_localAlpha","_onAfterCalcs","_onAfterUpdate","_localPx","_localPy","_localTa","_localTb","_localTc","_localTd","_isComplex","_dimsUnknown","_clipping","_zSort","_outOfBounds","_displayedTextureSource","_zContextUsage","_zIndexedChildren","_renderContext","renderState","_scissor","_shaderOwner","_updateTreeOrder","_colorUl","_colorUr","_colorBl","_colorBr","_optFlags","_funcX","_funcY","_funcW","_funcH","_scaleX","_scaleY","_pivotX","_pivotY","_mountX","_mountY","_rotation","_alpha","_visible","_ulx","_uly","_brx","_bry","_zIndex","_forceZIndexContext","_zParent","_isRoot","_zIndexResort","_shader","_renderToTextureEnabled","_texturizer","_useRenderToTexture","_boundsMargin","_recBoundsMargin","_withinBoundsMargin","_viewport","_clipbox","render","_renderSimple","hasFlexLayout","_disableFuncX","_updateLocalTranslateDelta","_triggerRecalcTranslate","_disableFuncY","disableFuncW","disableFuncH","_updateLocalTransform","scaleX","_updateLocalTranslate","prev","_updateLocalAlpha","_updateEnabledFlag","_sr","sin","_cr","cos","_setLocalTransform","_recalcLocalTranslate","pivotXMul","pivotYMul","px","py","dy","_addLocalTranslate","_setLocalAlpha","_setHasUpdates","setParent","prevIsZContext","isZContext","prevParent","setZParent","findZContext","enableZContext","disableZContext","enableZSort","newShaderOwner","_setShaderOwnerRecursive","force","forceZSort","child","splice","removeChildAt","removeChildren","syncChildren","removed","added","order","fromIndex","toIndex","isEstimate","arguments","setTextureCoords","ulx","uly","brx","bry","setDisplayedTextureSource","textureSource","setAsRoot","root","coordsWidth","coordsHeight","isAncestorOf","newZParent","decZContextUsage","hadZContextUsage","incZContextUsage","zIndex","prevZContext","_getZIndexedDescs","results","_getZIndexedDescsRec","sortZIndexedChildren","slice","prevShader","shader","defaultShader","_setShaderOwnerChildrenRecursive","_hasRenderContext","texturizer","_enableRenderToTexture","_disableRenderToTexture","_renderAdvanced","isWhite","hasSimpleTexCoords","_stashTexCoords","_stashedTexCoords","_unstashTexCoords","_stashColors","_stashedColors","_unstashColors","isVisible","_applyRelativeDimFuncs","pw","ta","td","tb","tc","pr","updateTreeOrder","useRenderToTexture","sx","sy","ex","ey","bboxW","bboxH","rComplex","nx","ny","isSquare","area","lx","ly","_disableWithinBoundsMargin","withinMargin","renderOffscreen","_enableWithinBoundsMargin","isIdentity","IDENTITY","updateOutOfBounds","changedDims","onDimensionsChanged","setShader","activeShader","setScissor","addQuad","hasRenderUpdates","renderTextureInfo","prevRenderTextureInfo","mustRenderChildren","renderToTextureCount","cleared","ignore","cache","isCachingTexturizer","setRenderTextureInfo","finishedRenderTexture","renderTextureReused","setTexturizer","colorize","ptr","m","j","sort","mergeResult","getCornerPoints","relX","relY","collectAtCoord","inBound","inScissor","tx","ty","sc","_ensureLayout","EventEmitter","_hasEventListeners","listener","_eventFunction","_eventListeners","combiner","wrapper","arg1","arg2","arg3","off","__originalFunc","on","current","listeners","_step","_iterator","_createForOfIteratorHelper","l","map","emit","listenerCount","removeAllListeners","object","_i","_arr","_toConsumableArray","addAsMixin","cls","once","removeListener","Shader","coreContext","_initialized","_elements","addElement","removeElement","cleanup","redraw","useDefault","addEmpty","renderer","createShader","isShader","isValidShaderType","getWebGL","getC2d","Texture","_activeCount","_source","_resizeMode","_precision","mw","mh","clipping","_mustUpdate","hasUpdateSourceTexture","_performUpdateSource","removeUpdateSourceTexture","incActiveCount","decActiveCount","_checkForNewerReusableTextureSource","_applyResizeMode","reusable","_getReusableTextureSource","_replaceTextureSource","_getLookupId","_getSourceLoader","_getIsValid","_updateSource","addUpdateSourceTexture","getTextureSource","getReusableTextureSource","newSource","oldSource","loadError","_ref","_ref$type","_ref$w","_ref$h","_ref$clipX","clipX","_ref$clipY","clipY","_clearResizeMode","_applyResizeCover","_applyResizeContain","_updatePrecision","_updateClipping","scaleY","scale","desiredSize","choppedOffPixels","enableClipping","disableClipping","self","displayedTexture","onDisplayedTextureClippingChanged","onPrecisionChanged","getNonDefaults","nonDefaults","precision","isAutosizeTexture","isTexture","ImageTexture","_super","call","_src","src","getOption","fc","charCodeAt","platform","loadSrcTexture","_get","_getPrototypeOf","getFontSetting","fontFace","fontStyle","fontSize","defaultFontFace","ff","ffs","curFf","isZeroWidthSpace","space","isSpace","measureText","context","word","reduce","acc","char","TextTextureRenderer","canvas","_stage","_canvas","_context","getContext","_settings","getPrecision","setFontProperties","font","textBaseline","rtl","_load","document","fonts","fontSetting","check","text","catch","then","draw","loadPromise","drawText","_draw","_calculateRenderInfo","offsetY","lineHeight","wordWrapWidth","cutSx","cutEx","cutSy","cutEy","letterSpacing","textIndent","linesInfo","innerWidth","textOverflow","wordWrap","suffix","maxLinesSuffix","wrapWord","wrapText","maxLines","usedLines","otherLines","al","remainingText","moreTextLines","maxLineWidth","lineWidths","lineWidth","baselineOffset","linePositionX","linePositionY","globalAlpha","fillRect","translate","drawLines","verticalAlign","textAlign","highlight","highlightColor","hlHeight","highlightHeight","highlightOffset","hlPaddingLeft","highlightPaddingLeft","hlPaddingRight","highlightPaddingRight","fillStyle","drawLine","prevShadowSettings","shadow","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","textColor","fillText","textSplit","suffixWidth","wordLen","wordWidth","cutoffIndex","truncWordWidth","substring","indent","spaceRegex","allLines","realNewlines","resultLines","spaceLeft","words","spaces","match","wordWidthWithSpace","concat","TextTextureRendererAdvanced","baseFont","fontBaselineRatio","wordBreak","wrapWidth","tokenize","parse","measure","resetFontStyle","lineNo","lineNum","baselineOffsetInPx","vaOffset","_step2","_iterator2","_step3","_iterator3","firstWord","lastWord","shift","pop","_step4","_iterator4","lastLineText","filter","_suffix","_step5","_iterator5","spl","alignLine","_step6","_iterator6","_step7","_iterator7","canvasWidth","canvasHeight","hlColor","hlOffset","defaultColor","currentColor","_step8","_iterator8","_step9","_iterator9","letters","_step10","_iterator10","tokenizeString","tokenRegex","delimeters","final","tokens","italic","bold","colorStack","colorRegexp","test","matched","exec","o","parsed","_step11","_iterator11","applyFontStyle","_step12","_iterator12","breakIndex","totalWidth","_step13","_iterator13","_objectSpread","_breakIndex","_this$_getBreakIndex","_getBreakIndex","initialX","_step14","prevWidth","prevX","_iterator14","TextTexture","_text","_fontStyle","_fontBaselineRatio","_fontSize","_fontFace","_wordWrap","_wordWrapWidth","_wordBreak","_textOverflow","_lineHeight","_textBaseline","_textAlign","_verticalAlign","_offsetY","_maxLines","_maxLinesSuffix","_textColor","_shadow","_shadowColor","_shadowOffsetX","_shadowOffsetY","_shadowBlur","_highlight","_highlightHeight","_highlightColor","_highlightOffset","_highlightPaddingLeft","_highlightPaddingRight","_cutSx","_cutEx","_cutSy","_cutEy","_advancedRenderer","_letterSpacing","_textIndent","_rtl","_set","toString","advancedRenderer","args","cloneArgs","gl","getDrawingCanvas","texParams","sharpCfg","sharpen","getRenderPrecision","TEXTURE_MAG_FILTER","NEAREST","assign","getTextureOptionsForDrawingCanvas","proto","SourceTexture","_textureSource","Transition","property","_getter","getGetter","_setter","getSetter","_merger","merger","getMerger","_startValue","_targetValue","_p","_delayLeft","start","targetValue","isAttached","reset","delay","_updateDrawValue","finish","stop","removeActive","pause","play","addActive","getDrawValue","attached","isRunning","progress","dt","delayLeft","duration","invokeListeners","updateTargetValue","timingFunctionImpl","_timingFunctionImpl","startValue","skipDelay","isTransition","ObjectList","_refs","addAt","currentIndex","createItem","setAt","ref","onAdd","replaceByRef","existingItem","getByRef","replace","prevItem","getIndex","onMove","onSet","getAt","remove","removeAt","onRemove","clear","onSync","isItem","_getRefs","clearRef","_setByObject","_setByArray","refs","crefs","cref","idx","_equalsArray","array","same","marker","newItems","_setItems","prevItems","ElementChildList","_connectParent","prevChildList","childList","_setParent","addChildAt","gc","setChildAt","moveChild","createElement","isElement","Element","__id","__start","__core","__ref","__attached","__enabled","__active","__parent","__texture","__displayedTexture","__tags","__treeTags","__tagRoot","__childList","_throwError","removeTag","_addTag","setRef","_updateAttachedFlag","isRoot","_unsetTagsParent","_setTagsParent","_updateCollision","getDepth","depth","getAncestor","getAncestors","getAncestorAtDepth","levels","getSharedAncestor","o1","o2","l1","l2","_isAttached","_isEnabled","_isActive","withinBoundsMargin","newAttached","_onSetup","_onAttach","_onDetach","newEnabled","_onEnabled","_setEnabledFlag","_onDisabled","_unsetEnabledFlag","_setActiveFlag","_unsetActiveFlag","filters","_enableTexture","_onActive","_disableTexture","_hasTexturizer","_onInactive","_onResize","_getRenderWidth","_getRenderHeight","textureIsLoaded","loadTexture","_enableTextureError","prevTexture","prevSource","displayedTextureSource","sourceChanged","unknownSize","tx1","ty1","tx2","ty2","iw","ih","rw","rh","ph","tempty","tag","tags","tagSet","_loop","parentTreeTags","comp","Map","_loop2","_getByTag","getTags","setTags","removes","adds","hasTag","currentTags","addTag","list","_tag","mtag","values","res","level","resn","sel","path","select","selectors","_select","pointIdx","isRef","arrowIdx","_selectChilds","subPath","_next","getLocationString","localTags","getSettings","getPrettyString","childArray","missing","pivotX","pivotY","pivot","mountX","mountY","mount","rotation","colorUl","colorUr","colorBl","colorBr","forceZIndexContext","clipbox","tnd","renderToTexture","renderToTextureLazy","colorizeResultTexture","boundsMargin","offsetX","_collision","collision","_allowChildrenAccess","hasChildren","rectangleTexture","enableTextTexture","onUpdate","onAfterCalcs","onAfterUpdate","forceUpdate","create","rtt","getTexture","paths","firstCharCode","message","animation","animations","createAnimation","transition","_getTransition","_setTransition","setSmooth","fastForward","_transitions","isTransitionSettings","transitions","defaultTransitionSettings","createSettings","_removeTransition","toJSON","tree","collectChildren","getProperties","colorKeys","JSON","stringify","k","childStr","isEmpty","propertyPath","getter","PROP_GETTERS","Function","PROP_SETTERS","isColorProperty","toLowerCase","properties","props","key","StateMachine","setupStateMachine","fire","event","_hasMethod","_len","_key","_getState","_state","__path","_inState","statePath","currentStatePath","state","_sm","getStateByPath","currentState","__level","stateAtLevel","_getStateAtLevel","_hasMember","member","setStateId","_setStateCounter","_setStateId","newState","_stateMap","prevState","hasDifferentEnterMethod","$enter","hasDifferentExitMethod","$exit","sharedState","_getSharedState","sharedLevel","exitStates","_getStatesUntilLevel","__setState","_callExit","enterStates","reverse","_callEnter","_changedState","apply","_onStateChange","hasParent","_stateIndex","__index","_initStateMachine","_routedType","_getMostSpecificHandledMember","memberNames","cur","memberName","StateMachineType","getStateMemberAlias","targetConstructor","router","setPrototypeOf","stateMachineType","states","state1","state2","state1Array","_getAncestorStates","state2Array","_type","_router","_createRouter","_getStateMap","_addStateMemberDelegatorsToRouter","_inherits","StateMachineRouter","_createSuper","_isRouter","original","_mixinStateMachineMethods","getOwnPropertyNames","descriptor","getOwnPropertyDescriptor","defineProperty","_getAllMemberNames","_addMemberRouter","statePaths","descriptors","aliases","_getDescriptor","alias","descType","_getDescriptorType","_addMethodRouter","_addGetterSetterRouters","isValid","curState","getPrototypeOf","code","supportsSpread","_supportsSpread","functionBody","_getGetterRouter","_getSetterRouter","_this8","_this9","stateMap","members","_this10","_getStateMemberNames","_this11","_getStateMemberNamesForType","_this12","_isStateLocalMember","_createStateMap","_addState","parentState","_this13","__state","__name","_addStaticStateProperty","parentPath","_states","subState","stateName","_getStateName","__supportsSpread","Component","tagRoot","_assertThisInitialized","__initialized","__firstActive","__firstEnable","__signals","__passSignals","__construct","getTemplateFunc","_build","__onStateChange","application","updateFocusPath","_refocus","__bindProperty","propObj","targetObj","targetProp","prop","propDependencies","propName","__func","__obj","__prop","_step$value","__init","_attach","_detach","_firstEnable","_firstActive","_active","_inactive","_construct","_init","_focus","newTarget","prevTarget","_focusChange","_getFocused","hasFinalFocus","_focusPath","hasFocus","seekAncestorByType","cparent","getSharedAncestorComponent","ancestor","isComponent","signal","_signal","signalParent","_getParentSignalHandler","fireEvent","passSignal","_getSignalHandler","_signalProxy","fireAncestors","startsWith","_len2","_key2","_doFireAncestors","bindProp","__propertyBinding","hasName","parseTemplate","_template","loc","store","rid","parseTemplateRec","cursor","childCursor","propKey","parseTemplatePropRec","shaderCursor","parsePropertyBindings","subs","collectSubComponents","getComponent","CoreQuadList","quadTextures","quadElements","dataLength","getElement","getElementCore","getTextureWidth","getTextureHeight","WebGLCoreQuadList","byteSize","data","ArrayBuffer","floats","Float32Array","uints","Uint32Array","getAttribsDataByteOffset","getQuadContents","CoreQuadOperation","shaderOwner","scissor","quads","getElementWidth","renderWidth","getElementHeight","renderHeight","WebGLCoreQuadOperation","extraAttribsDataByteOffset","coords","getRenderTextureCoords","getProjection","renderExec","_projection","projection","CoreRenderExecutor","destroy","_reset","_bindRenderTexture","_setScissor","_clearRenderTexture","execute","qops","quadOperations","_processQuadOperation","quadOperation","_setupQuadOperation","_execQuadOperation","op","_renderQuadOperation","renderTexture","WebGLCoreRenderExecutor","_attribsBuffer","createBuffer","maxQuads","byteLength","allIndices","Uint16Array","_quadsBuffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","STATIC_DRAW","deleteBuffer","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","enable","BLEND","disable","DEPTH_TEST","_stopShaderProgram","_setupBuffers","ARRAY_BUFFER","DYNAMIC_DRAW","_useShaderProgram","beforeDraw","afterDraw","operation","hasSameProgram","_currentShaderProgram","stopProgram","useProgram","setupUniforms","bindFramebuffer","FRAMEBUFFER","framebuffer","viewport","clearColor","COLOR_BUFFER_BIT","glClearColor","getClearColor","SCISSOR_TEST","CoreRenderState","getDefaultShader","createCoreQuadList","_renderTextureInfo","_realShader","_check","_texturizerTemporary","_quadOperation","_temporaryTexturizers","_isCachingTexturizer","owner","getScissor","_cacheTexturizer","_hasChanges","_finishQuadOperation","_createQuadOperation","_isRenderTextureReusable","isRenderTextureReusable","q","createCoreQuadOperation","finishRenderState","WebGLShaderProgram","vertexShaderSource","fragmentShaderSource","_program","_uniformLocations","_attributeLocations","_currentUniformValues","compile","createProgram","glVertShader","_glCompile","VERTEX_SHADER","glFragShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","VALIDATE_STATUS","getError","getProgramInfoLog","deleteProgram","deleteShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getUniformLocation","location","getAttribLocation","_valueClone","setUniformValue","glFunction","_valueEquals","clonedValue","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","WebGLShader","shaderPrograms","glProgram","initialize","_uniform","_attrib","_setUniform","beforeUsage","enableAttribs","afterUsage","disableAttribs","other","getExtraAttribBytesPerVertex","getVertexAttribPointerOffset","_getProjection","getFlipY","DefaultShader","vertexAttribPointer","FLOAT","enableVertexAttribArray","UNSIGNED_BYTE","disableVertexAttribArray","uniform2fv","glTexture","bindTexture","TEXTURE_2D","drawElements","TRIANGLES","UNSIGNED_SHORT","DefaultShader$1","Renderer","_defaultShader","aggressive","_createDefaultShader","shaderType","_getShaderBaseType","convertedShaderType","_getShaderAlternative","copyRenderTexture","WebGLRenderer","_compressedTextureExtensions","astc","getExtension","etc1","s3tc","pvrtc","getCompressedTextureExtensions","shaderProgram","createCoreRenderExecutor","createCoreRenderState","createRenderTexture","createTexture","texImage2D","RGBA","texParameteri","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","params","format","internalFormat","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","freeRenderTexture","deleteFramebuffer","deleteTexture","fmt","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","RGB","UNSIGNED_BYTE_5_6_5","compressed","premultiplyAlpha","flipBlueRed","texOptions","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_FLIP_BLUE_RED","uploadCompressedGlTexture","uploadGlTexture","bytesPerPixel","_getBytesPerPixel","mca","mergeColorAlpha","cx","cy","extra","setExtraAttribsInBuffer","copyTexSubImage2D","ow","oh","C2dCoreQuadList","renderContexts","modes","getRenderContext","getSimpleTc","getWhite","C2dCoreQuadOperation","C2dCoreRenderExecutor","_mainRenderTexture","getCanvas","_getContext","setTransform","globalCompositeOperation","beginPath","rect","closePath","fill","clearRect","_restoreContext","restore","save","_equalScissorAreas","clip","C2dShader","_rectangleTexture","_tintManager","tintManager","vc","rc","white","stc","info","_setColorGradient","_beforeDrawEl","_afterDrawEl","sourceX","sourceY","sourceW","sourceH","tintTexture","getTintTexture","drawImage","gradient","transparency","createLinearGradient","addColorStop","C2dTextureTintManager","_usedMemory","_cachedNativeTextures","_addMemoryUsage","delta","addMemoryUsage","_delete","_hasCache","_getCache","prevMemUsage","memoryUsage","frame","lf","u","_tintTexture","before","reuseTexture","after","col","_tintCache","C2dTintCache","releaseBlancoTextures","_tx","_colors","_blancoTextures","_lastCleanupFrame","_memTextures","C2dRenderer","TextureTintManager","setupC2d","c2d","buffer","imageData","ImageData","Uint8ClampedArray","putImageData","setRenderContext","setWhite","setSimpleTc","SparkShader","elementPostion","paint","SparkRenderer","global","beginDrawing","ret","endDrawing","ImageWorker","_id","_initWorker","_worker","terminate","createWorker","blob","Blob","blobURL","URL","webkitURL","createObjectURL","Worker","postMessage","config","href","protocol","onmessage","ImageWorkerImage","image","_manager","_onError","_onLoad","ImageWorkerServer","_receiveMessage","ImageWorkerServerItem","_onFinish","_xhr","_mimeType","_canceled","isPathAbsolute","base","_relativeBase","onFinish","imageBitmap","hasAlphaChannel","_ref2","isWPEBrowser","XMLHttpRequest","open","responseType","onerror","oEvent","onload","response","_createImageBitmap","send","createImageBitmap","colorSpaceConversion","imageOrientation","_hasAlphaChannel","abort","WebPlatform","_looping","_awaitingLoop","_loopHandler","_idleLoopCounter","_idleLoopDelay","_onIdle","_imageWorker","_registerVisibilityChangeHandler","clearInterval","_removeKeyHandler","_removeClickHandler","_removeHoverHandler","_removeScrollWheelHandler","_removeVisibilityChangeHandler","startLoop","loop","stopLoop","switchLoop","onIdle","setInterval","updateFrame","idleFrame","requestAnimationFrame","lp","renderFrame","view","pvr","mipmaps","DataView","compressedTexImage2D","glInternalFormat","pixelWidth","pixelHeight","HTMLImageElement","HTMLVideoElement","ImageBitmap","HTMLCanvasElement","getImageData","arraybuffer","getUint32","littleEndian","glType","glTypeSize","glFormat","glBaseInternalFormat","pixelDepth","numberOfArrayElements","numberOfFaces","numberOfMipmapLevels","bytesOfKeyValueData","kvps","includes","imageSize","pvrHeaderLength","arrayBuffer","header","Int32Array","dataOffset","pvrtcData","Uint8Array","byteOffset","cancelCb","isPng","isKtx","isPvr","request","addEventListener","handleKtxLoad","handlePvrLoad","Image","crossOrigin","removeAttribute","opts","antialias","premultipliedAlpha","stencil","preserveDrawingBuffer","getHrTime","performance","now","changes","registerKeydownHandler","keyhandler","_keydownListener","registerKeyupHandler","_keyupListener","removeEventListener","registerClickHandler","clickHandler","_clickListener","registerHoverHandler","hoverHandler","_hoverListener","registerScrollWheelHandler","_scrollWheelListener","_visibilityChangeHandler","visibilityState","PlatformLoader","WebGLState","_gl","_buffers","_framebuffers","_renderbuffers","_vertexAttribs","_nonDefaultFlags","_textures","_maxTexture","_activeTexture","TEXTURE0","_pixelStorei","_getDefaultFlag","cap","DITHER","change","setProgram","program","va","equal","setActiveTexture","changed","activeIndex","_getTextureIndex","targetIndex","_getTextureTargetIndex","pname","param","_getPixelStoreiIndex","migrate","_migrateFlags","_useProgram","_migrateFramebuffers","_migrateRenderbuffers","buffersChanged","_migrateBuffers","_migrateAttributes","_migrateSettings","_migratePixelStorei","_migrateTextures","_getDefaultPixelStoreiByIndex","_getPixelStoreiByIndex","activeTexture","sTargets","tTargets","textureNumb","_getTextureByIndex","_getTextureTargetByIndex","_bindTexture","_bindBuffer","_bindFramebuffer","renderbuffer","_bindRenderbuffer","attrib","_vertexAttribPointer","_enableVertexAttribArray","_disableVertexAttribArray","defaults","getDefaultSettings","xname","tValue","setting","_defaultSettings","WebGLRenderingContext","FUNC_ADD","ZERO","BACK","LESS","CCW","ALWAYS","KEEP","_textureTargetIndices","_pixelStoreiIndices","_pixelStoreiDefaults","BROWSER_DEFAULT_WEBGL","WebGLStateManager","_initStateManager","switchState","$useProgram","fb","setBuffer","setFramebuffer","setRenderbuffer","$enable","setFlag","$disable","$viewport","$scissor","$disableVertexAttribArray","$enableVertexAttribArray","normalized","stride","$activeTexture","setPixelStorei","$stencilFuncSeparate","face","mask","FRONT","_stencilFuncSeparateFront","_stencilFuncSeparateBack","FRONT_AND_BACK","_stencilFuncSeparateFrontAndBack","_stencilFuncSeparate","_stencilMaskSeparateFront","_stencilMaskSeparateBack","_stencilMaskSeparateFrontAndBack","_stencilMaskSeparate","$stencilOpSeparate","fail","zfail","zpass","_stencilOpSeparateFront","_stencilOpSeparateBack","_stencilOpSeparateFrontAndBack","_stencilOpSeparate","$blendColor","red","green","blue","_blendColor","$blendEquation","_blendEquation","modeRGB","modeAlpha","_blendEquationSeparate","sfactor","dfactor","_blendFunc","$blendFuncSeparate","srcRGB","dstRGB","srcAlpha","dstAlpha","_blendFuncSeparate","$clearColor","_clearColor","$clearDepth","_clearDepth","$clearStencil","_clearStencil","$colorMask","_colorMask","$cullFace","_cullFace","$depthFunc","_depthFunc","$depthMask","flag","_depthMask","zNear","zFar","_depthRange","$frontFace","_frontFace","$lineWidth","_lineWidth","factor","units","_polygonOffset","invert","_sampleCoverage","$stencilFunc","_stencilFunc","$stencilMask","_stencilMask","$stencilOp","_stencilOp","indx","_vertexAttrib1f","_vertexAttrib1fv","$vertexAttrib2f","_vertexAttrib2f","_vertexAttrib2fv","$vertexAttrib3f","z","_vertexAttrib3f","_vertexAttrib3fv","_vertexAttrib4f","_vertexAttrib4fv","__proto__","method","WebGLStateManager$1","TextureManager","_uploadedTextureSources","textureSourceHashmap","_nativeFreeTextureSource","_nativeUploadTextureSource","addToLookupMap","_updateVramUsage","sign","usage","Stage","isWebglSupported","addVramUsage","freeUnusedTextureSources","remainingTextureSources","ts","_freeManagedTextureSource","_cleanupLookupMap","managed","TextureThrottler","_remove","_sources","_data","processSome","_processItem","MAX_UPLOAD_TIME_PER_FRAME","CoreContext","_renderTexturePool","_renderTextureId","_zSorts","_freeRenderTexture","_render","_update","_performForcedZSorts","zSort","debugFrame","_fillRenderState","_readPixels","_performRender","log","pixels","readPixels","prec","_createRenderTexture","freeUnusedRenderTextures","maxAge","limit","TransitionSettings","_timingFunction","TransitionManager","transitionSettings","MultiSpline","_clear","_pe","_idp","_f","_v","_lv","_s","_ve","_sme","_se","_length","def","defaultSmoothness","lv","last","pe","idp","sm","pi","ni","nc","pc","ve","sme","se","getSplineRgbaValueFunction","getSplineValueFunction","_add","_getItem","getValue","p1","p2","i2","s1","s2","dp","helpers","getSplineHelpers","calculateSpline","cv1","cv2","csx","csy","cex","cey","yd","AnimationActionSettings","animationSettings","_selector","_props","_propSetters","_resetValue","_hasResetValue","_hasColorProperty","getResetValue","getAnimatedElements","sv","hasColorProperty","selector","resetValue","isAnimationActionSettings","AnimationSettings","_actions","repeat","repeatOffset","repeatDelay","autostop","stopMethod","STOP_METHODS","FADE","_stopTimingFunction","_stopTimingFunctionImpl","stopDuration","stopDelay","aas","action","REVERSE","FORWARD","IMMEDIATE","ONETOTWO","Animation","STATES","IDLE","_repeatsLeft","_stopDelayLeft","_stopP","PLAYING","checkActive","PAUSED","STOPPING","FINISHED","replay","STOPPED","stopNow","isPaused","isPlaying","isStopping","isFinished","isActive","_progress","_stopProgress","_getStopDuration","_progressStopTransition","stopTimingFunctionImpl","AnimationManager","RectangleTexture","_setOptions","_lastGcFrame","_usedVramAlpha","_usedVramNonAlpha","platformType","createWebGLContext","createCanvasContext","_mode","ratio","style","_options","_renderer","setClearColor","startTime","currentTime","_updateSourceTextures","isWebgl","isC2d","opt","setApplication","app","resume","_updatingFrame","_calculateDt","fixedDt","nextFrame","drawFrame","memoryUsageBefore","gcTextureMemory","gcRenderTextureMemory","usedMemory","addServiceProvider","serviceprovider","Application","_temp_options","booting","__updateFocusCounter","__keypressTimers","__hoveredChild","updateFocusSettings","__keymap","_receiveKeydown","_receiveKeyup","_receiveClick","_receiveHover","_recieveScrollWheel","__options","__updateFocus","notOverridden","__updateFocusRec","updateFocusId","__updateFocusId","newFocusPath","__getFocusPath","newFocusedComponent","prevFocusedComponent","_unfocus","focusedComponent","focusSettings","defaultSetFocusSettings","_setFocusSettings","defaultHandleFocusSettings","_handleFocusSettings","__prevFocusSettings","prevSettings","focused","prevFocused","nextFocus","newParts","focusTopDownEvent","events","focusPath","_path$i","returnValue","focusBottomUpEvent","_path$i2","keyCode","hasTimer","longpress","consumer","_startLongpressTimer","clearTimeout","lookup","timeout","setTimeout","clientX","clientY","fireTopDownScrollWheelHandler","fireBottomUpScrollWheelHandler","affected","_findChildren","_captureScroll","_getTargetChild","_handleScroll","fireBottomUpClickHandler","_child$core$_worldCon","localCoords","_handleClick","fireBottomUpHoverHandler","hoveredBranch","newHoveredBranch","elem","_handleUnhover","diffBranch","_handleHover","lastElement","hoverableChildren","_withinClickableRange","bucket","affectedChildren","cursorX","cursorY","candidates","cw","finalW","ch","finalH","_testCollision","_destroyed","_destroy","timer","StaticCanvasTexture","_factory","_lookupId","factory","_ref$lookupId","Tools","canvasFactory","content","getRoundRect","radius","strokeWidth","strokeColor","fillColor","createRoundRect","getCanvasTexture","imageSmoothingEnabled","moveTo","lineTo","arcTo","strokeStyle","stroke","blur","margin","createShadowRect","getSvgTexture","url","createSvg","img","ObjMerger","isMf","__mf","mf","aks","bks","ai","bi","aksl","aIndex","curIndex","akey","bv","av","merge","ObjectListProxy","ObjectListWrapper","_wrapper","NoiseTexture","noise","random","REPEAT","HtmlTexture","_htmlElement","_scale","innerHTML","htmlElement","firstElementChild","html2canvas","getPreloadArea","appendChild","backgroundColor","removeChild","_preloadArea","attachShadow","opacity","pointerEvents","display","top","overflow","body","StaticTexture","ListComponent","_thisSuper","_reloadVisibleElements","_visibleItems","_index","_started","_scrollTransitionSettings","_itemSize","_viewportScrollOffset","_itemScrollOffset","_roll","_rollMin","_rollMax","_progressAnimation","_invertDirection","itemList","ListItems","_scrollTransition","setIndex","immediate","closest","nElements","realIndex","diff","viewportSize","scrollDelta","getAxisPosition","ps","wasVisible","invisibleItem","getWrapper","setPrevious","setNext","_super2","checkStarted","ri","LinearBlurShader","_direction","_kernelRadius","uniform1i","BoxBlurShader","BlurShader","_amount","FastBlurComponent","_paddingX","_paddingY","_updateBlurSize","Wrap","WebGLFastBlurComponent","C2dFastBlurComponent","_textwrap","paddingX","paddingY","kernelRadius","_amountToKernelRadius","Textwrap","C2dBlurShader","Content","getSpline","_multiSpline","_super3","_layers","_output","_buildLayers","filterShaders","_setLayerTexture","getLayerContents","getLayer","steps","step","fw","fh","otherTextureSource","Layers","L0","L1","L2","L3","Result","FastBlurOutputShader","_super4","_a","_otherTextureSource","uniform1f","TEXTURE1","BloomComponent","BloomBase","BloomBaseShader","SmoothScaleComponent","_smoothScale","_iterations","its","_setIterations","scalers","first","useScalers","ContentWrap","Scale","contentWrap","BorderComponent","_borderTop","_borderRight","_borderBottom","_borderLeft","borderWidth","borderWidthTop","borderWidthRight","borderWidthBottom","borderWidthLeft","colorBorderTop","colorBorderRight","colorBorderBottom","colorBorderLeft","borderTop","borderRight","borderBottom","borderLeft","Borders","Top","Right","Bottom","Left","WebGLGrayscaleShader","_WebGLDefaultShader","_createClass","C2dGrayscaleShader","WebGLDefaultShader","_C2dDefaultShader","C2dDefaultShader","DitheringShader","_noiseTexture","_graining","_random","CircularPushShader","_inputValue","_maxDerivative","_normalizedValue","_offset","_aspectRatio","_offsetX","buckets","_buckets","_values","_getValues","full","_shiftBuckets","_valuesTexture","ALPHA","InversionShader","OutlineShader","_width","_col","_color","uniform4fv","ddw","dw","ddh","dh","PixelateShader","_size","getWebGLImpl","WebGLPixelateShaderImpl","RadialFilterShader","_radius","_cutoff","RoundedRectangleShader","_blend","_stroke","_fc","_fillColor","_getNormalizedColor","_strokeColor","num","_sc","renderPrecision","renderContext","FadeOutShader","_fade","fade","VignetteShader","_magnitude","_intensity","_pivot","SpinnerShader","_period","_angle","_smooth","_backgroundColor","_time","HoleShader","RadialGradientShader","_ic","_normalizedIC","_oc","_normalizedOC","_radiusY","innerColor","Light3dShader","_strength","_ambient","_fudge","_rx","_ry","_z","NaN","_pivotZ","_lightY","_lightZ","vr","rz","atan2","uniform3fv","lightY","lightZ","PerspectiveShader","MagnifierShader","_magnification","SpinnerShader2","_showDot","_clockwise","_bc","_normalizedBC","_c","_normalizedC","bool","spinSync","lightning","shaders","Grayscale","BoxBlur","Dithering","CircularPush","Inversion","LinearBlur","Outline","Pixelate","RadialFilter","RoundedRectangle","Spinner2","FadeOut","Hole","Vignette","Spinner","RadialGradient","Light3d","Perspective","Magnifier","Blur","components","tools","lng"],"mappings":"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"}